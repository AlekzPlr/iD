{"version":3,"file":null,"sources":["../../../modules/actions/add_entity.js","../../../modules/geo/extent.js","../../../modules/core/tags.js","../../../modules/core/entity.js","../../../modules/core/way.js","../../../modules/core/relation.js","../../../modules/core/node.js","../../../modules/core/connection.js","../../../modules/core/difference.js","../../../modules/util/util.js","../../../modules/util/session_mutex.js","../../../modules/util/suggest_names.js","../../../modules/core/graph.js","../../../modules/core/tree.js","../../../modules/ui/core/cmd.js","../../../modules/ui/core/commit.js","../../../modules/ui/core/modal.js","../../../modules/ui/core/conflicts.js","../../../modules/ui/core/toggle.js","../../../modules/ui/core/flash.js","../../../modules/ui/core/loading.js","../../../modules/ui/core/lasso.js","../../../modules/ui/core/radial_menu.js","../../../modules/ui/core/selection_list.js","../../../modules/ui/core/success.js","../../../modules/core/history.js","../../../modules/geo/intersection.js","../../../modules/geo/multipolygon.js","../../../modules/geo/raw_mercator.js","../../../modules/geo/index.js","../../../modules/actions/add_member.js","../../../modules/actions/add_midpoint.js","../../../modules/actions/add_vertex.js","../../../modules/actions/change_member.js","../../../modules/actions/change_preset.js","../../../modules/actions/change_tags.js","../../../modules/actions/circularize.js","../../../modules/actions/delete_multiple.js","../../../modules/actions/delete_relation.js","../../../modules/actions/delete_way.js","../../../modules/actions/delete_node.js","../../../modules/actions/connect.js","../../../modules/actions/copy_entities.js","../../../modules/actions/delete_member.js","../../../modules/actions/deprecate_tags.js","../../../modules/actions/discard_tags.js","../../../modules/actions/disconnect.js","../../../modules/actions/join.js","../../../modules/actions/merge.js","../../../modules/actions/merge_polygon.js","../../../modules/actions/merge_remote_changes.js","../../../modules/actions/move.js","../../../modules/actions/move_node.js","../../../modules/actions/noop.js","../../../modules/actions/orthogonalize.js","../../../modules/actions/split.js","../../../modules/actions/restrict_turn.js","../../../modules/actions/reverse.js","../../../modules/actions/revert.js","../../../modules/actions/rotate_way.js","../../../modules/actions/straighten.js","../../../modules/actions/unrestrict_turn.js","../../../modules/modes/add_area.js","../../../modules/modes/add_line.js","../../../modules/modes/add_point.js","../../../modules/modes/browse.js","../../../modules/modes/drag_node.js","../../../modules/modes/draw_area.js","../../../modules/modes/draw_line.js","../../../modules/modes/move.js","../../../modules/modes/rotate_way.js","../../../modules/modes/save.js","../../../modules/operations/circularize.js","../../../modules/operations/continue.js","../../../modules/operations/delete.js","../../../modules/operations/disconnect.js","../../../modules/operations/merge.js","../../../modules/operations/move.js","../../../modules/operations/orthogonalize.js","../../../modules/operations/reverse.js","../../../modules/operations/rotate.js","../../../modules/operations/split.js","../../../modules/operations/straighten.js","../../../modules/modes/select.js","../../../modules/behavior/edit.js","../../../modules/behavior/hover.js","../../../modules/behavior/tail.js","../../../modules/behavior/draw.js","../../../modules/behavior/add_way.js","../../../modules/behavior/breathe.js","../../../modules/behavior/copy.js","../../../modules/behavior/drag.js","../../../modules/behavior/draw_way.js","../../../modules/behavior/hash.js","../../../modules/behavior/lasso.js","../../../modules/behavior/paste.js","../../../modules/behavior/select.js","../../../modules/presets/collection.js","../../../modules/presets/category.js","../../../modules/presets/field.js","../../../modules/presets/preset.js","../../../modules/presets/presets.js","../../../modules/validations/deprecated_tag.js","../../../modules/validations/many_deletions.js","../../../modules/validations/missing_tag.js","../../../modules/validations/tag_suggests_area.js","../../../modules/renderer/background_source.js","../../../modules/renderer/tile_layer.js","../../../modules/renderer/background.js","../../../modules/renderer/features.js","../../../modules/svg/areas.js","../../../modules/svg/labels.js","../../../modules/svg/layers.js","../../../modules/svg/lines.js","../../../modules/svg/midpoints.js","../../../modules/svg/points.js","../../../modules/svg/vertices.js","../../../modules/renderer/map.js"],"sourcesContent":["export function AddEntity(way) {\n    return function(graph) {\n        return graph.replace(way);\n    };\n}\n","import { metersToLat, metersToLon } from './index';\nexport function Extent(min, max) {\n    if (!(this instanceof Extent)) return new Extent(min, max);\n    if (min instanceof Extent) {\n        return min;\n    } else if (min && min.length === 2 && min[0].length === 2 && min[1].length === 2) {\n        this[0] = min[0];\n        this[1] = min[1];\n    } else {\n        this[0] = min        || [ Infinity,  Infinity];\n        this[1] = max || min || [-Infinity, -Infinity];\n    }\n}\n\nExtent.prototype = new Array(2);\n\n_.extend(Extent.prototype, {\n    equals: function (obj) {\n        return this[0][0] === obj[0][0] &&\n            this[0][1] === obj[0][1] &&\n            this[1][0] === obj[1][0] &&\n            this[1][1] === obj[1][1];\n    },\n\n    extend: function(obj) {\n        if (!(obj instanceof Extent)) obj = new Extent(obj);\n        return Extent([Math.min(obj[0][0], this[0][0]),\n                              Math.min(obj[0][1], this[0][1])],\n                             [Math.max(obj[1][0], this[1][0]),\n                              Math.max(obj[1][1], this[1][1])]);\n    },\n\n    _extend: function(extent) {\n        this[0][0] = Math.min(extent[0][0], this[0][0]);\n        this[0][1] = Math.min(extent[0][1], this[0][1]);\n        this[1][0] = Math.max(extent[1][0], this[1][0]);\n        this[1][1] = Math.max(extent[1][1], this[1][1]);\n    },\n\n    area: function() {\n        return Math.abs((this[1][0] - this[0][0]) * (this[1][1] - this[0][1]));\n    },\n\n    center: function() {\n        return [(this[0][0] + this[1][0]) / 2,\n                (this[0][1] + this[1][1]) / 2];\n    },\n\n    rectangle: function() {\n        return [this[0][0], this[0][1], this[1][0], this[1][1]];\n    },\n\n    polygon: function() {\n        return [\n            [this[0][0], this[0][1]],\n            [this[0][0], this[1][1]],\n            [this[1][0], this[1][1]],\n            [this[1][0], this[0][1]],\n            [this[0][0], this[0][1]]\n        ];\n    },\n\n    contains: function(obj) {\n        if (!(obj instanceof Extent)) obj = new Extent(obj);\n        return obj[0][0] >= this[0][0] &&\n               obj[0][1] >= this[0][1] &&\n               obj[1][0] <= this[1][0] &&\n               obj[1][1] <= this[1][1];\n    },\n\n    intersects: function(obj) {\n        if (!(obj instanceof Extent)) obj = new Extent(obj);\n        return obj[0][0] <= this[1][0] &&\n               obj[0][1] <= this[1][1] &&\n               obj[1][0] >= this[0][0] &&\n               obj[1][1] >= this[0][1];\n    },\n\n    intersection: function(obj) {\n        if (!this.intersects(obj)) return new Extent();\n        return new Extent([Math.max(obj[0][0], this[0][0]),\n                                  Math.max(obj[0][1], this[0][1])],\n                                 [Math.min(obj[1][0], this[1][0]),\n                                  Math.min(obj[1][1], this[1][1])]);\n    },\n\n    percentContainedIn: function(obj) {\n        if (!(obj instanceof Extent)) obj = new Extent(obj);\n        var a1 = this.intersection(obj).area(),\n            a2 = this.area();\n\n        if (a1 === Infinity || a2 === Infinity || a1 === 0 || a2 === 0) {\n            return 0;\n        } else {\n            return a1 / a2;\n        }\n    },\n\n    padByMeters: function(meters) {\n        var dLat = metersToLat(meters),\n            dLon = metersToLon(meters, this.center()[1]);\n        return Extent(\n                [this[0][0] - dLon, this[0][1] - dLat],\n                [this[1][0] + dLon, this[1][1] + dLat]);\n    },\n\n    toParam: function() {\n        return this.rectangle().join(',');\n    }\n\n});\n","export function interestingTag(key) {\n    return key !== 'attribution' &&\n        key !== 'created_by' &&\n        key !== 'source' &&\n        key !== 'odbl' &&\n        key.indexOf('tiger:') !== 0;\n\n}\n\nexport var oneWayTags = {\n    'aerialway': {\n        'chair_lift': true,\n        'mixed_lift': true,\n        't-bar': true,\n        'j-bar': true,\n        'platter': true,\n        'rope_tow': true,\n        'magic_carpet': true,\n        'yes': true\n    },\n    'highway': {\n        'motorway': true,\n        'motorway_link': true\n    },\n    'junction': {\n        'roundabout': true\n    },\n    'man_made': {\n        'piste:halfpipe': true\n    },\n    'piste:type': {\n        'downhill': true,\n        'sled': true,\n        'yes': true\n    },\n    'waterway': {\n        'river': true,\n        'stream': true\n    }\n};\n\nexport var pavedTags = {\n    'surface': {\n        'paved': true,\n        'asphalt': true,\n        'concrete': true\n    },\n    'tracktype': {\n        'grade1': true\n    }\n};\n","import { interestingTag } from './tags';\n\nexport function Entity(attrs) {\n    // For prototypal inheritance.\n    if (this instanceof Entity) return;\n\n    // Create the appropriate subtype.\n    if (attrs && attrs.type) {\n        return Entity[attrs.type].apply(this, arguments);\n    } else if (attrs && attrs.id) {\n        return Entity[Entity.id.type(attrs.id)].apply(this, arguments);\n    }\n\n    // Initialize a generic Entity (used only in tests).\n    return (new Entity()).initialize(arguments);\n}\n\nEntity.id = function(type) {\n    return Entity.id.fromOSM(type, Entity.id.next[type]--);\n};\n\nEntity.id.next = {node: -1, way: -1, relation: -1};\n\nEntity.id.fromOSM = function(type, id) {\n    return type[0] + id;\n};\n\nEntity.id.toOSM = function(id) {\n    return id.slice(1);\n};\n\nEntity.id.type = function(id) {\n    return {'n': 'node', 'w': 'way', 'r': 'relation'}[id[0]];\n};\n\n// A function suitable for use as the second argument to d3.selection#data().\nEntity.key = function(entity) {\n    return entity.id + 'v' + (entity.v || 0);\n};\n\nEntity.prototype = {\n    tags: {},\n\n    initialize: function(sources) {\n        for (var i = 0; i < sources.length; ++i) {\n            var source = sources[i];\n            for (var prop in source) {\n                if (Object.prototype.hasOwnProperty.call(source, prop)) {\n                    if (source[prop] === undefined) {\n                        delete this[prop];\n                    } else {\n                        this[prop] = source[prop];\n                    }\n                }\n            }\n        }\n\n        if (!this.id && this.type) {\n            this.id = Entity.id(this.type);\n        }\n        if (!this.hasOwnProperty('visible')) {\n            this.visible = true;\n        }\n\n        if (iD.debug) {\n            Object.freeze(this);\n            Object.freeze(this.tags);\n\n            if (this.loc) Object.freeze(this.loc);\n            if (this.nodes) Object.freeze(this.nodes);\n            if (this.members) Object.freeze(this.members);\n        }\n\n        return this;\n    },\n\n    copy: function(resolver, copies) {\n        if (copies[this.id])\n            return copies[this.id];\n\n        var copy = Entity(this, {id: undefined, user: undefined, version: undefined});\n        copies[this.id] = copy;\n\n        return copy;\n    },\n\n    osmId: function() {\n        return Entity.id.toOSM(this.id);\n    },\n\n    isNew: function() {\n        return this.osmId() < 0;\n    },\n\n    update: function(attrs) {\n        return Entity(this, attrs, {v: 1 + (this.v || 0)});\n    },\n\n    mergeTags: function(tags) {\n        var merged = _.clone(this.tags), changed = false;\n        for (var k in tags) {\n            var t1 = merged[k],\n                t2 = tags[k];\n            if (!t1) {\n                changed = true;\n                merged[k] = t2;\n            } else if (t1 !== t2) {\n                changed = true;\n                merged[k] = _.union(t1.split(/;\\s*/), t2.split(/;\\s*/)).join(';');\n            }\n        }\n        return changed ? this.update({tags: merged}) : this;\n    },\n\n    intersects: function(extent, resolver) {\n        return this.extent(resolver).intersects(extent);\n    },\n\n    isUsed: function(resolver) {\n        return _.without(Object.keys(this.tags), 'area').length > 0 ||\n            resolver.parentRelations(this).length > 0;\n    },\n\n    hasInterestingTags: function() {\n        return _.keys(this.tags).some(interestingTag);\n    },\n\n    isHighwayIntersection: function() {\n        return false;\n    },\n\n    deprecatedTags: function() {\n        var tags = _.toPairs(this.tags);\n        var deprecated = {};\n\n        iD.data.deprecated.forEach(function(d) {\n            var match = _.toPairs(d.old)[0];\n            tags.forEach(function(t) {\n                if (t[0] === match[0] &&\n                    (t[1] === match[1] || match[1] === '*')) {\n                    deprecated[t[0]] = t[1];\n                }\n            });\n        });\n\n        return deprecated;\n    }\n};\n","import { Entity } from './entity';\nimport { oneWayTags } from './tags';\nimport { cross, Extent } from '../geo/index';\n\nexport function Way() {\n    if (!(this instanceof Way)) {\n        return (new Way()).initialize(arguments);\n    } else if (arguments.length) {\n        this.initialize(arguments);\n    }\n}\n\nEntity.way = Way;\n\nWay.prototype = Object.create(Entity.prototype);\n\n_.extend(Way.prototype, {\n    type: 'way',\n    nodes: [],\n\n    copy: function(resolver, copies) {\n        if (copies[this.id])\n            return copies[this.id];\n\n        var copy = Entity.prototype.copy.call(this, resolver, copies);\n\n        var nodes = this.nodes.map(function(id) {\n            return resolver.entity(id).copy(resolver, copies).id;\n        });\n\n        copy = copy.update({nodes: nodes});\n        copies[this.id] = copy;\n\n        return copy;\n    },\n\n    extent: function(resolver) {\n        return resolver.transient(this, 'extent', function() {\n            var extent = Extent();\n            for (var i = 0; i < this.nodes.length; i++) {\n                var node = resolver.hasEntity(this.nodes[i]);\n                if (node) {\n                    extent._extend(node.extent());\n                }\n            }\n            return extent;\n        });\n    },\n\n    first: function() {\n        return this.nodes[0];\n    },\n\n    last: function() {\n        return this.nodes[this.nodes.length - 1];\n    },\n\n    contains: function(node) {\n        return this.nodes.indexOf(node) >= 0;\n    },\n\n    affix: function(node) {\n        if (this.nodes[0] === node) return 'prefix';\n        if (this.nodes[this.nodes.length - 1] === node) return 'suffix';\n    },\n\n    layer: function() {\n        // explicit layer tag, clamp between -10, 10..\n        if (this.tags.layer !== undefined) {\n            return Math.max(-10, Math.min(+(this.tags.layer), 10));\n        }\n\n        // implied layer tag..\n        if (this.tags.location === 'overground') return 1;\n        if (this.tags.location === 'underground') return -1;\n        if (this.tags.location === 'underwater') return -10;\n\n        if (this.tags.power === 'line') return 10;\n        if (this.tags.power === 'minor_line') return 10;\n        if (this.tags.aerialway) return 10;\n        if (this.tags.bridge) return 1;\n        if (this.tags.cutting) return -1;\n        if (this.tags.tunnel) return -1;\n        if (this.tags.waterway) return -1;\n        if (this.tags.man_made === 'pipeline') return -10;\n        if (this.tags.boundary) return -10;\n        return 0;\n    },\n\n    isOneWay: function() {\n        // explicit oneway tag..\n        if (['yes', '1', '-1'].indexOf(this.tags.oneway) !== -1) { return true; }\n        if (['no', '0'].indexOf(this.tags.oneway) !== -1) { return false; }\n\n        // implied oneway tag..\n        for (var key in this.tags) {\n            if (key in oneWayTags && (this.tags[key] in oneWayTags[key]))\n                return true;\n        }\n        return false;\n    },\n\n    lanes: function() {\n        // function parseTurnLane(str) {\n        //     if (!str || str === '') return null;\n        //\n        //     return str.split('|').map(function(s) {\n        //         return s.split(';');\n        //     });\n        // }\n\n        if (!this.tags.highway) return null;\n        var defaultLanes = {}, tagged = {};\n        switch (this.tags.highway) {\n            case 'trunk':\n            case 'motorway':\n                defaultLanes.count = this.isOneWay() ? 2 : 4;\n                break;\n            default:\n                defaultLanes.count = this.isOneWay() ? 1 : 2;\n                break;\n        }\n\n        tagged.oneway = this.isOneWay();\n        tagged.lanes = {};\n\n        if (this.tags.lanes) tagged.lanes.count = this.tags.lanes;\n        if (this.tags['lanes:forward']) tagged.lanes.forward = this.tags['lanes:forward'];\n        if (this.tags['lanes:backward']) tagged.lanes.backward = this.tags['lanes:backward'];\n\n        return {\n            defaults: {\n                lanes: defaultLanes\n            },\n            tagged: tagged\n        };\n    },\n\n    isClosed: function() {\n        return this.nodes.length > 0 && this.first() === this.last();\n    },\n\n    isConvex: function(resolver) {\n        if (!this.isClosed() || this.isDegenerate()) return null;\n\n        var nodes = _.uniq(resolver.childNodes(this)),\n            coords = _.map(nodes, 'loc'),\n            curr = 0, prev = 0;\n\n        for (var i = 0; i < coords.length; i++) {\n            var o = coords[(i+1) % coords.length],\n                a = coords[i],\n                b = coords[(i+2) % coords.length],\n                res = cross(o, a, b);\n\n            curr = (res > 0) ? 1 : (res < 0) ? -1 : 0;\n            if (curr === 0) {\n                continue;\n            } else if (prev && curr !== prev) {\n                return false;\n            }\n            prev = curr;\n        }\n        return true;\n    },\n\n    isArea: function() {\n        if (this.tags.area === 'yes')\n            return true;\n        if (!this.isClosed() || this.tags.area === 'no')\n            return false;\n        for (var key in this.tags)\n            if (key in iD.areaKeys && !(this.tags[key] in iD.areaKeys[key]))\n                return true;\n        return false;\n    },\n\n    isDegenerate: function() {\n        return _.uniq(this.nodes).length < (this.isArea() ? 3 : 2);\n    },\n\n    areAdjacent: function(n1, n2) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i] === n1) {\n                if (this.nodes[i - 1] === n2) return true;\n                if (this.nodes[i + 1] === n2) return true;\n            }\n        }\n        return false;\n    },\n\n    geometry: function(graph) {\n        return graph.transient(this, 'geometry', function() {\n            return this.isArea() ? 'area' : 'line';\n        });\n    },\n\n    addNode: function(id, index) {\n        var nodes = this.nodes.slice();\n        nodes.splice(index === undefined ? nodes.length : index, 0, id);\n        return this.update({nodes: nodes});\n    },\n\n    updateNode: function(id, index) {\n        var nodes = this.nodes.slice();\n        nodes.splice(index, 1, id);\n        return this.update({nodes: nodes});\n    },\n\n    replaceNode: function(needle, replacement) {\n        if (this.nodes.indexOf(needle) < 0)\n            return this;\n\n        var nodes = this.nodes.slice();\n        for (var i = 0; i < nodes.length; i++) {\n            if (nodes[i] === needle) {\n                nodes[i] = replacement;\n            }\n        }\n        return this.update({nodes: nodes});\n    },\n\n    removeNode: function(id) {\n        var nodes = [];\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            if (node !== id && nodes[nodes.length - 1] !== node) {\n                nodes.push(node);\n            }\n        }\n\n        // Preserve circularity\n        if (this.nodes.length > 1 && this.first() === id && this.last() === id && nodes[nodes.length - 1] !== nodes[0]) {\n            nodes.push(nodes[0]);\n        }\n\n        return this.update({nodes: nodes});\n    },\n\n    asJXON: function(changeset_id) {\n        var r = {\n            way: {\n                '@id': this.osmId(),\n                '@version': this.version || 0,\n                nd: _.map(this.nodes, function(id) {\n                    return { keyAttributes: { ref: Entity.id.toOSM(id) } };\n                }),\n                tag: _.map(this.tags, function(v, k) {\n                    return { keyAttributes: { k: k, v: v } };\n                })\n            }\n        };\n        if (changeset_id) r.way['@changeset'] = changeset_id;\n        return r;\n    },\n\n    asGeoJSON: function(resolver) {\n        return resolver.transient(this, 'GeoJSON', function() {\n            var coordinates = _.map(resolver.childNodes(this), 'loc');\n            if (this.isArea() && this.isClosed()) {\n                return {\n                    type: 'Polygon',\n                    coordinates: [coordinates]\n                };\n            } else {\n                return {\n                    type: 'LineString',\n                    coordinates: coordinates\n                };\n            }\n        });\n    },\n\n    area: function(resolver) {\n        return resolver.transient(this, 'area', function() {\n            var nodes = resolver.childNodes(this);\n\n            var json = {\n                type: 'Polygon',\n                coordinates: [_.map(nodes, 'loc')]\n            };\n\n            if (!this.isClosed() && nodes.length) {\n                json.coordinates[0].push(nodes[0].loc);\n            }\n\n            var area = d3.geo.area(json);\n\n            // Heuristic for detecting counterclockwise winding order. Assumes\n            // that OpenStreetMap polygons are not hemisphere-spanning.\n            if (area > 2 * Math.PI) {\n                json.coordinates[0] = json.coordinates[0].reverse();\n                area = d3.geo.area(json);\n            }\n\n            return isNaN(area) ? 0 : area;\n        });\n    }\n});\n","import { Entity } from './entity';\nimport { Extent, joinWays, polygonContainsPolygon, polygonIntersectsPolygon } from '../geo/index';\n\nexport function Relation() {\n    if (!(this instanceof Relation)) {\n        return (new Relation()).initialize(arguments);\n    } else if (arguments.length) {\n        this.initialize(arguments);\n    }\n}\nEntity.relation = Relation;\n\nRelation.prototype = Object.create(Entity.prototype);\n\nRelation.creationOrder = function(a, b) {\n    var aId = parseInt(Entity.id.toOSM(a.id), 10);\n    var bId = parseInt(Entity.id.toOSM(b.id), 10);\n\n    if (aId < 0 || bId < 0) return aId - bId;\n    return bId - aId;\n};\n\n_.extend(Relation.prototype, {\n    type: 'relation',\n    members: [],\n\n    copy: function(resolver, copies) {\n        if (copies[this.id])\n            return copies[this.id];\n\n        var copy = Entity.prototype.copy.call(this, resolver, copies);\n\n        var members = this.members.map(function(member) {\n            return _.extend({}, member, {id: resolver.entity(member.id).copy(resolver, copies).id});\n        });\n\n        copy = copy.update({members: members});\n        copies[this.id] = copy;\n\n        return copy;\n    },\n\n    extent: function(resolver, memo) {\n        return resolver.transient(this, 'extent', function() {\n            if (memo && memo[this.id]) return Extent();\n            memo = memo || {};\n            memo[this.id] = true;\n\n            var extent = Extent();\n            for (var i = 0; i < this.members.length; i++) {\n                var member = resolver.hasEntity(this.members[i].id);\n                if (member) {\n                    extent._extend(member.extent(resolver, memo));\n                }\n            }\n            return extent;\n        });\n    },\n\n    geometry: function(graph) {\n        return graph.transient(this, 'geometry', function() {\n            return this.isMultipolygon() ? 'area' : 'relation';\n        });\n    },\n\n    isDegenerate: function() {\n        return this.members.length === 0;\n    },\n\n    // Return an array of members, each extended with an 'index' property whose value\n    // is the member index.\n    indexedMembers: function() {\n        var result = new Array(this.members.length);\n        for (var i = 0; i < this.members.length; i++) {\n            result[i] = _.extend({}, this.members[i], {index: i});\n        }\n        return result;\n    },\n\n    // Return the first member with the given role. A copy of the member object\n    // is returned, extended with an 'index' property whose value is the member index.\n    memberByRole: function(role) {\n        for (var i = 0; i < this.members.length; i++) {\n            if (this.members[i].role === role) {\n                return _.extend({}, this.members[i], {index: i});\n            }\n        }\n    },\n\n    // Return the first member with the given id. A copy of the member object\n    // is returned, extended with an 'index' property whose value is the member index.\n    memberById: function(id) {\n        for (var i = 0; i < this.members.length; i++) {\n            if (this.members[i].id === id) {\n                return _.extend({}, this.members[i], {index: i});\n            }\n        }\n    },\n\n    // Return the first member with the given id and role. A copy of the member object\n    // is returned, extended with an 'index' property whose value is the member index.\n    memberByIdAndRole: function(id, role) {\n        for (var i = 0; i < this.members.length; i++) {\n            if (this.members[i].id === id && this.members[i].role === role) {\n                return _.extend({}, this.members[i], {index: i});\n            }\n        }\n    },\n\n    addMember: function(member, index) {\n        var members = this.members.slice();\n        members.splice(index === undefined ? members.length : index, 0, member);\n        return this.update({members: members});\n    },\n\n    updateMember: function(member, index) {\n        var members = this.members.slice();\n        members.splice(index, 1, _.extend({}, members[index], member));\n        return this.update({members: members});\n    },\n\n    removeMember: function(index) {\n        var members = this.members.slice();\n        members.splice(index, 1);\n        return this.update({members: members});\n    },\n\n    removeMembersWithID: function(id) {\n        var members = _.reject(this.members, function(m) { return m.id === id; });\n        return this.update({members: members});\n    },\n\n    // Wherever a member appears with id `needle.id`, replace it with a member\n    // with id `replacement.id`, type `replacement.type`, and the original role,\n    // unless a member already exists with that id and role. Return an updated\n    // relation.\n    replaceMember: function(needle, replacement) {\n        if (!this.memberById(needle.id))\n            return this;\n\n        var members = [];\n\n        for (var i = 0; i < this.members.length; i++) {\n            var member = this.members[i];\n            if (member.id !== needle.id) {\n                members.push(member);\n            } else if (!this.memberByIdAndRole(replacement.id, member.role)) {\n                members.push({id: replacement.id, type: replacement.type, role: member.role});\n            }\n        }\n\n        return this.update({members: members});\n    },\n\n    asJXON: function(changeset_id) {\n        var r = {\n            relation: {\n                '@id': this.osmId(),\n                '@version': this.version || 0,\n                member: _.map(this.members, function(member) {\n                    return { keyAttributes: { type: member.type, role: member.role, ref: Entity.id.toOSM(member.id) } };\n                }),\n                tag: _.map(this.tags, function(v, k) {\n                    return { keyAttributes: { k: k, v: v } };\n                })\n            }\n        };\n        if (changeset_id) r.relation['@changeset'] = changeset_id;\n        return r;\n    },\n\n    asGeoJSON: function(resolver) {\n        return resolver.transient(this, 'GeoJSON', function () {\n            if (this.isMultipolygon()) {\n                return {\n                    type: 'MultiPolygon',\n                    coordinates: this.multipolygon(resolver)\n                };\n            } else {\n                return {\n                    type: 'FeatureCollection',\n                    properties: this.tags,\n                    features: this.members.map(function (member) {\n                        return _.extend({role: member.role}, resolver.entity(member.id).asGeoJSON(resolver));\n                    })\n                };\n            }\n        });\n    },\n\n    area: function(resolver) {\n        return resolver.transient(this, 'area', function() {\n            return d3.geo.area(this.asGeoJSON(resolver));\n        });\n    },\n\n    isMultipolygon: function() {\n        return this.tags.type === 'multipolygon';\n    },\n\n    isComplete: function(resolver) {\n        for (var i = 0; i < this.members.length; i++) {\n            if (!resolver.hasEntity(this.members[i].id)) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    isRestriction: function() {\n        return !!(this.tags.type && this.tags.type.match(/^restriction:?/));\n    },\n\n    // Returns an array [A0, ... An], each Ai being an array of node arrays [Nds0, ... Ndsm],\n    // where Nds0 is an outer ring and subsequent Ndsi's (if any i > 0) being inner rings.\n    //\n    // This corresponds to the structure needed for rendering a multipolygon path using a\n    // `evenodd` fill rule, as well as the structure of a GeoJSON MultiPolygon geometry.\n    //\n    // In the case of invalid geometries, this function will still return a result which\n    // includes the nodes of all way members, but some Nds may be unclosed and some inner\n    // rings not matched with the intended outer ring.\n    //\n    multipolygon: function(resolver) {\n        var outers = this.members.filter(function(m) { return 'outer' === (m.role || 'outer'); }),\n            inners = this.members.filter(function(m) { return 'inner' === m.role; });\n\n        outers = joinWays(outers, resolver);\n        inners = joinWays(inners, resolver);\n\n        outers = outers.map(function(outer) { return _.map(outer.nodes, 'loc'); });\n        inners = inners.map(function(inner) { return _.map(inner.nodes, 'loc'); });\n\n        var result = outers.map(function(o) {\n            // Heuristic for detecting counterclockwise winding order. Assumes\n            // that OpenStreetMap polygons are not hemisphere-spanning.\n            return [d3.geo.area({type: 'Polygon', coordinates: [o]}) > 2 * Math.PI ? o.reverse() : o];\n        });\n\n        function findOuter(inner) {\n            var o, outer;\n\n            for (o = 0; o < outers.length; o++) {\n                outer = outers[o];\n                if (polygonContainsPolygon(outer, inner))\n                    return o;\n            }\n\n            for (o = 0; o < outers.length; o++) {\n                outer = outers[o];\n                if (polygonIntersectsPolygon(outer, inner))\n                    return o;\n            }\n        }\n\n        for (var i = 0; i < inners.length; i++) {\n            var inner = inners[i];\n\n            if (d3.geo.area({type: 'Polygon', coordinates: [inner]}) < 2 * Math.PI) {\n                inner = inner.reverse();\n            }\n\n            var o = findOuter(inners[i]);\n            if (o !== undefined)\n                result[o].push(inners[i]);\n            else\n                result.push([inners[i]]); // Invalid geometry\n        }\n\n        return result;\n    }\n});\n","// iD.Node = iD.Entity.node;\nimport { Entity } from './entity';\nimport { Extent } from '../geo/index';\n\nexport function Node() {\n    if (!(this instanceof Node)) {\n        return (new Node()).initialize(arguments);\n    } else if (arguments.length) {\n        this.initialize(arguments);\n    }\n}\n\nEntity.node = Node;\n\nNode.prototype = Object.create(Entity.prototype);\n\n_.extend(Node.prototype, {\n    type: 'node',\n\n    extent: function() {\n        return new Extent(this.loc);\n    },\n\n    geometry: function(graph) {\n        return graph.transient(this, 'geometry', function() {\n            return graph.isPoi(this) ? 'point' : 'vertex';\n        });\n    },\n\n    move: function(loc) {\n        return this.update({loc: loc});\n    },\n\n    isIntersection: function(resolver) {\n        return resolver.transient(this, 'isIntersection', function() {\n            return resolver.parentWays(this).filter(function(parent) {\n                return (parent.tags.highway ||\n                    parent.tags.waterway ||\n                    parent.tags.railway ||\n                    parent.tags.aeroway) &&\n                    parent.geometry(resolver) === 'line';\n            }).length > 1;\n        });\n    },\n\n    isHighwayIntersection: function(resolver) {\n        return resolver.transient(this, 'isHighwayIntersection', function() {\n            return resolver.parentWays(this).filter(function(parent) {\n                return parent.tags.highway && parent.geometry(resolver) === 'line';\n            }).length > 1;\n        });\n    },\n\n    asJXON: function(changeset_id) {\n        var r = {\n            node: {\n                '@id': this.osmId(),\n                '@lon': this.loc[0],\n                '@lat': this.loc[1],\n                '@version': (this.version || 0),\n                tag: _.map(this.tags, function(v, k) {\n                    return { keyAttributes: { k: k, v: v } };\n                })\n            }\n        };\n        if (changeset_id) r.node['@changeset'] = changeset_id;\n        return r;\n    },\n\n    asGeoJSON: function() {\n        return {\n            type: 'Point',\n            coordinates: this.loc\n        };\n    }\n});\n","import { Entity } from './entity';\nimport { Way } from './way';\nimport { Relation } from './relation';\nimport { Node } from './node';\nimport { Extent } from '../geo/index';\n\nexport function Connection(useHttps) {\n    if (typeof useHttps !== 'boolean') {\n      useHttps = window.location.protocol === 'https:';\n    }\n\n    var event = d3.dispatch('authenticating', 'authenticated', 'auth', 'loading', 'loaded'),\n        protocol = useHttps ? 'https:' : 'http:',\n        url = protocol + '//www.openstreetmap.org',\n        connection = {},\n        inflight = {},\n        loadedTiles = {},\n        tileZoom = 16,\n        oauth = osmAuth({\n            url: protocol + '//www.openstreetmap.org',\n            oauth_consumer_key: '5A043yRSEugj4DJ5TljuapfnrflWDte8jTOcWLlT',\n            oauth_secret: 'aB3jKq1TRsCOUrfOIZ6oQMEDmv2ptV76PA54NGLL',\n            loading: authenticating,\n            done: authenticated\n        }),\n        ndStr = 'nd',\n        tagStr = 'tag',\n        memberStr = 'member',\n        nodeStr = 'node',\n        wayStr = 'way',\n        relationStr = 'relation',\n        userDetails,\n        off;\n\n\n    connection.changesetURL = function(changesetId) {\n        return url + '/changeset/' + changesetId;\n    };\n\n    connection.changesetsURL = function(center, zoom) {\n        var precision = Math.max(0, Math.ceil(Math.log(zoom) / Math.LN2));\n        return url + '/history#map=' +\n            Math.floor(zoom) + '/' +\n            center[1].toFixed(precision) + '/' +\n            center[0].toFixed(precision);\n    };\n\n    connection.entityURL = function(entity) {\n        return url + '/' + entity.type + '/' + entity.osmId();\n    };\n\n    connection.userURL = function(username) {\n        return url + '/user/' + username;\n    };\n\n    connection.loadFromURL = function(url, callback) {\n        function done(err, dom) {\n            return callback(err, parse(dom));\n        }\n        return d3.xml(url).get(done);\n    };\n\n    connection.loadEntity = function(id, callback) {\n        var type = Entity.id.type(id),\n            osmID = Entity.id.toOSM(id);\n\n        connection.loadFromURL(\n            url + '/api/0.6/' + type + '/' + osmID + (type !== 'node' ? '/full' : ''),\n            function(err, entities) {\n                if (callback) callback(err, {data: entities});\n            });\n    };\n\n    connection.loadEntityVersion = function(id, version, callback) {\n        var type = Entity.id.type(id),\n            osmID = Entity.id.toOSM(id);\n\n        connection.loadFromURL(\n            url + '/api/0.6/' + type + '/' + osmID + '/' + version,\n            function(err, entities) {\n                if (callback) callback(err, {data: entities});\n            });\n    };\n\n    connection.loadMultiple = function(ids, callback) {\n        _.each(_.groupBy(_.uniq(ids), Entity.id.type), function(v, k) {\n            var type = k + 's',\n                osmIDs = _.map(v, Entity.id.toOSM);\n\n            _.each(_.chunk(osmIDs, 150), function(arr) {\n                connection.loadFromURL(\n                    url + '/api/0.6/' + type + '?' + type + '=' + arr.join(),\n                    function(err, entities) {\n                        if (callback) callback(err, {data: entities});\n                    });\n            });\n        });\n    };\n\n    function authenticating() {\n        event.authenticating();\n    }\n\n    function authenticated() {\n        event.authenticated();\n    }\n\n    function getLoc(attrs) {\n        var lon = attrs.lon && attrs.lon.value,\n            lat = attrs.lat && attrs.lat.value;\n        return [parseFloat(lon), parseFloat(lat)];\n    }\n\n    function getNodes(obj) {\n        var elems = obj.getElementsByTagName(ndStr),\n            nodes = new Array(elems.length);\n        for (var i = 0, l = elems.length; i < l; i++) {\n            nodes[i] = 'n' + elems[i].attributes.ref.value;\n        }\n        return nodes;\n    }\n\n    function getTags(obj) {\n        var elems = obj.getElementsByTagName(tagStr),\n            tags = {};\n        for (var i = 0, l = elems.length; i < l; i++) {\n            var attrs = elems[i].attributes;\n            tags[attrs.k.value] = attrs.v.value;\n        }\n        return tags;\n    }\n\n    function getMembers(obj) {\n        var elems = obj.getElementsByTagName(memberStr),\n            members = new Array(elems.length);\n        for (var i = 0, l = elems.length; i < l; i++) {\n            var attrs = elems[i].attributes;\n            members[i] = {\n                id: attrs.type.value[0] + attrs.ref.value,\n                type: attrs.type.value,\n                role: attrs.role.value\n            };\n        }\n        return members;\n    }\n\n    function getVisible(attrs) {\n        return (!attrs.visible || attrs.visible.value !== 'false');\n    }\n\n    var parsers = {\n        node: function nodeData(obj) {\n            var attrs = obj.attributes;\n            return new Node({\n                id: Entity.id.fromOSM(nodeStr, attrs.id.value),\n                loc: getLoc(attrs),\n                version: attrs.version.value,\n                user: attrs.user && attrs.user.value,\n                tags: getTags(obj),\n                visible: getVisible(attrs)\n            });\n        },\n\n        way: function wayData(obj) {\n            var attrs = obj.attributes;\n            return new Way({\n                id: Entity.id.fromOSM(wayStr, attrs.id.value),\n                version: attrs.version.value,\n                user: attrs.user && attrs.user.value,\n                tags: getTags(obj),\n                nodes: getNodes(obj),\n                visible: getVisible(attrs)\n            });\n        },\n\n        relation: function relationData(obj) {\n            var attrs = obj.attributes;\n            return new Relation({\n                id: Entity.id.fromOSM(relationStr, attrs.id.value),\n                version: attrs.version.value,\n                user: attrs.user && attrs.user.value,\n                tags: getTags(obj),\n                members: getMembers(obj),\n                visible: getVisible(attrs)\n            });\n        }\n    };\n\n    function parse(dom) {\n        if (!dom || !dom.childNodes) return;\n\n        var root = dom.childNodes[0],\n            children = root.childNodes,\n            entities = [];\n\n        for (var i = 0, l = children.length; i < l; i++) {\n            var child = children[i],\n                parser = parsers[child.nodeName];\n            if (parser) {\n                entities.push(parser(child));\n            }\n        }\n\n        return entities;\n    }\n\n    connection.authenticated = function() {\n        return oauth.authenticated();\n    };\n\n    // Generate Changeset XML. Returns a string.\n    connection.changesetJXON = function(tags) {\n        return {\n            osm: {\n                changeset: {\n                    tag: _.map(tags, function(value, key) {\n                        return { '@k': key, '@v': value };\n                    }),\n                    '@version': 0.6,\n                    '@generator': 'iD'\n                }\n            }\n        };\n    };\n\n    // Generate [osmChange](http://wiki.openstreetmap.org/wiki/OsmChange)\n    // XML. Returns a string.\n    connection.osmChangeJXON = function(changeset_id, changes) {\n        function nest(x, order) {\n            var groups = {};\n            for (var i = 0; i < x.length; i++) {\n                var tagName = Object.keys(x[i])[0];\n                if (!groups[tagName]) groups[tagName] = [];\n                groups[tagName].push(x[i][tagName]);\n            }\n            var ordered = {};\n            order.forEach(function(o) {\n                if (groups[o]) ordered[o] = groups[o];\n            });\n            return ordered;\n        }\n\n        function rep(entity) {\n            return entity.asJXON(changeset_id);\n        }\n\n        return {\n            osmChange: {\n                '@version': 0.6,\n                '@generator': 'iD',\n                'create': nest(changes.created.map(rep), ['node', 'way', 'relation']),\n                'modify': nest(changes.modified.map(rep), ['node', 'way', 'relation']),\n                'delete': _.extend(nest(changes.deleted.map(rep), ['relation', 'way', 'node']), {'@if-unused': true})\n            }\n        };\n    };\n\n    connection.changesetTags = function(comment, imageryUsed) {\n        var detected = iD.detect(),\n            tags = {\n                created_by: 'iD ' + iD.version,\n                imagery_used: imageryUsed.join(';').substr(0, 255),\n                host: (window.location.origin + window.location.pathname).substr(0, 255),\n                locale: detected.locale\n            };\n\n        if (comment) {\n            tags.comment = comment.substr(0, 255);\n        }\n\n        return tags;\n    };\n\n    connection.putChangeset = function(changes, comment, imageryUsed, callback) {\n        oauth.xhr({\n                method: 'PUT',\n                path: '/api/0.6/changeset/create',\n                options: { header: { 'Content-Type': 'text/xml' } },\n                content: JXON.stringify(connection.changesetJXON(connection.changesetTags(comment, imageryUsed)))\n            }, function(err, changeset_id) {\n                if (err) return callback(err);\n                oauth.xhr({\n                    method: 'POST',\n                    path: '/api/0.6/changeset/' + changeset_id + '/upload',\n                    options: { header: { 'Content-Type': 'text/xml' } },\n                    content: JXON.stringify(connection.osmChangeJXON(changeset_id, changes))\n                }, function(err) {\n                    if (err) return callback(err);\n                    // POST was successful, safe to call the callback.\n                    // Still attempt to close changeset, but ignore response because #2667\n                    // Add delay to allow for postgres replication #1646 #2678\n                    window.setTimeout(function() { callback(null, changeset_id); }, 2500);\n                    oauth.xhr({\n                        method: 'PUT',\n                        path: '/api/0.6/changeset/' + changeset_id + '/close',\n                        options: { header: { 'Content-Type': 'text/xml' } }\n                    }, d3.functor(true));\n                });\n            });\n    };\n\n    connection.userDetails = function(callback) {\n        if (userDetails) {\n            callback(undefined, userDetails);\n            return;\n        }\n\n        function done(err, user_details) {\n            if (err) return callback(err);\n\n            var u = user_details.getElementsByTagName('user')[0],\n                img = u.getElementsByTagName('img'),\n                image_url = '';\n\n            if (img && img[0] && img[0].getAttribute('href')) {\n                image_url = img[0].getAttribute('href');\n            }\n\n            userDetails = {\n                display_name: u.attributes.display_name.value,\n                image_url: image_url,\n                id: u.attributes.id.value\n            };\n\n            callback(undefined, userDetails);\n        }\n\n        oauth.xhr({ method: 'GET', path: '/api/0.6/user/details' }, done);\n    };\n\n    connection.userChangesets = function(callback) {\n        connection.userDetails(function(err, user) {\n            if (err) return callback(err);\n\n            function done(changesets) {\n                callback(undefined, Array.prototype.map.call(changesets.getElementsByTagName('changeset'),\n                    function (changeset) {\n                        return { tags: getTags(changeset) };\n                    }));\n            }\n\n            d3.xml(url + '/api/0.6/changesets?user=' + user.id).get()\n                .on('load', done)\n                .on('error', callback);\n        });\n    };\n\n    connection.status = function(callback) {\n        function done(capabilities) {\n            var apiStatus = capabilities.getElementsByTagName('status');\n            callback(undefined, apiStatus[0].getAttribute('api'));\n        }\n        d3.xml(url + '/api/capabilities').get()\n            .on('load', done)\n            .on('error', callback);\n    };\n\n    function abortRequest(i) { i.abort(); }\n\n    connection.tileZoom = function(_) {\n        if (!arguments.length) return tileZoom;\n        tileZoom = _;\n        return connection;\n    };\n\n    connection.loadTiles = function(projection, dimensions, callback) {\n\n        if (off) return;\n\n        var s = projection.scale() * 2 * Math.PI,\n            z = Math.max(Math.log(s) / Math.log(2) - 8, 0),\n            ts = 256 * Math.pow(2, z - tileZoom),\n            origin = [\n                s / 2 - projection.translate()[0],\n                s / 2 - projection.translate()[1]];\n\n        var tiles = d3.geo.tile()\n            .scaleExtent([tileZoom, tileZoom])\n            .scale(s)\n            .size(dimensions)\n            .translate(projection.translate())()\n            .map(function(tile) {\n                var x = tile[0] * ts - origin[0],\n                    y = tile[1] * ts - origin[1];\n\n                return {\n                    id: tile.toString(),\n                    extent: Extent(\n                        projection.invert([x, y + ts]),\n                        projection.invert([x + ts, y]))\n                };\n            });\n\n        function bboxUrl(tile) {\n            return url + '/api/0.6/map?bbox=' + tile.extent.toParam();\n        }\n\n        _.filter(inflight, function(v, i) {\n            var wanted = _.find(tiles, function(tile) {\n                return i === tile.id;\n            });\n            if (!wanted) delete inflight[i];\n            return !wanted;\n        }).map(abortRequest);\n\n        tiles.forEach(function(tile) {\n            var id = tile.id;\n\n            if (loadedTiles[id] || inflight[id]) return;\n\n            if (_.isEmpty(inflight)) {\n                event.loading();\n            }\n\n            inflight[id] = connection.loadFromURL(bboxUrl(tile), function(err, parsed) {\n                loadedTiles[id] = true;\n                delete inflight[id];\n\n                if (callback) callback(err, _.extend({data: parsed}, tile));\n\n                if (_.isEmpty(inflight)) {\n                    event.loaded();\n                }\n            });\n        });\n    };\n\n    connection.switch = function(options) {\n        url = options.url;\n        oauth.options(_.extend({\n            loading: authenticating,\n            done: authenticated\n        }, options));\n        event.auth();\n        connection.flush();\n        return connection;\n    };\n\n    connection.toggle = function(_) {\n        off = !_;\n        return connection;\n    };\n\n    connection.flush = function() {\n        userDetails = undefined;\n        _.forEach(inflight, abortRequest);\n        loadedTiles = {};\n        inflight = {};\n        return connection;\n    };\n\n    connection.loadedTiles = function(_) {\n        if (!arguments.length) return loadedTiles;\n        loadedTiles = _;\n        return connection;\n    };\n\n    connection.logout = function() {\n        userDetails = undefined;\n        oauth.logout();\n        event.auth();\n        return connection;\n    };\n\n    connection.authenticate = function(callback) {\n        userDetails = undefined;\n        function done(err, res) {\n            event.auth();\n            if (callback) callback(err, res);\n        }\n        return oauth.authenticate(done);\n    };\n\n    return d3.rebind(connection, event, 'on');\n}\n","/*\n    iD.Difference represents the difference between two graphs.\n    It knows how to calculate the set of entities that were\n    created, modified, or deleted, and also contains the logic\n    for recursively extending a difference to the complete set\n    of entities that will require a redraw, taking into account\n    child and parent relationships.\n */\nexport function Difference(base, head) {\n    var changes = {}, length = 0;\n\n    function changed(h, b) {\n        return h !== b && !_.isEqual(_.omit(h, 'v'), _.omit(b, 'v'));\n    }\n\n    _.each(head.entities, function(h, id) {\n        var b = base.entities[id];\n        if (changed(h, b)) {\n            changes[id] = {base: b, head: h};\n            length++;\n        }\n    });\n\n    _.each(base.entities, function(b, id) {\n        var h = head.entities[id];\n        if (!changes[id] && changed(h, b)) {\n            changes[id] = {base: b, head: h};\n            length++;\n        }\n    });\n\n    function addParents(parents, result) {\n        for (var i = 0; i < parents.length; i++) {\n            var parent = parents[i];\n\n            if (parent.id in result)\n                continue;\n\n            result[parent.id] = parent;\n            addParents(head.parentRelations(parent), result);\n        }\n    }\n\n    var difference = {};\n\n    difference.length = function() {\n        return length;\n    };\n\n    difference.changes = function() {\n        return changes;\n    };\n\n    difference.extantIDs = function() {\n        var result = [];\n        _.each(changes, function(change, id) {\n            if (change.head) result.push(id);\n        });\n        return result;\n    };\n\n    difference.modified = function() {\n        var result = [];\n        _.each(changes, function(change) {\n            if (change.base && change.head) result.push(change.head);\n        });\n        return result;\n    };\n\n    difference.created = function() {\n        var result = [];\n        _.each(changes, function(change) {\n            if (!change.base && change.head) result.push(change.head);\n        });\n        return result;\n    };\n\n    difference.deleted = function() {\n        var result = [];\n        _.each(changes, function(change) {\n            if (change.base && !change.head) result.push(change.base);\n        });\n        return result;\n    };\n\n    difference.summary = function() {\n        var relevant = {};\n\n        function addEntity(entity, graph, changeType) {\n            relevant[entity.id] = {\n                entity: entity,\n                graph: graph,\n                changeType: changeType\n            };\n        }\n\n        function addParents(entity) {\n            var parents = head.parentWays(entity);\n            for (var j = parents.length - 1; j >= 0; j--) {\n                var parent = parents[j];\n                if (!(parent.id in relevant)) addEntity(parent, head, 'modified');\n            }\n        }\n\n        _.each(changes, function(change) {\n            if (change.head && change.head.geometry(head) !== 'vertex') {\n                addEntity(change.head, head, change.base ? 'modified' : 'created');\n\n            } else if (change.base && change.base.geometry(base) !== 'vertex') {\n                addEntity(change.base, base, 'deleted');\n\n            } else if (change.base && change.head) { // modified vertex\n                var moved    = !_.isEqual(change.base.loc,  change.head.loc),\n                    retagged = !_.isEqual(change.base.tags, change.head.tags);\n\n                if (moved) {\n                    addParents(change.head);\n                }\n\n                if (retagged || (moved && change.head.hasInterestingTags())) {\n                    addEntity(change.head, head, 'modified');\n                }\n\n            } else if (change.head && change.head.hasInterestingTags()) { // created vertex\n                addEntity(change.head, head, 'created');\n\n            } else if (change.base && change.base.hasInterestingTags()) { // deleted vertex\n                addEntity(change.base, base, 'deleted');\n            }\n        });\n\n        return d3.values(relevant);\n    };\n\n    difference.complete = function(extent) {\n        var result = {}, id, change;\n\n        for (id in changes) {\n            change = changes[id];\n\n            var h = change.head,\n                b = change.base,\n                entity = h || b;\n\n            if (extent &&\n                (!h || !h.intersects(extent, head)) &&\n                (!b || !b.intersects(extent, base)))\n                continue;\n\n            result[id] = h;\n\n            if (entity.type === 'way') {\n                var nh = h ? h.nodes : [],\n                    nb = b ? b.nodes : [],\n                    diff, i;\n\n                diff = _.difference(nh, nb);\n                for (i = 0; i < diff.length; i++) {\n                    result[diff[i]] = head.hasEntity(diff[i]);\n                }\n\n                diff = _.difference(nb, nh);\n                for (i = 0; i < diff.length; i++) {\n                    result[diff[i]] = head.hasEntity(diff[i]);\n                }\n            }\n\n            addParents(head.parentWays(entity), result);\n            addParents(head.parentRelations(entity), result);\n        }\n\n        return result;\n    };\n\n    return difference;\n}\n","export function tagText(entity) {\n    return d3.entries(entity.tags).map(function(e) {\n        return e.key + '=' + e.value;\n    }).join(', ');\n}\n\nexport function entitySelector(ids) {\n    return ids.length ? '.' + ids.join(',.') : 'nothing';\n}\n\nexport function entityOrMemberSelector(ids, graph) {\n    var s = entitySelector(ids);\n\n    ids.forEach(function(id) {\n        var entity = graph.hasEntity(id);\n        if (entity && entity.type === 'relation') {\n            entity.members.forEach(function(member) {\n                s += ',.' + member.id;\n            });\n        }\n    });\n\n    return s;\n}\n\nexport function displayName(entity) {\n    var localeName = 'name:' + iD.detect().locale.toLowerCase().split('-')[0];\n    return entity.tags[localeName] || entity.tags.name || entity.tags.ref;\n}\n\nexport function displayType(id) {\n    return {\n        n: t('inspector.node'),\n        w: t('inspector.way'),\n        r: t('inspector.relation')\n    }[id.charAt(0)];\n}\n\nexport function stringQs(str) {\n    return str.split('&').reduce(function(obj, pair){\n        var parts = pair.split('=');\n        if (parts.length === 2) {\n            obj[parts[0]] = (null === parts[1]) ? '' : decodeURIComponent(parts[1]);\n        }\n        return obj;\n    }, {});\n}\n\nexport function qsString(obj, noencode) {\n    function softEncode(s) {\n      // encode everything except special characters used in certain hash parameters:\n      // \"/\" in map states, \":\", \",\", {\" and \"}\" in background\n      return encodeURIComponent(s).replace(/(%2F|%3A|%2C|%7B|%7D)/g, decodeURIComponent);\n    }\n    return Object.keys(obj).sort().map(function(key) {\n        return encodeURIComponent(key) + '=' + (\n            noencode ? softEncode(obj[key]) : encodeURIComponent(obj[key]));\n    }).join('&');\n}\n\nexport function prefixDOMProperty(property) {\n    var prefixes = ['webkit', 'ms', 'moz', 'o'],\n        i = -1,\n        n = prefixes.length,\n        s = document.body;\n\n    if (property in s)\n        return property;\n\n    property = property.substr(0, 1).toUpperCase() + property.substr(1);\n\n    while (++i < n)\n        if (prefixes[i] + property in s)\n            return prefixes[i] + property;\n\n    return false;\n}\n\nexport function prefixCSSProperty(property) {\n    var prefixes = ['webkit', 'ms', 'Moz', 'O'],\n        i = -1,\n        n = prefixes.length,\n        s = document.body.style;\n\n    if (property.toLowerCase() in s)\n        return property.toLowerCase();\n\n    while (++i < n)\n        if (prefixes[i] + property in s)\n            return '-' + prefixes[i].toLowerCase() + property.replace(/([A-Z])/g, '-$1').toLowerCase();\n\n    return false;\n}\n\n\nvar transformProperty;\nexport function setTransform(el, x, y, scale) {\n    var prop = transformProperty = transformProperty || prefixCSSProperty('Transform'),\n        translate = iD.detect().opera ?\n            'translate('   + x + 'px,' + y + 'px)' :\n            'translate3d(' + x + 'px,' + y + 'px,0)';\n    return el.style(prop, translate + (scale ? ' scale(' + scale + ')' : ''));\n}\n\nexport function getStyle(selector) {\n    for (var i = 0; i < document.styleSheets.length; i++) {\n        var rules = document.styleSheets[i].rules || document.styleSheets[i].cssRules || [];\n        for (var k = 0; k < rules.length; k++) {\n            var selectorText = rules[k].selectorText && rules[k].selectorText.split(', ');\n            if (_.includes(selectorText, selector)) {\n                return rules[k];\n            }\n        }\n    }\n}\n\nexport function editDistance(a, b) {\n    if (a.length === 0) return b.length;\n    if (b.length === 0) return a.length;\n    var matrix = [];\n    for (var i = 0; i <= b.length; i++) { matrix[i] = [i]; }\n    for (var j = 0; j <= a.length; j++) { matrix[0][j] = j; }\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i-1) === a.charAt(j-1)) {\n                matrix[i][j] = matrix[i-1][j-1];\n            } else {\n                matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution\n                    Math.min(matrix[i][j-1] + 1, // insertion\n                    matrix[i-1][j] + 1)); // deletion\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n}\n\n// a d3.mouse-alike which\n// 1. Only works on HTML elements, not SVG\n// 2. Does not cause style recalculation\nexport function fastMouse(container) {\n    var rect = container.getBoundingClientRect(),\n        rectLeft = rect.left,\n        rectTop = rect.top,\n        clientLeft = +container.clientLeft,\n        clientTop = +container.clientTop;\n    return function(e) {\n        return [\n            e.clientX - rectLeft - clientLeft,\n            e.clientY - rectTop - clientTop];\n    };\n}\n\n/* eslint-disable no-proto */\nexport var getPrototypeOf = Object.getPrototypeOf || function(obj) { return obj.__proto__; };\n/* eslint-enable no-proto */\n\nexport function asyncMap(inputs, func, callback) {\n    var remaining = inputs.length,\n        results = [],\n        errors = [];\n\n    inputs.forEach(function(d, i) {\n        func(d, function done(err, data) {\n            errors[i] = err;\n            results[i] = data;\n            remaining--;\n            if (!remaining) callback(errors, results);\n        });\n    });\n}\n\n// wraps an index to an interval [0..length-1]\nexport function wrap(index, length) {\n    if (index < 0)\n        index += Math.ceil(-index/length)*length;\n    return index % length;\n}\n","// A per-domain session mutex backed by a cookie and dead man's\n// switch. If the session crashes, the mutex will auto-release\n// after 5 seconds.\n\nexport function SessionMutex(name) {\n    var mutex = {},\n        intervalID;\n\n    function renew() {\n        var expires = new Date();\n        expires.setSeconds(expires.getSeconds() + 5);\n        document.cookie = name + '=1; expires=' + expires.toUTCString();\n    }\n\n    mutex.lock = function() {\n        if (intervalID) return true;\n        var cookie = document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + name + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1');\n        if (cookie) return false;\n        renew();\n        intervalID = window.setInterval(renew, 4000);\n        return true;\n    };\n\n    mutex.unlock = function() {\n        if (!intervalID) return;\n        document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n        clearInterval(intervalID);\n        intervalID = null;\n    };\n\n    mutex.locked = function() {\n        return !!intervalID;\n    };\n\n    return mutex;\n}\n","import { editDistance } from './util';\n\nexport function SuggestNames(preset, suggestions) {\n    preset = preset.id.split('/', 2);\n    var k = preset[0],\n        v = preset[1];\n\n    return function(value, callback) {\n        var result = [];\n        if (value && value.length > 2) {\n            if (suggestions[k] && suggestions[k][v]) {\n                for (var sugg in suggestions[k][v]) {\n                    var dist = editDistance(value, sugg.substring(0, value.length));\n                    if (dist < 3) {\n                        result.push({\n                            title: sugg,\n                            value: sugg,\n                            dist: dist\n                        });\n                    }\n                }\n            }\n            result.sort(function(a, b) {\n                return a.dist - b.dist;\n            });\n        }\n        result = result.slice(0,3);\n        callback(result);\n    };\n}\n","import { getPrototypeOf } from '../util/index';\n\nexport function Graph(other, mutable) {\n    if (!(this instanceof Graph)) return new Graph(other, mutable);\n\n    if (other instanceof Graph) {\n        var base = other.base();\n        this.entities = _.assign(Object.create(base.entities), other.entities);\n        this._parentWays = _.assign(Object.create(base.parentWays), other._parentWays);\n        this._parentRels = _.assign(Object.create(base.parentRels), other._parentRels);\n\n    } else {\n        this.entities = Object.create({});\n        this._parentWays = Object.create({});\n        this._parentRels = Object.create({});\n        this.rebase(other || [], [this]);\n    }\n\n    this.transients = {};\n    this._childNodes = {};\n    this.frozen = !mutable;\n}\n\nGraph.prototype = {\n    hasEntity: function(id) {\n        return this.entities[id];\n    },\n\n    entity: function(id) {\n        var entity = this.entities[id];\n        if (!entity) {\n            throw new Error('entity ' + id + ' not found');\n        }\n        return entity;\n    },\n\n    transient: function(entity, key, fn) {\n        var id = entity.id,\n            transients = this.transients[id] ||\n            (this.transients[id] = {});\n\n        if (transients[key] !== undefined) {\n            return transients[key];\n        }\n\n        transients[key] = fn.call(entity);\n\n        return transients[key];\n    },\n\n    parentWays: function(entity) {\n        var parents = this._parentWays[entity.id],\n            result = [];\n\n        if (parents) {\n            for (var i = 0; i < parents.length; i++) {\n                result.push(this.entity(parents[i]));\n            }\n        }\n        return result;\n    },\n\n    isPoi: function(entity) {\n        var parentWays = this._parentWays[entity.id];\n        return !parentWays || parentWays.length === 0;\n    },\n\n    isShared: function(entity) {\n        var parentWays = this._parentWays[entity.id];\n        return parentWays && parentWays.length > 1;\n    },\n\n    parentRelations: function(entity) {\n        var parents = this._parentRels[entity.id],\n            result = [];\n\n        if (parents) {\n            for (var i = 0; i < parents.length; i++) {\n                result.push(this.entity(parents[i]));\n            }\n        }\n        return result;\n    },\n\n    childNodes: function(entity) {\n        if (this._childNodes[entity.id]) return this._childNodes[entity.id];\n        if (!entity.nodes) return [];\n\n        var nodes = [];\n        for (var i = 0; i < entity.nodes.length; i++) {\n            nodes[i] = this.entity(entity.nodes[i]);\n        }\n\n        if (iD.debug) Object.freeze(nodes);\n\n        this._childNodes[entity.id] = nodes;\n        return this._childNodes[entity.id];\n    },\n\n    base: function() {\n        return {\n            'entities': getPrototypeOf(this.entities),\n            'parentWays': getPrototypeOf(this._parentWays),\n            'parentRels': getPrototypeOf(this._parentRels)\n        };\n    },\n\n    // Unlike other graph methods, rebase mutates in place. This is because it\n    // is used only during the history operation that merges newly downloaded\n    // data into each state. To external consumers, it should appear as if the\n    // graph always contained the newly downloaded data.\n    rebase: function(entities, stack, force) {\n        var base = this.base(),\n            i, j, k, id;\n\n        for (i = 0; i < entities.length; i++) {\n            var entity = entities[i];\n\n            if (!entity.visible || (!force && base.entities[entity.id]))\n                continue;\n\n            // Merging data into the base graph\n            base.entities[entity.id] = entity;\n            this._updateCalculated(undefined, entity, base.parentWays, base.parentRels);\n\n            // Restore provisionally-deleted nodes that are discovered to have an extant parent\n            if (entity.type === 'way') {\n                for (j = 0; j < entity.nodes.length; j++) {\n                    id = entity.nodes[j];\n                    for (k = 1; k < stack.length; k++) {\n                        var ents = stack[k].entities;\n                        if (ents.hasOwnProperty(id) && ents[id] === undefined) {\n                            delete ents[id];\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < stack.length; i++) {\n            stack[i]._updateRebased();\n        }\n    },\n\n    _updateRebased: function() {\n        var base = this.base(),\n            i, k, child, id, keys;\n\n        keys = Object.keys(this._parentWays);\n        for (i = 0; i < keys.length; i++) {\n            child = keys[i];\n            if (base.parentWays[child]) {\n                for (k = 0; k < base.parentWays[child].length; k++) {\n                    id = base.parentWays[child][k];\n                    if (!this.entities.hasOwnProperty(id) && !_.includes(this._parentWays[child], id)) {\n                        this._parentWays[child].push(id);\n                    }\n                }\n            }\n        }\n\n        keys = Object.keys(this._parentRels);\n        for (i = 0; i < keys.length; i++) {\n            child = keys[i];\n            if (base.parentRels[child]) {\n                for (k = 0; k < base.parentRels[child].length; k++) {\n                    id = base.parentRels[child][k];\n                    if (!this.entities.hasOwnProperty(id) && !_.includes(this._parentRels[child], id)) {\n                        this._parentRels[child].push(id);\n                    }\n                }\n            }\n        }\n\n        this.transients = {};\n\n        // this._childNodes is not updated, under the assumption that\n        // ways are always downloaded with their child nodes.\n    },\n\n    // Updates calculated properties (parentWays, parentRels) for the specified change\n    _updateCalculated: function(oldentity, entity, parentWays, parentRels) {\n\n        parentWays = parentWays || this._parentWays;\n        parentRels = parentRels || this._parentRels;\n\n        var type = entity && entity.type || oldentity && oldentity.type,\n            removed, added, ways, rels, i;\n\n\n        if (type === 'way') {\n\n            // Update parentWays\n            if (oldentity && entity) {\n                removed = _.difference(oldentity.nodes, entity.nodes);\n                added = _.difference(entity.nodes, oldentity.nodes);\n            } else if (oldentity) {\n                removed = oldentity.nodes;\n                added = [];\n            } else if (entity) {\n                removed = [];\n                added = entity.nodes;\n            }\n            for (i = 0; i < removed.length; i++) {\n                parentWays[removed[i]] = _.without(parentWays[removed[i]], oldentity.id);\n            }\n            for (i = 0; i < added.length; i++) {\n                ways = _.without(parentWays[added[i]], entity.id);\n                ways.push(entity.id);\n                parentWays[added[i]] = ways;\n            }\n\n        } else if (type === 'relation') {\n\n            // Update parentRels\n            if (oldentity && entity) {\n                removed = _.difference(oldentity.members, entity.members);\n                added = _.difference(entity.members, oldentity);\n            } else if (oldentity) {\n                removed = oldentity.members;\n                added = [];\n            } else if (entity) {\n                removed = [];\n                added = entity.members;\n            }\n            for (i = 0; i < removed.length; i++) {\n                parentRels[removed[i].id] = _.without(parentRels[removed[i].id], oldentity.id);\n            }\n            for (i = 0; i < added.length; i++) {\n                rels = _.without(parentRels[added[i].id], entity.id);\n                rels.push(entity.id);\n                parentRels[added[i].id] = rels;\n            }\n        }\n    },\n\n    replace: function(entity) {\n        if (this.entities[entity.id] === entity)\n            return this;\n\n        return this.update(function() {\n            this._updateCalculated(this.entities[entity.id], entity);\n            this.entities[entity.id] = entity;\n        });\n    },\n\n    remove: function(entity) {\n        return this.update(function() {\n            this._updateCalculated(entity, undefined);\n            this.entities[entity.id] = undefined;\n        });\n    },\n\n    revert: function(id) {\n        var baseEntity = this.base().entities[id],\n            headEntity = this.entities[id];\n\n        if (headEntity === baseEntity)\n            return this;\n\n        return this.update(function() {\n            this._updateCalculated(headEntity, baseEntity);\n            delete this.entities[id];\n        });\n    },\n\n    update: function() {\n        var graph = this.frozen ? Graph(this, true) : this;\n\n        for (var i = 0; i < arguments.length; i++) {\n            arguments[i].call(graph, graph);\n        }\n\n        if (this.frozen) graph.frozen = true;\n\n        return graph;\n    },\n\n    // Obliterates any existing entities\n    load: function(entities) {\n        var base = this.base();\n        this.entities = Object.create(base.entities);\n\n        for (var i in entities) {\n            this.entities[i] = entities[i];\n            this._updateCalculated(base.entities[i], this.entities[i]);\n        }\n\n        return this;\n    }\n};\n","import { Difference } from './difference';\n\nexport function Tree(head) {\n    var rtree = rbush(),\n        rectangles = {};\n\n    function entityRectangle(entity) {\n        var rect = entity.extent(head).rectangle();\n        rect.id = entity.id;\n        rectangles[entity.id] = rect;\n        return rect;\n    }\n\n    function updateParents(entity, insertions, memo) {\n        head.parentWays(entity).forEach(function(way) {\n            if (rectangles[way.id]) {\n                rtree.remove(rectangles[way.id]);\n                insertions[way.id] = way;\n            }\n            updateParents(way, insertions, memo);\n        });\n\n        head.parentRelations(entity).forEach(function(relation) {\n            if (memo[entity.id]) return;\n            memo[entity.id] = true;\n            if (rectangles[relation.id]) {\n                rtree.remove(rectangles[relation.id]);\n                insertions[relation.id] = relation;\n            }\n            updateParents(relation, insertions, memo);\n        });\n    }\n\n    var tree = {};\n\n    tree.rebase = function(entities, force) {\n        var insertions = {};\n\n        for (var i = 0; i < entities.length; i++) {\n            var entity = entities[i];\n\n            if (!entity.visible)\n                continue;\n\n            if (head.entities.hasOwnProperty(entity.id) || rectangles[entity.id]) {\n                if (!force) {\n                    continue;\n                } else if (rectangles[entity.id]) {\n                    rtree.remove(rectangles[entity.id]);\n                }\n            }\n\n            insertions[entity.id] = entity;\n            updateParents(entity, insertions, {});\n        }\n\n        rtree.load(_.map(insertions, entityRectangle));\n\n        return tree;\n    };\n\n    tree.intersects = function(extent, graph) {\n        if (graph !== head) {\n            var diff = Difference(head, graph),\n                insertions = {};\n\n            head = graph;\n\n            diff.deleted().forEach(function(entity) {\n                rtree.remove(rectangles[entity.id]);\n                delete rectangles[entity.id];\n            });\n\n            diff.modified().forEach(function(entity) {\n                rtree.remove(rectangles[entity.id]);\n                insertions[entity.id] = entity;\n                updateParents(entity, insertions, {});\n            });\n\n            diff.created().forEach(function(entity) {\n                insertions[entity.id] = entity;\n            });\n\n            rtree.load(_.map(insertions, entityRectangle));\n        }\n\n        return rtree.search(extent.rectangle()).map(function(rect) {\n            return head.entity(rect.id);\n        });\n    };\n\n    return tree;\n}\n","// Translate a MacOS key command into the appropriate Windows/Linux equivalent.\n// For example, ⌘Z -> Ctrl+Z\nexport function cmd(code) {\n    if (iD.detect().os === 'mac') {\n        return code;\n    }\n\n    if (iD.detect().os === 'win') {\n        if (code === '⌘⇧Z') return 'Ctrl+Y';\n    }\n\n    var result = '',\n        replacements = {\n            '⌘': 'Ctrl',\n            '⇧': 'Shift',\n            '⌥': 'Alt',\n            '⌫': 'Backspace',\n            '⌦': 'Delete'\n        };\n\n    for (var i = 0; i < code.length; i++) {\n        if (code[i] in replacements) {\n            result += replacements[code[i]] + '+';\n        } else {\n            result += code[i];\n        }\n    }\n\n    return result;\n}\n","export function Commit(context) {\n    var dispatch = d3.dispatch('cancel', 'save');\n\n    function commit(selection) {\n        var changes = context.history().changes(),\n            summary = context.history().difference().summary();\n\n        function zoomToEntity(change) {\n            var entity = change.entity;\n            if (change.changeType !== 'deleted' &&\n                context.graph().entity(entity.id).geometry(context.graph()) !== 'vertex') {\n                context.map().zoomTo(entity);\n                context.surface().selectAll(\n                    iD.util.entityOrMemberSelector([entity.id], context.graph()))\n                    .classed('hover', true);\n            }\n        }\n\n        var header = selection.append('div')\n            .attr('class', 'header fillL');\n\n        header.append('h3')\n            .text(t('commit.title'));\n\n        var body = selection.append('div')\n            .attr('class', 'body');\n\n\n        // Comment Section\n        var commentSection = body.append('div')\n            .attr('class', 'modal-section form-field commit-form');\n\n        commentSection.append('label')\n            .attr('class', 'form-label')\n            .text(t('commit.message_label'));\n\n        var commentField = commentSection.append('textarea')\n            .attr('placeholder', t('commit.description_placeholder'))\n            .attr('maxlength', 255)\n            .property('value', context.storage('comment') || '')\n            .on('input.save', checkComment)\n            .on('change.save', checkComment)\n            .on('blur.save', function() {\n                context.storage('comment', this.value);\n            });\n\n        function checkComment() {\n            d3.selectAll('.save-section .save-button')\n                .attr('disabled', (this.value.length ? null : true));\n\n            var googleWarning = clippyArea\n               .html('')\n               .selectAll('a')\n               .data(this.value.match(/google/i) ? [true] : []);\n\n            googleWarning.exit().remove();\n\n            googleWarning.enter()\n               .append('a')\n               .attr('target', '_blank')\n               .attr('tabindex', -1)\n               .call(iD.svg.Icon('#icon-alert', 'inline'))\n               .attr('href', t('commit.google_warning_link'))\n               .append('span')\n               .text(t('commit.google_warning'));\n        }\n\n        commentField.node().select();\n\n        context.connection().userChangesets(function (err, changesets) {\n            if (err) return;\n\n            var comments = [];\n\n            for (var i = 0; i < changesets.length; i++) {\n                if (changesets[i].tags.comment) {\n                    comments.push({\n                        title: changesets[i].tags.comment,\n                        value: changesets[i].tags.comment\n                    });\n                }\n            }\n\n            commentField.call(d3.combobox().caseSensitive(true).data(comments));\n        });\n\n        var clippyArea = commentSection.append('div')\n            .attr('class', 'clippy-area');\n\n\n        var changeSetInfo = commentSection.append('div')\n            .attr('class', 'changeset-info');\n\n        changeSetInfo.append('a')\n            .attr('target', '_blank')\n            .attr('tabindex', -1)\n            .call(iD.svg.Icon('#icon-out-link', 'inline'))\n            .attr('href', t('commit.about_changeset_comments_link'))\n            .append('span')\n            .text(t('commit.about_changeset_comments'));\n\n        // Warnings\n        var warnings = body.selectAll('div.warning-section')\n            .data([context.history().validate(changes)])\n            .enter()\n            .append('div')\n            .attr('class', 'modal-section warning-section fillL2')\n            .style('display', function(d) { return _.isEmpty(d) ? 'none' : null; })\n            .style('background', '#ffb');\n\n        warnings.append('h3')\n            .text(t('commit.warnings'));\n\n        var warningLi = warnings.append('ul')\n            .attr('class', 'changeset-list')\n            .selectAll('li')\n            .data(function(d) { return d; })\n            .enter()\n            .append('li')\n            .style()\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout)\n            .on('click', warningClick);\n\n        warningLi\n            .call(iD.svg.Icon('#icon-alert', 'pre-text'));\n\n        warningLi\n            .append('strong').text(function(d) {\n                return d.message;\n            });\n\n        warningLi.filter(function(d) { return d.tooltip; })\n            .call(bootstrap.tooltip()\n                .title(function(d) { return d.tooltip; })\n                .placement('top')\n            );\n\n\n        // Upload Explanation\n        var saveSection = body.append('div')\n            .attr('class','modal-section save-section fillL cf');\n\n        var prose = saveSection.append('p')\n            .attr('class', 'commit-info')\n            .html(t('commit.upload_explanation'));\n\n        context.connection().userDetails(function(err, user) {\n            if (err) return;\n\n            var userLink = d3.select(document.createElement('div'));\n\n            if (user.image_url) {\n                userLink.append('img')\n                    .attr('src', user.image_url)\n                    .attr('class', 'icon pre-text user-icon');\n            }\n\n            userLink.append('a')\n                .attr('class','user-info')\n                .text(user.display_name)\n                .attr('href', context.connection().userURL(user.display_name))\n                .attr('tabindex', -1)\n                .attr('target', '_blank');\n\n            prose.html(t('commit.upload_explanation_with_user', {user: userLink.html()}));\n        });\n\n\n        // Buttons\n        var buttonSection = saveSection.append('div')\n            .attr('class','buttons fillL cf');\n\n        var cancelButton = buttonSection.append('button')\n            .attr('class', 'secondary-action col5 button cancel-button')\n            .on('click.cancel', function() { dispatch.cancel(); });\n\n        cancelButton.append('span')\n            .attr('class', 'label')\n            .text(t('commit.cancel'));\n\n        var saveButton = buttonSection.append('button')\n            .attr('class', 'action col5 button save-button')\n            .attr('disabled', function() {\n                var n = d3.select('.commit-form textarea').node();\n                return (n && n.value.length) ? null : true;\n            })\n            .on('click.save', function() {\n                dispatch.save({\n                    comment: commentField.node().value\n                });\n            });\n\n        saveButton.append('span')\n            .attr('class', 'label')\n            .text(t('commit.save'));\n\n\n        // Changes\n        var changeSection = body.selectAll('div.commit-section')\n            .data([0])\n            .enter()\n            .append('div')\n            .attr('class', 'commit-section modal-section fillL2');\n\n        changeSection.append('h3')\n            .text(t('commit.changes', {count: summary.length}));\n\n        var li = changeSection.append('ul')\n            .attr('class', 'changeset-list')\n            .selectAll('li')\n            .data(summary)\n            .enter()\n            .append('li')\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout)\n            .on('click', zoomToEntity);\n\n        li.each(function(d) {\n            d3.select(this)\n                .call(iD.svg.Icon('#icon-' + d.entity.geometry(d.graph), 'pre-text ' + d.changeType));\n        });\n\n        li.append('span')\n            .attr('class', 'change-type')\n            .text(function(d) {\n                return t('commit.' + d.changeType) + ' ';\n            });\n\n        li.append('strong')\n            .attr('class', 'entity-type')\n            .text(function(d) {\n                return context.presets().match(d.entity, d.graph).name();\n            });\n\n        li.append('span')\n            .attr('class', 'entity-name')\n            .text(function(d) {\n                var name = iD.util.displayName(d.entity) || '',\n                    string = '';\n                if (name !== '') string += ':';\n                return string += ' ' + name;\n            });\n\n        li.style('opacity', 0)\n            .transition()\n            .style('opacity', 1);\n\n\n        function mouseover(d) {\n            if (d.entity) {\n                context.surface().selectAll(\n                    iD.util.entityOrMemberSelector([d.entity.id], context.graph())\n                ).classed('hover', true);\n            }\n        }\n\n        function mouseout() {\n            context.surface().selectAll('.hover')\n                .classed('hover', false);\n        }\n\n        function warningClick(d) {\n            if (d.entity) {\n                context.map().zoomTo(d.entity);\n                context.enter(\n                    iD.modes.Select(context, [d.entity.id])\n                        .suppressMenu(true));\n            }\n        }\n\n        // Call checkComment off the bat, in case a changeset\n        // comment is recovered from localStorage\n        commentField.trigger('input');\n    }\n\n    return d3.rebind(commit, dispatch, 'on');\n}\n","export function modal(selection, blocking) {\n    var keybinding = d3.keybinding('modal');\n    var previous = selection.select('div.modal');\n    var animate = previous.empty();\n\n    previous.transition()\n        .duration(200)\n        .style('opacity', 0)\n        .remove();\n\n    var shaded = selection\n        .append('div')\n        .attr('class', 'shaded')\n        .style('opacity', 0);\n\n    shaded.close = function() {\n        shaded\n            .transition()\n            .duration(200)\n            .style('opacity',0)\n            .remove();\n        modal\n            .transition()\n            .duration(200)\n            .style('top','0px');\n\n        keybinding.off();\n    };\n\n\n    var modal = shaded.append('div')\n        .attr('class', 'modal fillL col6');\n\n    if (!blocking) {\n        shaded.on('click.remove-modal', function() {\n            if (d3.event.target === this) {\n                shaded.close();\n            }\n        });\n\n        modal.append('button')\n            .attr('class', 'close')\n            .on('click', shaded.close)\n            .call(iD.svg.Icon('#icon-close'));\n\n        keybinding\n            .on('⌫', shaded.close)\n            .on('⎋', shaded.close);\n\n        d3.select(document).call(keybinding);\n    }\n\n    modal.append('div')\n        .attr('class', 'content');\n\n    if (animate) {\n        shaded.transition().style('opacity', 1);\n    } else {\n        shaded.style('opacity', 1);\n    }\n\n    return shaded;\n}\n","export function Conflicts(context) {\n    var dispatch = d3.dispatch('download', 'cancel', 'save'),\n        list;\n\n    function conflicts(selection) {\n        var header = selection\n            .append('div')\n            .attr('class', 'header fillL');\n\n        header\n            .append('button')\n            .attr('class', 'fr')\n            .on('click', function() { dispatch.cancel(); })\n            .call(iD.svg.Icon('#icon-close'));\n\n        header\n            .append('h3')\n            .text(t('save.conflict.header'));\n\n        var body = selection\n            .append('div')\n            .attr('class', 'body fillL');\n\n        body\n            .append('div')\n            .attr('class', 'conflicts-help')\n            .text(t('save.conflict.help'))\n            .append('a')\n            .attr('class', 'conflicts-download')\n            .text(t('save.conflict.download_changes'))\n            .on('click.download', function() { dispatch.download(); });\n\n        body\n            .append('div')\n            .attr('class', 'conflict-container fillL3')\n            .call(showConflict, 0);\n\n        body\n            .append('div')\n            .attr('class', 'conflicts-done')\n            .attr('opacity', 0)\n            .style('display', 'none')\n            .text(t('save.conflict.done'));\n\n        var buttons = body\n            .append('div')\n            .attr('class','buttons col12 joined conflicts-buttons');\n\n        buttons\n            .append('button')\n            .attr('disabled', list.length > 1)\n            .attr('class', 'action conflicts-button col6')\n            .text(t('save.title'))\n            .on('click.try_again', function() { dispatch.save(); });\n\n        buttons\n            .append('button')\n            .attr('class', 'secondary-action conflicts-button col6')\n            .text(t('confirm.cancel'))\n            .on('click.cancel', function() { dispatch.cancel(); });\n    }\n\n\n    function showConflict(selection, index) {\n        if (index < 0 || index >= list.length) return;\n\n        var parent = d3.select(selection.node().parentNode);\n\n        // enable save button if this is the last conflict being reviewed..\n        if (index === list.length - 1) {\n            window.setTimeout(function() {\n                parent.select('.conflicts-button')\n                    .attr('disabled', null);\n\n                parent.select('.conflicts-done')\n                    .transition()\n                    .attr('opacity', 1)\n                    .style('display', 'block');\n            }, 250);\n        }\n\n        var item = selection\n            .selectAll('.conflict')\n            .data([list[index]]);\n\n        var enter = item.enter()\n            .append('div')\n            .attr('class', 'conflict');\n\n        enter\n            .append('h4')\n            .attr('class', 'conflict-count')\n            .text(t('save.conflict.count', { num: index + 1, total: list.length }));\n\n        enter\n            .append('a')\n            .attr('class', 'conflict-description')\n            .attr('href', '#')\n            .text(function(d) { return d.name; })\n            .on('click', function(d) {\n                zoomToEntity(d.id);\n                d3.event.preventDefault();\n            });\n\n        var details = enter\n            .append('div')\n            .attr('class', 'conflict-detail-container');\n\n        details\n            .append('ul')\n            .attr('class', 'conflict-detail-list')\n            .selectAll('li')\n            .data(function(d) { return d.details || []; })\n            .enter()\n            .append('li')\n            .attr('class', 'conflict-detail-item')\n            .html(function(d) { return d; });\n\n        details\n            .append('div')\n            .attr('class', 'conflict-choices')\n            .call(addChoices);\n\n        details\n            .append('div')\n            .attr('class', 'conflict-nav-buttons joined cf')\n            .selectAll('button')\n            .data(['previous', 'next'])\n            .enter()\n            .append('button')\n            .text(function(d) { return t('save.conflict.' + d); })\n            .attr('class', 'conflict-nav-button action col6')\n            .attr('disabled', function(d, i) {\n                return (i === 0 && index === 0) ||\n                    (i === 1 && index === list.length - 1) || null;\n            })\n            .on('click', function(d, i) {\n                var container = parent.select('.conflict-container'),\n                sign = (i === 0 ? -1 : 1);\n\n                container\n                    .selectAll('.conflict')\n                    .remove();\n\n                container\n                    .call(showConflict, index + sign);\n\n                d3.event.preventDefault();\n            });\n\n        item.exit()\n            .remove();\n\n    }\n\n    function addChoices(selection) {\n        var choices = selection\n            .append('ul')\n            .attr('class', 'layer-list')\n            .selectAll('li')\n            .data(function(d) { return d.choices || []; });\n\n        var enter = choices.enter()\n            .append('li')\n            .attr('class', 'layer');\n\n        var label = enter\n            .append('label');\n\n        label\n            .append('input')\n            .attr('type', 'radio')\n            .attr('name', function(d) { return d.id; })\n            .on('change', function(d, i) {\n                var ul = this.parentNode.parentNode.parentNode;\n                ul.__data__.chosen = i;\n                choose(ul, d);\n            });\n\n        label\n            .append('span')\n            .text(function(d) { return d.text; });\n\n        choices\n            .each(function(d, i) {\n                var ul = this.parentNode;\n                if (ul.__data__.chosen === i) choose(ul, d);\n            });\n    }\n\n    function choose(ul, datum) {\n        if (d3.event) d3.event.preventDefault();\n\n        d3.select(ul)\n            .selectAll('li')\n            .classed('active', function(d) { return d === datum; })\n            .selectAll('input')\n            .property('checked', function(d) { return d === datum; });\n\n        var extent = iD.geo.Extent(),\n            entity;\n\n        entity = context.graph().hasEntity(datum.id);\n        if (entity) extent._extend(entity.extent(context.graph()));\n\n        datum.action();\n\n        entity = context.graph().hasEntity(datum.id);\n        if (entity) extent._extend(entity.extent(context.graph()));\n\n        zoomToEntity(datum.id, extent);\n    }\n\n    function zoomToEntity(id, extent) {\n        context.surface().selectAll('.hover')\n            .classed('hover', false);\n\n        var entity = context.graph().hasEntity(id);\n        if (entity) {\n            if (extent) {\n                context.map().trimmedExtent(extent);\n            } else {\n                context.map().zoomTo(entity);\n            }\n            context.surface().selectAll(\n                iD.util.entityOrMemberSelector([entity.id], context.graph()))\n                .classed('hover', true);\n        }\n    }\n\n\n    // The conflict list should be an array of objects like:\n    // {\n    //     id: id,\n    //     name: entityName(local),\n    //     details: merge.conflicts(),\n    //     chosen: 1,\n    //     choices: [\n    //         choice(id, keepMine, forceLocal),\n    //         choice(id, keepTheirs, forceRemote)\n    //     ]\n    // }\n    conflicts.list = function(_) {\n        if (!arguments.length) return list;\n        list = _;\n        return conflicts;\n    };\n\n    return d3.rebind(conflicts, dispatch, 'on');\n}\n","// toggles the visibility of ui elements, using a combination of the\n// hide class, which sets display=none, and a d3 transition for opacity.\n// this will cause blinking when called repeatedly, so check that the\n// value actually changes between calls.\nexport function Toggle(show, callback) {\n    return function(selection) {\n        selection\n            .style('opacity', show ? 0 : 1)\n            .classed('hide', false)\n            .transition()\n            .style('opacity', show ? 1 : 0)\n            .each('end', function() {\n                d3.select(this)\n                    .classed('hide', !show)\n                    .style('opacity', null);\n                if (callback) callback.apply(this);\n            });\n    };\n}\n","import { modal as modalModule } from './modal';\n\nexport function flash(selection) {\n    var modal = modalModule(selection);\n\n    modal.select('.modal').classed('modal-flash', true);\n\n    modal.select('.content')\n        .classed('modal-section', true)\n        .append('div')\n        .attr('class', 'description');\n\n    modal.on('click.flash', function() { modal.remove(); });\n\n    setTimeout(function() {\n        modal.remove();\n        return true;\n    }, 1500);\n\n    return modal;\n}\n","import { modal as modalModule } from './modal';\n\nexport function Loading(context) {\n    var message = '',\n        blocking = false,\n        modal;\n\n    var loading = function(selection) {\n        modal = modalModule(selection, blocking);\n\n        var loadertext = modal.select('.content')\n            .classed('loading-modal', true)\n            .append('div')\n            .attr('class', 'modal-section fillL');\n\n        loadertext.append('img')\n            .attr('class', 'loader')\n            .attr('src', context.imagePath('loader-white.gif'));\n\n        loadertext.append('h3')\n            .text(message);\n\n        modal.select('button.close')\n            .attr('class', 'hide');\n\n        return loading;\n    };\n\n    loading.message = function(_) {\n        if (!arguments.length) return message;\n        message = _;\n        return loading;\n    };\n\n    loading.blocking = function(_) {\n        if (!arguments.length) return blocking;\n        blocking = _;\n        return loading;\n    };\n\n    loading.close = function() {\n        modal.remove();\n    };\n\n    return loading;\n}\n","import { Toggle } from './toggle';\n\nexport function Lasso(context) {\n    var group, polygon;\n\n    lasso.coordinates = [];\n\n    function lasso(selection) {\n\n        context.container().classed('lasso', true);\n\n        group = selection.append('g')\n            .attr('class', 'lasso hide');\n\n        polygon = group.append('path')\n            .attr('class', 'lasso-path');\n\n        group.call(Toggle(true));\n\n    }\n\n    function draw() {\n        if (polygon) {\n            polygon.data([lasso.coordinates])\n                .attr('d', function(d) { return 'M' + d.join(' L') + ' Z'; });\n        }\n    }\n\n    lasso.extent = function () {\n        return lasso.coordinates.reduce(function(extent, point) {\n            return extent.extend(iD.geo.Extent(point));\n        }, iD.geo.Extent());\n    };\n\n    lasso.p = function(_) {\n        if (!arguments.length) return lasso;\n        lasso.coordinates.push(_);\n        draw();\n        return lasso;\n    };\n\n    lasso.close = function() {\n        if (group) {\n            group.call(Toggle(false, function() {\n                d3.select(this).remove();\n            }));\n        }\n        context.container().classed('lasso', false);\n    };\n\n    return lasso;\n}\n","export function RadialMenu(context, operations) {\n    var menu,\n        center = [0, 0],\n        tooltip;\n\n    var radialMenu = function(selection) {\n        if (!operations.length)\n            return;\n\n        selection.node().parentNode.focus();\n\n        function click(operation) {\n            d3.event.stopPropagation();\n            if (operation.disabled())\n                return;\n            operation();\n            radialMenu.close();\n        }\n\n        menu = selection.append('g')\n            .attr('class', 'radial-menu')\n            .attr('transform', 'translate(' + center + ')')\n            .attr('opacity', 0);\n\n        menu.transition()\n            .attr('opacity', 1);\n\n        var r = 50,\n            a = Math.PI / 4,\n            a0 = -Math.PI / 4,\n            a1 = a0 + (operations.length - 1) * a;\n\n        menu.append('path')\n            .attr('class', 'radial-menu-background')\n            .attr('d', 'M' + r * Math.sin(a0) + ',' +\n                             r * Math.cos(a0) +\n                      ' A' + r + ',' + r + ' 0 ' + (operations.length > 5 ? '1' : '0') + ',0 ' +\n                             (r * Math.sin(a1) + 1e-3) + ',' +\n                             (r * Math.cos(a1) + 1e-3)) // Force positive-length path (#1305)\n            .attr('stroke-width', 50)\n            .attr('stroke-linecap', 'round');\n\n        var button = menu.selectAll()\n            .data(operations)\n            .enter()\n            .append('g')\n            .attr('class', function(d) { return 'radial-menu-item radial-menu-item-' + d.id; })\n            .classed('disabled', function(d) { return d.disabled(); })\n            .attr('transform', function(d, i) {\n                return 'translate(' + iD.geo.roundCoords([\n                        r * Math.sin(a0 + i * a),\n                        r * Math.cos(a0 + i * a)]).join(',') + ')';\n            });\n\n        button.append('circle')\n            .attr('r', 15)\n            .on('click', click)\n            .on('mousedown', mousedown)\n            .on('mouseover', mouseover)\n            .on('mouseout', mouseout);\n\n        button.append('use')\n            .attr('transform', 'translate(-10,-10)')\n            .attr('width', '20')\n            .attr('height', '20')\n            .attr('xlink:href', function(d) { return '#operation-' + d.id; });\n\n        tooltip = d3.select(document.body)\n            .append('div')\n            .attr('class', 'tooltip-inner radial-menu-tooltip');\n\n        function mousedown() {\n            d3.event.stopPropagation(); // https://github.com/openstreetmap/iD/issues/1869\n        }\n\n        function mouseover(d, i) {\n            var rect = context.surfaceRect(),\n                angle = a0 + i * a,\n                top = rect.top + (r + 25) * Math.cos(angle) + center[1] + 'px',\n                left = rect.left + (r + 25) * Math.sin(angle) + center[0] + 'px',\n                bottom = rect.height - (r + 25) * Math.cos(angle) - center[1] + 'px',\n                right = rect.width - (r + 25) * Math.sin(angle) - center[0] + 'px';\n\n            tooltip\n                .style('top', null)\n                .style('left', null)\n                .style('bottom', null)\n                .style('right', null)\n                .style('display', 'block')\n                .html(iD.ui.tooltipHtml(d.tooltip(), d.keys[0]));\n\n            if (i === 0) {\n                tooltip\n                    .style('right', right)\n                    .style('top', top);\n            } else if (i >= 4) {\n                tooltip\n                    .style('left', left)\n                    .style('bottom', bottom);\n            } else {\n                tooltip\n                    .style('left', left)\n                    .style('top', top);\n            }\n        }\n\n        function mouseout() {\n            tooltip.style('display', 'none');\n        }\n    };\n\n    radialMenu.close = function() {\n        if (menu) {\n            menu\n                .style('pointer-events', 'none')\n                .transition()\n                .attr('opacity', 0)\n                .remove();\n        }\n\n        if (tooltip) {\n            tooltip.remove();\n        }\n    };\n\n    radialMenu.center = function(_) {\n        if (!arguments.length) return center;\n        center = _;\n        return radialMenu;\n    };\n\n    return radialMenu;\n}\n","export function SelectionList(context, selectedIDs) {\n\n    function selectEntity(entity) {\n        context.enter(iD.modes.Select(context, [entity.id]).suppressMenu(true));\n    }\n\n\n    function selectionList(selection) {\n        selection.classed('selection-list-pane', true);\n\n        var header = selection.append('div')\n            .attr('class', 'header fillL cf');\n\n        header.append('h3')\n            .text(t('inspector.multiselect'));\n\n        var listWrap = selection.append('div')\n            .attr('class', 'inspector-body');\n\n        var list = listWrap.append('div')\n            .attr('class', 'feature-list cf');\n\n        context.history().on('change.selection-list', drawList);\n        drawList();\n\n        function drawList() {\n            var entities = selectedIDs\n                .map(function(id) { return context.hasEntity(id); })\n                .filter(function(entity) { return entity; });\n\n            var items = list.selectAll('.feature-list-item')\n                .data(entities, iD.Entity.key);\n\n            var enter = items.enter().append('button')\n                .attr('class', 'feature-list-item')\n                .on('click', selectEntity);\n\n            // Enter\n            var label = enter.append('div')\n                .attr('class', 'label')\n                .call(iD.svg.Icon('', 'pre-text'));\n\n            label.append('span')\n                .attr('class', 'entity-type');\n\n            label.append('span')\n                .attr('class', 'entity-name');\n\n            // Update\n            items.selectAll('use')\n                .attr('href', function() {\n                    var entity = this.parentNode.parentNode.__data__;\n                    return '#icon-' + context.geometry(entity.id);\n                });\n\n            items.selectAll('.entity-type')\n                .text(function(entity) { return context.presets().match(entity, context.graph()).name(); });\n\n            items.selectAll('.entity-name')\n                .text(function(entity) { return iD.util.displayName(entity); });\n\n            // Exit\n            items.exit()\n                .remove();\n        }\n    }\n\n    return selectionList;\n\n}\n","export function Success(context) {\n    var dispatch = d3.dispatch('cancel'),\n        changeset;\n\n    function success(selection) {\n        var message = (changeset.comment || t('success.edited_osm')).substring(0, 130) +\n            ' ' + context.connection().changesetURL(changeset.id);\n\n        var header = selection.append('div')\n            .attr('class', 'header fillL');\n\n        header.append('button')\n            .attr('class', 'fr')\n            .on('click', function() { dispatch.cancel(); })\n            .call(iD.svg.Icon('#icon-close'));\n\n        header.append('h3')\n            .text(t('success.just_edited'));\n\n        var body = selection.append('div')\n            .attr('class', 'body save-success fillL');\n\n        body.append('p')\n            .html(t('success.help_html'));\n\n        body.append('a')\n            .attr('class', 'details')\n            .attr('target', '_blank')\n            .attr('tabindex', -1)\n            .call(iD.svg.Icon('#icon-out-link', 'inline'))\n            .attr('href', t('success.help_link_url'))\n            .append('span')\n            .text(t('success.help_link_text'));\n\n        var changesetURL = context.connection().changesetURL(changeset.id);\n\n        body.append('a')\n            .attr('class', 'button col12 osm')\n            .attr('target', '_blank')\n            .attr('href', changesetURL)\n            .text(t('success.view_on_osm'));\n\n        var sharing = {\n            facebook: 'https://facebook.com/sharer/sharer.php?u=' + encodeURIComponent(changesetURL),\n            twitter: 'https://twitter.com/intent/tweet?source=webclient&text=' + encodeURIComponent(message),\n            google: 'https://plus.google.com/share?url=' + encodeURIComponent(changesetURL)\n        };\n\n        body.selectAll('.button.social')\n            .data(d3.entries(sharing))\n            .enter()\n            .append('a')\n            .attr('class', 'button social col4')\n            .attr('target', '_blank')\n            .attr('href', function(d) { return d.value; })\n            .call(bootstrap.tooltip()\n                .title(function(d) { return t('success.' + d.key); })\n                .placement('bottom'))\n            .each(function(d) { d3.select(this).call(iD.svg.Icon('#logo-' + d.key, 'social')); });\n    }\n\n    success.changeset = function(_) {\n        if (!arguments.length) return changeset;\n        changeset = _;\n        return success;\n    };\n\n    return d3.rebind(success, dispatch, 'on');\n}\n","import { Entity } from './entity';\nimport { Graph } from './graph';\nimport { Difference } from './difference';\nimport { Tree } from './tree';\nimport { SessionMutex } from '../util/index';\nimport { Loading } from '../ui/core/index';\n\nexport function History(context) {\n    var stack, index, tree,\n        imageryUsed = ['Bing'],\n        dispatch = d3.dispatch('change', 'undone', 'redone'),\n        lock = SessionMutex('lock');\n\n    function perform(actions) {\n        actions = Array.prototype.slice.call(actions);\n\n        var annotation;\n\n        if (!_.isFunction(_.last(actions))) {\n            annotation = actions.pop();\n        }\n\n        var graph = stack[index].graph;\n        for (var i = 0; i < actions.length; i++) {\n            graph = actions[i](graph);\n        }\n\n        return {\n            graph: graph,\n            annotation: annotation,\n            imageryUsed: imageryUsed\n        };\n    }\n\n    function change(previous) {\n        var difference = Difference(previous, history.graph());\n        dispatch.change(difference);\n        return difference;\n    }\n\n    // iD uses namespaced keys so multiple installations do not conflict\n    function getKey(n) {\n        return 'iD_' + window.location.origin + '_' + n;\n    }\n\n    var history = {\n        graph: function() {\n            return stack[index].graph;\n        },\n\n        base: function() {\n            return stack[0].graph;\n        },\n\n        merge: function(entities, extent) {\n            stack[0].graph.rebase(entities, _.map(stack, 'graph'), false);\n            tree.rebase(entities, false);\n\n            dispatch.change(undefined, extent);\n        },\n\n        perform: function() {\n            var previous = stack[index].graph;\n\n            stack = stack.slice(0, index + 1);\n            stack.push(perform(arguments));\n            index++;\n\n            return change(previous);\n        },\n\n        replace: function() {\n            var previous = stack[index].graph;\n\n            // assert(index == stack.length - 1)\n            stack[index] = perform(arguments);\n\n            return change(previous);\n        },\n\n        pop: function() {\n            var previous = stack[index].graph;\n\n            if (index > 0) {\n                index--;\n                stack.pop();\n                return change(previous);\n            }\n        },\n\n        // Same as calling pop and then perform\n        overwrite: function() {\n            var previous = stack[index].graph;\n\n            if (index > 0) {\n                index--;\n                stack.pop();\n            }\n            stack = stack.slice(0, index + 1);\n            stack.push(perform(arguments));\n            index++;\n\n            return change(previous);\n        },\n\n        undo: function() {\n            var previous = stack[index].graph;\n\n            // Pop to the next annotated state.\n            while (index > 0) {\n                index--;\n                if (stack[index].annotation) break;\n            }\n\n            dispatch.undone();\n            return change(previous);\n        },\n\n        redo: function() {\n            var previous = stack[index].graph;\n\n            while (index < stack.length - 1) {\n                index++;\n                if (stack[index].annotation) break;\n            }\n\n            dispatch.redone();\n            return change(previous);\n        },\n\n        undoAnnotation: function() {\n            var i = index;\n            while (i >= 0) {\n                if (stack[i].annotation) return stack[i].annotation;\n                i--;\n            }\n        },\n\n        redoAnnotation: function() {\n            var i = index + 1;\n            while (i <= stack.length - 1) {\n                if (stack[i].annotation) return stack[i].annotation;\n                i++;\n            }\n        },\n\n        intersects: function(extent) {\n            return tree.intersects(extent, stack[index].graph);\n        },\n\n        difference: function() {\n            var base = stack[0].graph,\n                head = stack[index].graph;\n            return Difference(base, head);\n        },\n\n        changes: function(action) {\n            var base = stack[0].graph,\n                head = stack[index].graph;\n\n            if (action) {\n                head = action(head);\n            }\n\n            var difference = Difference(base, head);\n\n            return {\n                modified: difference.modified(),\n                created: difference.created(),\n                deleted: difference.deleted()\n            };\n        },\n\n        validate: function(changes) {\n            return _(iD.validations)\n                .map(function(fn) { return fn()(changes, stack[index].graph); })\n                .flatten()\n                .value();\n        },\n\n        hasChanges: function() {\n            return this.difference().length() > 0;\n        },\n\n        imageryUsed: function(sources) {\n            if (sources) {\n                imageryUsed = sources;\n                return history;\n            } else {\n                return _(stack.slice(1, index + 1))\n                    .map('imageryUsed')\n                    .flatten()\n                    .uniq()\n                    .without(undefined, 'Custom')\n                    .value();\n            }\n        },\n\n        reset: function() {\n            stack = [{graph: Graph()}];\n            index = 0;\n            tree = Tree(stack[0].graph);\n            dispatch.change();\n            return history;\n        },\n\n        toJSON: function() {\n            if (!this.hasChanges()) return;\n\n            var allEntities = {},\n                baseEntities = {},\n                base = stack[0];\n\n            var s = stack.map(function(i) {\n                var modified = [], deleted = [];\n\n                _.forEach(i.graph.entities, function(entity, id) {\n                    if (entity) {\n                        var key = Entity.key(entity);\n                        allEntities[key] = entity;\n                        modified.push(key);\n                    } else {\n                        deleted.push(id);\n                    }\n\n                    // make sure that the originals of changed or deleted entities get merged\n                    // into the base of the stack after restoring the data from JSON.\n                    if (id in base.graph.entities) {\n                        baseEntities[id] = base.graph.entities[id];\n                    }\n                    // get originals of parent entities too\n                    _.forEach(base.graph._parentWays[id], function(parentId) {\n                        if (parentId in base.graph.entities) {\n                            baseEntities[parentId] = base.graph.entities[parentId];\n                        }\n                    });\n                });\n\n                var x = {};\n\n                if (modified.length) x.modified = modified;\n                if (deleted.length) x.deleted = deleted;\n                if (i.imageryUsed) x.imageryUsed = i.imageryUsed;\n                if (i.annotation) x.annotation = i.annotation;\n\n                return x;\n            });\n\n            return JSON.stringify({\n                version: 3,\n                entities: _.values(allEntities),\n                baseEntities: _.values(baseEntities),\n                stack: s,\n                nextIDs: Entity.id.next,\n                index: index\n            });\n        },\n\n        fromJSON: function(json, loadChildNodes) {\n            var h = JSON.parse(json),\n                loadComplete = true;\n\n            Entity.id.next = h.nextIDs;\n            index = h.index;\n\n            if (h.version === 2 || h.version === 3) {\n                var allEntities = {};\n\n                h.entities.forEach(function(entity) {\n                    allEntities[Entity.key(entity)] = Entity(entity);\n                });\n\n                if (h.version === 3) {\n                    // This merges originals for changed entities into the base of\n                    // the stack even if the current stack doesn't have them (for\n                    // example when iD has been restarted in a different region)\n                    var baseEntities = h.baseEntities.map(function(d) { return Entity(d); });\n                    stack[0].graph.rebase(baseEntities, _.map(stack, 'graph'), true);\n                    tree.rebase(baseEntities, true);\n\n                    // When we restore a modified way, we also need to fetch any missing\n                    // childnodes that would normally have been downloaded with it.. #2142\n                    if (loadChildNodes) {\n                        var missing =  _(baseEntities)\n                                .filter({ type: 'way' })\n                                .map('nodes')\n                                .flatten()\n                                .uniq()\n                                .reject(function(n) { return stack[0].graph.hasEntity(n); })\n                                .value();\n\n                        if (!_.isEmpty(missing)) {\n                            loadComplete = false;\n                            context.redrawEnable(false);\n\n                            var loading = Loading(context).blocking(true);\n                            context.container().call(loading);\n\n                            var childNodesLoaded = function(err, result) {\n                                if (!err) {\n                                    var visible = _.groupBy(result.data, 'visible');\n                                    if (!_.isEmpty(visible.true)) {\n                                        missing = _.difference(missing, _.map(visible.true, 'id'));\n                                        stack[0].graph.rebase(visible.true, _.map(stack, 'graph'), true);\n                                        tree.rebase(visible.true, true);\n                                    }\n\n                                    // fetch older versions of nodes that were deleted..\n                                    _.each(visible.false, function(entity) {\n                                        context.connection()\n                                            .loadEntityVersion(entity.id, +entity.version - 1, childNodesLoaded);\n                                    });\n                                }\n\n                                if (err || _.isEmpty(missing)) {\n                                    loading.close();\n                                    context.redrawEnable(true);\n                                    dispatch.change();\n                                }\n                            };\n\n                            context.connection().loadMultiple(missing, childNodesLoaded);\n                        }\n                    }\n                }\n\n                stack = h.stack.map(function(d) {\n                    var entities = {}, entity;\n\n                    if (d.modified) {\n                        d.modified.forEach(function(key) {\n                            entity = allEntities[key];\n                            entities[entity.id] = entity;\n                        });\n                    }\n\n                    if (d.deleted) {\n                        d.deleted.forEach(function(id) {\n                            entities[id] = undefined;\n                        });\n                    }\n\n                    return {\n                        graph: Graph(stack[0].graph).load(entities),\n                        annotation: d.annotation,\n                        imageryUsed: d.imageryUsed\n                    };\n                });\n\n            } else { // original version\n                stack = h.stack.map(function(d) {\n                    var entities = {};\n\n                    for (var i in d.entities) {\n                        var entity = d.entities[i];\n                        entities[i] = entity === 'undefined' ? undefined : Entity(entity);\n                    }\n\n                    d.graph = Graph(stack[0].graph).load(entities);\n                    return d;\n                });\n            }\n\n            if (loadComplete) {\n                dispatch.change();\n            }\n\n            return history;\n        },\n\n        save: function() {\n            if (lock.locked()) context.storage(getKey('saved_history'), history.toJSON() || null);\n            return history;\n        },\n\n        clearSaved: function() {\n            context.debouncedSave.cancel();\n            if (lock.locked()) context.storage(getKey('saved_history'), null);\n            return history;\n        },\n\n        lock: function() {\n            return lock.lock();\n        },\n\n        unlock: function() {\n            lock.unlock();\n        },\n\n        // is iD not open in another window and it detects that\n        // there's a history stored in localStorage that's recoverable?\n        restorableChanges: function() {\n            return lock.locked() && !!context.storage(getKey('saved_history'));\n        },\n\n        // load history from a version stored in localStorage\n        restore: function() {\n            if (!lock.locked()) return;\n\n            var json = context.storage(getKey('saved_history'));\n            if (json) history.fromJSON(json, true);\n        },\n\n        _getKey: getKey\n\n    };\n\n    history.reset();\n\n    return d3.rebind(history, dispatch, 'on');\n}\n","import { angle as getAngle } from './index';\nimport { Way } from '../core/index';\n\nexport function Turn(turn) {\n    if (!(this instanceof Turn))\n        return new Turn(turn);\n    _.extend(this, turn);\n}\n\nexport function Intersection(graph, vertexId) {\n    var vertex = graph.entity(vertexId),\n        parentWays = graph.parentWays(vertex),\n        coincident = [],\n        highways = {};\n\n    function addHighway(way, adjacentNodeId) {\n        if (highways[adjacentNodeId]) {\n            coincident.push(adjacentNodeId);\n        } else {\n            highways[adjacentNodeId] = way;\n        }\n    }\n\n    // Pre-split ways that would need to be split in\n    // order to add a restriction. The real split will\n    // happen when the restriction is added.\n    parentWays.forEach(function(way) {\n        if (!way.tags.highway || way.isArea() || way.isDegenerate())\n            return;\n\n        var isFirst = (vertexId === way.first()),\n            isLast = (vertexId === way.last()),\n            isAffix = (isFirst || isLast),\n            isClosingNode = (isFirst && isLast);\n\n        if (isAffix && !isClosingNode) {\n            var index = (isFirst ? 1 : way.nodes.length - 2);\n            addHighway(way, way.nodes[index]);\n\n        } else {\n            var splitIndex, wayA, wayB, indexA, indexB;\n            if (isClosingNode) {\n                splitIndex = Math.ceil(way.nodes.length / 2);  // split at midpoint\n                wayA = Way({id: way.id + '-a', tags: way.tags, nodes: way.nodes.slice(0, splitIndex)});\n                wayB = Way({id: way.id + '-b', tags: way.tags, nodes: way.nodes.slice(splitIndex)});\n                indexA = 1;\n                indexB = way.nodes.length - 2;\n            } else {\n                splitIndex = _.indexOf(way.nodes, vertex.id, 1);  // split at vertexid\n                wayA = Way({id: way.id + '-a', tags: way.tags, nodes: way.nodes.slice(0, splitIndex + 1)});\n                wayB = Way({id: way.id + '-b', tags: way.tags, nodes: way.nodes.slice(splitIndex)});\n                indexA = splitIndex - 1;\n                indexB = splitIndex + 1;\n            }\n            graph = graph.replace(wayA).replace(wayB);\n            addHighway(wayA, way.nodes[indexA]);\n            addHighway(wayB, way.nodes[indexB]);\n        }\n    });\n\n    // remove any ways from this intersection that are coincident\n    // (i.e. any adjacent node used by more than one intersecting way)\n    coincident.forEach(function (n) {\n        delete highways[n];\n    });\n\n\n    var intersection = {\n        highways: highways,\n        ways: _.values(highways),\n        graph: graph\n    };\n\n    intersection.adjacentNodeId = function(fromWayId) {\n        return _.find(_.keys(highways), function(k) {\n            return highways[k].id === fromWayId;\n        });\n    };\n\n    intersection.turns = function(fromNodeId) {\n        var start = highways[fromNodeId];\n        if (!start)\n            return [];\n\n        if (start.first() === vertex.id && start.tags.oneway === 'yes')\n            return [];\n        if (start.last() === vertex.id && start.tags.oneway === '-1')\n            return [];\n\n        function withRestriction(turn) {\n            graph.parentRelations(graph.entity(turn.from.way)).forEach(function(relation) {\n                if (relation.tags.type !== 'restriction')\n                    return;\n\n                var f = relation.memberByRole('from'),\n                    t = relation.memberByRole('to'),\n                    v = relation.memberByRole('via');\n\n                if (f && f.id === turn.from.way &&\n                    v && v.id === turn.via.node &&\n                    t && t.id === turn.to.way) {\n                    turn.restriction = relation.id;\n                } else if (/^only_/.test(relation.tags.restriction) &&\n                    f && f.id === turn.from.way &&\n                    v && v.id === turn.via.node &&\n                    t && t.id !== turn.to.way) {\n                    turn.restriction = relation.id;\n                    turn.indirect_restriction = true;\n                }\n            });\n\n            return Turn(turn);\n        }\n\n        var from = {\n                node: fromNodeId,\n                way: start.id.split(/-(a|b)/)[0]\n            },\n            via = { node: vertex.id },\n            turns = [];\n\n        _.each(highways, function(end, adjacentNodeId) {\n            if (end === start)\n                return;\n\n            // backward\n            if (end.first() !== vertex.id && end.tags.oneway !== 'yes') {\n                turns.push(withRestriction({\n                    from: from,\n                    via: via,\n                    to: {\n                        node: adjacentNodeId,\n                        way: end.id.split(/-(a|b)/)[0]\n                    }\n                }));\n            }\n\n            // forward\n            if (end.last() !== vertex.id && end.tags.oneway !== '-1') {\n                turns.push(withRestriction({\n                    from: from,\n                    via: via,\n                    to: {\n                        node: adjacentNodeId,\n                        way: end.id.split(/-(a|b)/)[0]\n                    }\n                }));\n            }\n\n        });\n\n        // U-turn\n        if (start.tags.oneway !== 'yes' && start.tags.oneway !== '-1') {\n            turns.push(withRestriction({\n                from: from,\n                via: via,\n                to: from,\n                u: true\n            }));\n        }\n\n        return turns;\n    };\n\n    return intersection;\n}\n\n\nexport function inferRestriction(graph, from, via, to, projection) {\n    var fromWay = graph.entity(from.way),\n        fromNode = graph.entity(from.node),\n        toWay = graph.entity(to.way),\n        toNode = graph.entity(to.node),\n        viaNode = graph.entity(via.node),\n        fromOneWay = (fromWay.tags.oneway === 'yes' && fromWay.last() === via.node) ||\n            (fromWay.tags.oneway === '-1' && fromWay.first() === via.node),\n        toOneWay = (toWay.tags.oneway === 'yes' && toWay.first() === via.node) ||\n            (toWay.tags.oneway === '-1' && toWay.last() === via.node),\n        angle = getAngle(viaNode, fromNode, projection) -\n                getAngle(viaNode, toNode, projection);\n\n    angle = angle * 180 / Math.PI;\n\n    while (angle < 0)\n        angle += 360;\n\n    if (fromNode === toNode)\n        return 'no_u_turn';\n    if ((angle < 23 || angle > 336) && fromOneWay && toOneWay)\n        return 'no_u_turn';\n    if (angle < 158)\n        return 'no_right_turn';\n    if (angle > 202)\n        return 'no_left_turn';\n\n    return 'no_straight_on';\n}\n","// For fixing up rendering of multipolygons with tags on the outer member.\n// https://github.com/openstreetmap/iD/issues/613\nexport function isSimpleMultipolygonOuterMember(entity, graph) {\n    if (entity.type !== 'way')\n        return false;\n\n    var parents = graph.parentRelations(entity);\n    if (parents.length !== 1)\n        return false;\n\n    var parent = parents[0];\n    if (!parent.isMultipolygon() || Object.keys(parent.tags).length > 1)\n        return false;\n\n    var members = parent.members, member;\n    for (var i = 0; i < members.length; i++) {\n        member = members[i];\n        if (member.id === entity.id && member.role && member.role !== 'outer')\n            return false; // Not outer member\n        if (member.id !== entity.id && (!member.role || member.role === 'outer'))\n            return false; // Not a simple multipolygon\n    }\n\n    return parent;\n}\n\nexport function simpleMultipolygonOuterMember(entity, graph) {\n    if (entity.type !== 'way')\n        return false;\n\n    var parents = graph.parentRelations(entity);\n    if (parents.length !== 1)\n        return false;\n\n    var parent = parents[0];\n    if (!parent.isMultipolygon() || Object.keys(parent.tags).length > 1)\n        return false;\n\n    var members = parent.members, member, outerMember;\n    for (var i = 0; i < members.length; i++) {\n        member = members[i];\n        if (!member.role || member.role === 'outer') {\n            if (outerMember)\n                return false; // Not a simple multipolygon\n            outerMember = member;\n        }\n    }\n\n    return outerMember && graph.hasEntity(outerMember.id);\n}\n\n// Join `array` into sequences of connecting ways.\n//\n// Segments which share identical start/end nodes will, as much as possible,\n// be connected with each other.\n//\n// The return value is a nested array. Each constituent array contains elements\n// of `array` which have been determined to connect. Each consitituent array\n// also has a `nodes` property whose value is an ordered array of member nodes,\n// with appropriate order reversal and start/end coordinate de-duplication.\n//\n// Members of `array` must have, at minimum, `type` and `id` properties.\n// Thus either an array of `iD.Way`s or a relation member array may be\n// used.\n//\n// If an member has a `tags` property, its tags will be reversed via\n// `iD.actions.Reverse` in the output.\n//\n// Incomplete members (those for which `graph.hasEntity(element.id)` returns\n// false) and non-way members are ignored.\n//\nexport function joinWays(array, graph) {\n    var joined = [], member, current, nodes, first, last, i, how, what;\n\n    array = array.filter(function(member) {\n        return member.type === 'way' && graph.hasEntity(member.id);\n    });\n\n    function resolve(member) {\n        return graph.childNodes(graph.entity(member.id));\n    }\n\n    function reverse(member) {\n        return member.tags ? iD.actions.Reverse(member.id, {reverseOneway: true})(graph).entity(member.id) : member;\n    }\n\n    while (array.length) {\n        member = array.shift();\n        current = [member];\n        current.nodes = nodes = resolve(member).slice();\n        joined.push(current);\n\n        while (array.length && _.first(nodes) !== _.last(nodes)) {\n            first = _.first(nodes);\n            last  = _.last(nodes);\n\n            for (i = 0; i < array.length; i++) {\n                member = array[i];\n                what = resolve(member);\n\n                if (last === _.first(what)) {\n                    how  = nodes.push;\n                    what = what.slice(1);\n                    break;\n                } else if (last === _.last(what)) {\n                    how  = nodes.push;\n                    what = what.slice(0, -1).reverse();\n                    member = reverse(member);\n                    break;\n                } else if (first === _.last(what)) {\n                    how  = nodes.unshift;\n                    what = what.slice(0, -1);\n                    break;\n                } else if (first === _.first(what)) {\n                    how  = nodes.unshift;\n                    what = what.slice(1).reverse();\n                    member = reverse(member);\n                    break;\n                } else {\n                    what = how = null;\n                }\n            }\n\n            if (!what)\n                break; // No more joinable ways.\n\n            how.apply(current, [member]);\n            how.apply(nodes, what);\n\n            array.splice(i, 1);\n        }\n    }\n\n    return joined;\n}\n","/*\n    Bypasses features of D3's default projection stream pipeline that are unnecessary:\n    * Antimeridian clipping\n    * Spherical rotation\n    * Resampling\n*/\nexport function RawMercator() {\n    var project = d3.geo.mercator.raw,\n        k = 512 / Math.PI, // scale\n        x = 0, y = 0, // translate\n        clipExtent = [[0, 0], [0, 0]];\n\n    function projection(point) {\n        point = project(point[0] * Math.PI / 180, point[1] * Math.PI / 180);\n        return [point[0] * k + x, y - point[1] * k];\n    }\n\n    projection.invert = function(point) {\n        point = project.invert((point[0] - x) / k, (y - point[1]) / k);\n        return point && [point[0] * 180 / Math.PI, point[1] * 180 / Math.PI];\n    };\n\n    projection.scale = function(_) {\n        if (!arguments.length) return k;\n        k = +_;\n        return projection;\n    };\n\n    projection.translate = function(_) {\n        if (!arguments.length) return [x, y];\n        x = +_[0];\n        y = +_[1];\n        return projection;\n    };\n\n    projection.clipExtent = function(_) {\n        if (!arguments.length) return clipExtent;\n        clipExtent = _;\n        return projection;\n    };\n\n    projection.stream = d3.geo.transform({\n        point: function(x, y) {\n            x = projection([x, y]);\n            this.stream.point(x[0], x[1]);\n        }\n    }).stream;\n\n    return projection;\n}\n","export { Extent } from './extent.js';\nexport {\n        Intersection,\n        Turn,\n        inferRestriction\n    } from './intersection.js';\nexport {\n    isSimpleMultipolygonOuterMember,\n    simpleMultipolygonOuterMember,\n    joinWays\n } from './multipolygon.js';\nexport { RawMercator } from './raw_mercator.js';\n\nexport function roundCoords(c) {\n    return [Math.floor(c[0]), Math.floor(c[1])];\n}\n\nexport function interp(p1, p2, t) {\n    return [p1[0] + (p2[0] - p1[0]) * t,\n            p1[1] + (p2[1] - p1[1]) * t];\n}\n\n// 2D cross product of OA and OB vectors, i.e. z-component of their 3D cross product.\n// Returns a positive value, if OAB makes a counter-clockwise turn,\n// negative for clockwise turn, and zero if the points are collinear.\nexport function cross(o, a, b) {\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);\n}\n\n// http://jsperf.com/id-dist-optimization\nexport function euclideanDistance(a, b) {\n    var x = a[0] - b[0], y = a[1] - b[1];\n    return Math.sqrt((x * x) + (y * y));\n}\n\n// using WGS84 polar radius (6356752.314245179 m)\n// const = 2 * PI * r / 360\nexport function latToMeters(dLat) {\n    return dLat * 110946.257617;\n}\n\n// using WGS84 equatorial radius (6378137.0 m)\n// const = 2 * PI * r / 360\nexport function lonToMeters(dLon, atLat) {\n    return Math.abs(atLat) >= 90 ? 0 :\n        dLon * 111319.490793 * Math.abs(Math.cos(atLat * (Math.PI/180)));\n}\n\n// using WGS84 polar radius (6356752.314245179 m)\n// const = 2 * PI * r / 360\nexport function metersToLat(m) {\n    return m / 110946.257617;\n}\n\n// using WGS84 equatorial radius (6378137.0 m)\n// const = 2 * PI * r / 360\nexport function metersToLon(m, atLat) {\n    return Math.abs(atLat) >= 90 ? 0 :\n        m / 111319.490793 / Math.abs(Math.cos(atLat * (Math.PI/180)));\n}\n\nexport function offsetToMeters(offset) {\n    var equatRadius = 6356752.314245179,\n        polarRadius = 6378137.0,\n        tileSize = 256;\n\n    return [\n        offset[0] * 2 * Math.PI * equatRadius / tileSize,\n        -offset[1] * 2 * Math.PI * polarRadius / tileSize\n    ];\n}\n\nexport function metersToOffset(meters) {\n    var equatRadius = 6356752.314245179,\n        polarRadius = 6378137.0,\n        tileSize = 256;\n\n    return [\n        meters[0] * tileSize / (2 * Math.PI * equatRadius),\n        -meters[1] * tileSize / (2 * Math.PI * polarRadius)\n    ];\n}\n\n// Equirectangular approximation of spherical distances on Earth\nexport function sphericalDistance(a, b) {\n    var x = lonToMeters(a[0] - b[0], (a[1] + b[1]) / 2),\n        y = latToMeters(a[1] - b[1]);\n    return Math.sqrt((x * x) + (y * y));\n}\n\nexport function edgeEqual(a, b) {\n    return (a[0] === b[0] && a[1] === b[1]) ||\n        (a[0] === b[1] && a[1] === b[0]);\n}\n\n// Return the counterclockwise angle in the range (-pi, pi)\n// between the positive X axis and the line intersecting a and b.\nexport function angle(a, b, projection) {\n    a = projection(a.loc);\n    b = projection(b.loc);\n    return Math.atan2(b[1] - a[1], b[0] - a[0]);\n}\n\n// Choose the edge with the minimal distance from `point` to its orthogonal\n// projection onto that edge, if such a projection exists, or the distance to\n// the closest vertex on that edge. Returns an object with the `index` of the\n// chosen edge, the chosen `loc` on that edge, and the `distance` to to it.\nexport function chooseEdge(nodes, point, projection) {\n    var dist = euclideanDistance,\n        points = nodes.map(function(n) { return projection(n.loc); }),\n        min = Infinity,\n        idx, loc;\n\n    function dot(p, q) {\n        return p[0] * q[0] + p[1] * q[1];\n    }\n\n    for (var i = 0; i < points.length - 1; i++) {\n        var o = points[i],\n            s = [points[i + 1][0] - o[0],\n                 points[i + 1][1] - o[1]],\n            v = [point[0] - o[0],\n                 point[1] - o[1]],\n            proj = dot(v, s) / dot(s, s),\n            p;\n\n        if (proj < 0) {\n            p = o;\n        } else if (proj > 1) {\n            p = points[i + 1];\n        } else {\n            p = [o[0] + proj * s[0], o[1] + proj * s[1]];\n        }\n\n        var d = dist(p, point);\n        if (d < min) {\n            min = d;\n            idx = i + 1;\n            loc = projection.invert(p);\n        }\n    }\n\n    return {\n        index: idx,\n        distance: min,\n        loc: loc\n    };\n}\n\n// Return the intersection point of 2 line segments.\n// From https://github.com/pgkelley4/line-segments-intersect\n// This uses the vector cross product approach described below:\n//  http://stackoverflow.com/a/565282/786339\nexport function lineIntersection(a, b) {\n    function subtractPoints(point1, point2) {\n        return [point1[0] - point2[0], point1[1] - point2[1]];\n    }\n    function crossProduct(point1, point2) {\n        return point1[0] * point2[1] - point1[1] * point2[0];\n    }\n\n    var p = [a[0][0], a[0][1]],\n        p2 = [a[1][0], a[1][1]],\n        q = [b[0][0], b[0][1]],\n        q2 = [b[1][0], b[1][1]],\n        r = subtractPoints(p2, p),\n        s = subtractPoints(q2, q),\n        uNumerator = crossProduct(subtractPoints(q, p), r),\n        denominator = crossProduct(r, s);\n\n    if (uNumerator && denominator) {\n        var u = uNumerator / denominator,\n            t = crossProduct(subtractPoints(q, p), s) / denominator;\n\n        if ((t >= 0) && (t <= 1) && (u >= 0) && (u <= 1)) {\n            return interp(p, p2, t);\n        }\n    }\n\n    return null;\n}\n\nexport function pathIntersections(path1, path2) {\n    var intersections = [];\n    for (var i = 0; i < path1.length - 1; i++) {\n        for (var j = 0; j < path2.length - 1; j++) {\n            var a = [ path1[i], path1[i+1] ],\n                b = [ path2[j], path2[j+1] ],\n                hit = lineIntersection(a, b);\n            if (hit) intersections.push(hit);\n        }\n    }\n    return intersections;\n}\n\n// Return whether point is contained in polygon.\n//\n// `point` should be a 2-item array of coordinates.\n// `polygon` should be an array of 2-item arrays of coordinates.\n//\n// From https://github.com/substack/point-in-polygon.\n// ray-casting algorithm based on\n// http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n//\nexport function pointInPolygon(point, polygon) {\n    var x = point[0],\n        y = point[1],\n        inside = false;\n\n    for (var i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n        var xi = polygon[i][0], yi = polygon[i][1];\n        var xj = polygon[j][0], yj = polygon[j][1];\n\n        var intersect = ((yi > y) !== (yj > y)) &&\n            (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n\n    return inside;\n}\n\nexport function polygonContainsPolygon(outer, inner) {\n    return _.every(inner, function(point) {\n        return pointInPolygon(point, outer);\n    });\n}\n\nexport function polygonIntersectsPolygon(outer, inner, checkSegments) {\n    function testSegments(outer, inner) {\n        for (var i = 0; i < outer.length - 1; i++) {\n            for (var j = 0; j < inner.length - 1; j++) {\n                var a = [ outer[i], outer[i+1] ],\n                    b = [ inner[j], inner[j+1] ];\n                if (lineIntersection(a, b)) return true;\n            }\n        }\n        return false;\n    }\n\n    function testPoints(outer, inner) {\n        return _.some(inner, function(point) {\n            return pointInPolygon(point, outer);\n        });\n    }\n\n   return testPoints(outer, inner) || (!!checkSegments && testSegments(outer, inner));\n}\n\nexport function pathLength(path) {\n    var length = 0,\n        dx, dy;\n    for (var i = 0; i < path.length - 1; i++) {\n        dx = path[i][0] - path[i + 1][0];\n        dy = path[i][1] - path[i + 1][1];\n        length += Math.sqrt(dx * dx + dy * dy);\n    }\n    return length;\n}\n","import { joinWays } from '../geo/index';\nexport function AddMember(relationId, member, memberIndex) {\n    return function(graph) {\n        var relation = graph.entity(relationId);\n\n        if (isNaN(memberIndex) && member.type === 'way') {\n            var members = relation.indexedMembers();\n            members.push(member);\n\n            var joined = joinWays(members, graph);\n            for (var i = 0; i < joined.length; i++) {\n                var segment = joined[i];\n                for (var j = 0; j < segment.length && segment.length >= 2; j++) {\n                    if (segment[j] !== member)\n                        continue;\n\n                    if (j === 0) {\n                        memberIndex = segment[j + 1].index;\n                    } else if (j === segment.length - 1) {\n                        memberIndex = segment[j - 1].index + 1;\n                    } else {\n                        memberIndex = Math.min(segment[j - 1].index + 1, segment[j + 1].index + 1);\n                    }\n                }\n            }\n        }\n\n        return graph.replace(relation.addMember(member, memberIndex));\n    };\n}\n","import { edgeEqual } from '../geo/index';\nexport function AddMidpoint(midpoint, node) {\n    return function(graph) {\n        graph = graph.replace(node.move(midpoint.loc));\n\n        var parents = _.intersection(\n            graph.parentWays(graph.entity(midpoint.edge[0])),\n            graph.parentWays(graph.entity(midpoint.edge[1])));\n\n        parents.forEach(function(way) {\n            for (var i = 0; i < way.nodes.length - 1; i++) {\n                if (edgeEqual([way.nodes[i], way.nodes[i + 1]], midpoint.edge)) {\n                    graph = graph.replace(graph.entity(way.id).addNode(node.id, i + 1));\n\n                    // Add only one midpoint on doubled-back segments,\n                    // turning them into self-intersections.\n                    return;\n                }\n            }\n        });\n\n        return graph;\n    };\n}\n","// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/AddNodeToWayAction.as\nexport function AddVertex(wayId, nodeId, index) {\n    return function(graph) {\n        return graph.replace(graph.entity(wayId).addNode(nodeId, index));\n    };\n}\n","export function ChangeMember(relationId, member, memberIndex) {\n    return function(graph) {\n        return graph.replace(graph.entity(relationId).updateMember(member, memberIndex));\n    };\n}\n","export function ChangePreset(entityId, oldPreset, newPreset) {\n    return function(graph) {\n        var entity = graph.entity(entityId),\n            geometry = entity.geometry(graph),\n            tags = entity.tags;\n\n        if (oldPreset) tags = oldPreset.removeTags(tags, geometry);\n        if (newPreset) tags = newPreset.applyTags(tags, geometry);\n\n        return graph.replace(entity.update({tags: tags}));\n    };\n}\n","export function ChangeTags(entityId, tags) {\n    return function(graph) {\n        var entity = graph.entity(entityId);\n        return graph.replace(entity.update({tags: tags}));\n    };\n}\n","import { Node } from '../core/index';\nimport { interp, euclideanDistance } from '../geo/index';\n\nexport function Circularize(wayId\n  , projection, maxAngle) {\n    maxAngle = (maxAngle || 20) * Math.PI / 180;\n\n    var action = function(graph) {\n        var way = graph.entity(wayId);\n\n        if (!way.isConvex(graph)) {\n            graph = action.makeConvex(graph);\n        }\n\n        var nodes = _.uniq(graph.childNodes(way)),\n            keyNodes = nodes.filter(function(n) { return graph.parentWays(n).length !== 1; }),\n            points = nodes.map(function(n) { return projection(n.loc); }),\n            keyPoints = keyNodes.map(function(n) { return projection(n.loc); }),\n            centroid = (points.length === 2) ? interp(points[0], points[1], 0.5) : d3.geom.polygon(points).centroid(),\n            radius = d3.median(points, function(p) { return euclideanDistance(centroid, p); }),\n            sign = d3.geom.polygon(points).area() > 0 ? 1 : -1,\n            ids;\n\n        // we need atleast two key nodes for the algorithm to work\n        if (!keyNodes.length) {\n            keyNodes = [nodes[0]];\n            keyPoints = [points[0]];\n        }\n\n        if (keyNodes.length === 1) {\n            var index = nodes.indexOf(keyNodes[0]),\n                oppositeIndex = Math.floor((index + nodes.length / 2) % nodes.length);\n\n            keyNodes.push(nodes[oppositeIndex]);\n            keyPoints.push(points[oppositeIndex]);\n        }\n\n        // key points and nodes are those connected to the ways,\n        // they are projected onto the circle, inbetween nodes are moved\n        // to constant intervals between key nodes, extra inbetween nodes are\n        // added if necessary.\n        for (var i = 0; i < keyPoints.length; i++) {\n            var nextKeyNodeIndex = (i + 1) % keyNodes.length,\n                startNode = keyNodes[i],\n                endNode = keyNodes[nextKeyNodeIndex],\n                startNodeIndex = nodes.indexOf(startNode),\n                endNodeIndex = nodes.indexOf(endNode),\n                numberNewPoints = -1,\n                indexRange = endNodeIndex - startNodeIndex,\n                distance, totalAngle, eachAngle, startAngle, endAngle,\n                angle, loc, node, j,\n                inBetweenNodes = [];\n\n            if (indexRange < 0) {\n                indexRange += nodes.length;\n            }\n\n            // position this key node\n            distance = euclideanDistance(centroid, keyPoints[i]);\n            if (distance === 0) { distance = 1e-4; }\n            keyPoints[i] = [\n                centroid[0] + (keyPoints[i][0] - centroid[0]) / distance * radius,\n                centroid[1] + (keyPoints[i][1] - centroid[1]) / distance * radius];\n            graph = graph.replace(keyNodes[i].move(projection.invert(keyPoints[i])));\n\n            // figure out the between delta angle we want to match to\n            startAngle = Math.atan2(keyPoints[i][1] - centroid[1], keyPoints[i][0] - centroid[0]);\n            endAngle = Math.atan2(keyPoints[nextKeyNodeIndex][1] - centroid[1], keyPoints[nextKeyNodeIndex][0] - centroid[0]);\n            totalAngle = endAngle - startAngle;\n\n            // detects looping around -pi/pi\n            if (totalAngle * sign > 0) {\n                totalAngle = -sign * (2 * Math.PI - Math.abs(totalAngle));\n            }\n\n            do {\n                numberNewPoints++;\n                eachAngle = totalAngle / (indexRange + numberNewPoints);\n            } while (Math.abs(eachAngle) > maxAngle);\n\n            // move existing points\n            for (j = 1; j < indexRange; j++) {\n                angle = startAngle + j * eachAngle;\n                loc = projection.invert([\n                    centroid[0] + Math.cos(angle)*radius,\n                    centroid[1] + Math.sin(angle)*radius]);\n\n                node = nodes[(j + startNodeIndex) % nodes.length].move(loc);\n                graph = graph.replace(node);\n            }\n\n            // add new inbetween nodes if necessary\n            for (j = 0; j < numberNewPoints; j++) {\n                angle = startAngle + (indexRange + j) * eachAngle;\n                loc = projection.invert([\n                    centroid[0] + Math.cos(angle) * radius,\n                    centroid[1] + Math.sin(angle) * radius]);\n\n                node = Node({loc: loc});\n                graph = graph.replace(node);\n\n                nodes.splice(endNodeIndex + j, 0, node);\n                inBetweenNodes.push(node.id);\n            }\n\n            // Check for other ways that share these keyNodes..\n            // If keyNodes are adjacent in both ways,\n            // we can add inBetween nodes to that shared way too..\n            if (indexRange === 1 && inBetweenNodes.length) {\n                var startIndex1 = way.nodes.lastIndexOf(startNode.id),\n                    endIndex1 = way.nodes.lastIndexOf(endNode.id),\n                    wayDirection1 = (endIndex1 - startIndex1);\n                if (wayDirection1 < -1) { wayDirection1 = 1; }\n\n                /* eslint-disable no-loop-func */\n                _.each(_.without(graph.parentWays(keyNodes[i]), way), function(sharedWay) {\n                    if (sharedWay.areAdjacent(startNode.id, endNode.id)) {\n                        var startIndex2 = sharedWay.nodes.lastIndexOf(startNode.id),\n                            endIndex2 = sharedWay.nodes.lastIndexOf(endNode.id),\n                            wayDirection2 = (endIndex2 - startIndex2),\n                            insertAt = endIndex2;\n                        if (wayDirection2 < -1) { wayDirection2 = 1; }\n\n                        if (wayDirection1 !== wayDirection2) {\n                            inBetweenNodes.reverse();\n                            insertAt = startIndex2;\n                        }\n                        for (j = 0; j < inBetweenNodes.length; j++) {\n                            sharedWay = sharedWay.addNode(inBetweenNodes[j], insertAt + j);\n                        }\n                        graph = graph.replace(sharedWay);\n                    }\n                });\n                /* eslint-enable no-loop-func */\n            }\n\n        }\n\n        // update the way to have all the new nodes\n        ids = nodes.map(function(n) { return n.id; });\n        ids.push(ids[0]);\n\n        way = way.update({nodes: ids});\n        graph = graph.replace(way);\n\n        return graph;\n    };\n\n    action.makeConvex = function(graph) {\n        var way = graph.entity(wayId),\n            nodes = _.uniq(graph.childNodes(way)),\n            points = nodes.map(function(n) { return projection(n.loc); }),\n            sign = d3.geom.polygon(points).area() > 0 ? 1 : -1,\n            hull = d3.geom.hull(points);\n\n        // D3 convex hulls go counterclockwise..\n        if (sign === -1) {\n            nodes.reverse();\n            points.reverse();\n        }\n\n        for (var i = 0; i < hull.length - 1; i++) {\n            var startIndex = points.indexOf(hull[i]),\n                endIndex = points.indexOf(hull[i+1]),\n                indexRange = (endIndex - startIndex);\n\n            if (indexRange < 0) {\n                indexRange += nodes.length;\n            }\n\n            // move interior nodes to the surface of the convex hull..\n            for (var j = 1; j < indexRange; j++) {\n                var point = interp(hull[i], hull[i+1], j / indexRange),\n                    node = nodes[(j + startIndex) % nodes.length].move(projection.invert(point));\n                graph = graph.replace(node);\n            }\n        }\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        if (!graph.entity(wayId).isClosed())\n            return 'not_closed';\n    };\n\n    return action;\n}\n","import { DeleteWay } from './delete_way';\nimport { DeleteNode } from './delete_node';\nimport { DeleteRelation } from './delete_relation';\n\nexport function DeleteMultiple(ids) {\n    var actions = {\n        way: DeleteWay,\n        node: DeleteNode,\n        relation: DeleteRelation\n    };\n\n    var action = function(graph) {\n        ids.forEach(function(id) {\n            if (graph.hasEntity(id)) { // It may have been deleted aready.\n                graph = actions[graph.entity(id).type](id)(graph);\n            }\n        });\n\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        for (var i = 0; i < ids.length; i++) {\n            var id = ids[i],\n                disabled = actions[graph.entity(id).type](id).disabled(graph);\n            if (disabled) return disabled;\n        }\n    };\n\n    return action;\n}\n","import { DeleteMultiple } from './delete_multiple';\n\n// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/DeleteRelationAction.as\nexport function DeleteRelation(relationId) {\n    function deleteEntity(entity, graph) {\n        return !graph.parentWays(entity).length &&\n            !graph.parentRelations(entity).length &&\n            !entity.hasInterestingTags();\n    }\n\n    var action = function(graph) {\n        var relation = graph.entity(relationId);\n\n        graph.parentRelations(relation)\n            .forEach(function(parent) {\n                parent = parent.removeMembersWithID(relationId);\n                graph = graph.replace(parent);\n\n                if (parent.isDegenerate()) {\n                    graph = DeleteRelation(parent.id)(graph);\n                }\n            });\n\n        _.uniq(_.map(relation.members, 'id')).forEach(function(memberId) {\n            graph = graph.replace(relation.removeMembersWithID(memberId));\n\n            var entity = graph.entity(memberId);\n            if (deleteEntity(entity, graph)) {\n                graph = DeleteMultiple([memberId])(graph);\n            }\n        });\n\n        return graph.remove(relation);\n    };\n\n    action.disabled = function(graph) {\n        if (!graph.entity(relationId).isComplete(graph))\n            return 'incomplete_relation';\n    };\n\n    return action;\n}\n","import { DeleteRelation } from './delete_relation';\n\n// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/DeleteWayAction.as\nexport function DeleteWay(wayId) {\n    function deleteNode(node, graph) {\n        return !graph.parentWays(node).length &&\n            !graph.parentRelations(node).length &&\n            !node.hasInterestingTags();\n    }\n\n    var action = function(graph) {\n        var way = graph.entity(wayId);\n\n        graph.parentRelations(way)\n            .forEach(function(parent) {\n                parent = parent.removeMembersWithID(wayId);\n                graph = graph.replace(parent);\n\n                if (parent.isDegenerate()) {\n                    graph = DeleteRelation(parent.id)(graph);\n                }\n            });\n\n        _.uniq(way.nodes).forEach(function(nodeId) {\n            graph = graph.replace(way.removeNode(nodeId));\n\n            var node = graph.entity(nodeId);\n            if (deleteNode(node, graph)) {\n                graph = graph.remove(node);\n            }\n        });\n\n        return graph.remove(way);\n    };\n\n    action.disabled = function(graph) {\n        var disabled = false;\n\n        graph.parentRelations(graph.entity(wayId)).forEach(function(parent) {\n            var type = parent.tags.type,\n                role = parent.memberById(wayId).role || 'outer';\n            if (type === 'route' || type === 'boundary' || (type === 'multipolygon' && role === 'outer')) {\n                disabled = 'part_of_relation';\n            }\n        });\n\n        return disabled;\n    };\n\n    return action;\n}\n","import { DeleteWay } from './delete_way';\nimport { DeleteRelation } from './delete_relation';\n\n// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/DeleteNodeAction.as\nexport function DeleteNode(nodeId) {\n    var action = function(graph) {\n        var node = graph.entity(nodeId);\n\n        graph.parentWays(node)\n            .forEach(function(parent) {\n                parent = parent.removeNode(nodeId);\n                graph = graph.replace(parent);\n\n                if (parent.isDegenerate()) {\n                    graph = DeleteWay(parent.id)(graph);\n                }\n            });\n\n        graph.parentRelations(node)\n            .forEach(function(parent) {\n                parent = parent.removeMembersWithID(nodeId);\n                graph = graph.replace(parent);\n\n                if (parent.isDegenerate()) {\n                    graph = DeleteRelation(parent.id)(graph);\n                }\n            });\n\n        return graph.remove(node);\n    };\n\n    action.disabled = function() {\n        return false;\n    };\n\n    return action;\n}\n","import { DeleteNode } from './delete_node';\n\n// Connect the ways at the given nodes.\n//\n// The last node will survive. All other nodes will be replaced with\n// the surviving node in parent ways, and then removed.\n//\n// Tags and relation memberships of of non-surviving nodes are merged\n// to the survivor.\n//\n// This is the inverse of `iD.actions.Disconnect`.\n//\n// Reference:\n//   https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/MergeNodesAction.as\n//   https://github.com/openstreetmap/josm/blob/mirror/src/org/openstreetmap/josm/actions/MergeNodesAction.java\n//\nexport function Connect(nodeIds) {\n    return function(graph) {\n        var survivor = graph.entity(_.last(nodeIds));\n\n        for (var i = 0; i < nodeIds.length - 1; i++) {\n            var node = graph.entity(nodeIds[i]);\n\n            /* eslint-disable no-loop-func */\n            graph.parentWays(node).forEach(function(parent) {\n                if (!parent.areAdjacent(node.id, survivor.id)) {\n                    graph = graph.replace(parent.replaceNode(node.id, survivor.id));\n                }\n            });\n\n            graph.parentRelations(node).forEach(function(parent) {\n                graph = graph.replace(parent.replaceMember(node, survivor));\n            });\n            /* eslint-enable no-loop-func */\n\n            survivor = survivor.mergeTags(node.tags);\n            graph = DeleteNode(node.id)(graph);\n        }\n\n        graph = graph.replace(survivor);\n\n        return graph;\n    };\n}\n","export function CopyEntities(ids, fromGraph) {\n    var copies = {};\n\n    var action = function(graph) {\n        ids.forEach(function(id) {\n            fromGraph.entity(id).copy(fromGraph, copies);\n        });\n\n        for (var id in copies) {\n            graph = graph.replace(copies[id]);\n        }\n\n        return graph;\n    };\n\n    action.copies = function() {\n        return copies;\n    };\n\n    return action;\n}\n","import { DeleteRelation } from './delete_relation';\n\nexport function DeleteMember(relationId, memberIndex) {\n    return function(graph) {\n        var relation = graph.entity(relationId)\n            .removeMember(memberIndex);\n\n        graph = graph.replace(relation);\n\n        if (relation.isDegenerate())\n            graph = DeleteRelation(relation.id)(graph);\n\n        return graph;\n    };\n}\n","export function DeprecateTags(entityId) {\n    return function(graph) {\n        var entity = graph.entity(entityId),\n            newtags = _.clone(entity.tags),\n            change = false,\n            rule;\n\n        // This handles deprecated tags with a single condition\n        for (var i = 0; i < iD.data.deprecated.length; i++) {\n\n            rule = iD.data.deprecated[i];\n            var match = _.toPairs(rule.old)[0],\n                replacements = rule.replace ? _.toPairs(rule.replace) : null;\n\n            if (entity.tags[match[0]] && match[1] === '*') {\n\n                var value = entity.tags[match[0]];\n                if (replacements && !newtags[replacements[0][0]]) {\n                    newtags[replacements[0][0]] = value;\n                }\n                delete newtags[match[0]];\n                change = true;\n\n            } else if (entity.tags[match[0]] === match[1]) {\n                newtags = _.assign({}, rule.replace || {}, _.omit(newtags, match[0]));\n                change = true;\n            }\n        }\n\n        if (change) {\n            return graph.replace(entity.update({tags: newtags}));\n        } else {\n            return graph;\n        }\n    };\n}\n","export function DiscardTags(difference) {\n    return function(graph) {\n        function discardTags(entity) {\n            if (!_.isEmpty(entity.tags)) {\n                var tags = {};\n                _.each(entity.tags, function(v, k) {\n                    if (v) tags[k] = v;\n                });\n\n                graph = graph.replace(entity.update({\n                    tags: _.omit(tags, iD.data.discarded)\n                }));\n            }\n        }\n\n        difference.modified().forEach(discardTags);\n        difference.created().forEach(discardTags);\n\n        return graph;\n    };\n}\n","// Disconect the ways at the given node.\n//\n// Optionally, disconnect only the given ways.\n//\n// For testing convenience, accepts an ID to assign to the (first) new node.\n// Normally, this will be undefined and the way will automatically\n// be assigned a new ID.\n//\n// This is the inverse of `iD.actions.Connect`.\n//\n// Reference:\n//   https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/UnjoinNodeAction.as\n//   https://github.com/openstreetmap/josm/blob/mirror/src/org/openstreetmap/josm/actions/UnGlueAction.java\n//\nimport { Node } from '../core/index';\nexport function Disconnect(nodeId, newNodeId) {\n    var wayIds;\n\n    var action = function(graph) {\n        var node = graph.entity(nodeId),\n            connections = action.connections(graph);\n\n        connections.forEach(function(connection) {\n            var way = graph.entity(connection.wayID),\n                newNode = Node({id: newNodeId, loc: node.loc, tags: node.tags});\n\n            graph = graph.replace(newNode);\n            if (connection.index === 0 && way.isArea()) {\n                // replace shared node with shared node..\n                graph = graph.replace(way.replaceNode(way.nodes[0], newNode.id));\n            } else {\n                // replace shared node with multiple new nodes..\n                graph = graph.replace(way.updateNode(newNode.id, connection.index));\n            }\n        });\n\n        return graph;\n    };\n\n    action.connections = function(graph) {\n        var candidates = [],\n            keeping = false,\n            parentWays = graph.parentWays(graph.entity(nodeId));\n\n        parentWays.forEach(function(way) {\n            if (wayIds && wayIds.indexOf(way.id) === -1) {\n                keeping = true;\n                return;\n            }\n            if (way.isArea() && (way.nodes[0] === nodeId)) {\n                candidates.push({wayID: way.id, index: 0});\n            } else {\n                way.nodes.forEach(function(waynode, index) {\n                    if (waynode === nodeId) {\n                        candidates.push({wayID: way.id, index: index});\n                    }\n                });\n            }\n        });\n\n        return keeping ? candidates : candidates.slice(1);\n    };\n\n    action.disabled = function(graph) {\n        var connections = action.connections(graph);\n        if (connections.length === 0 || (wayIds && wayIds.length !== connections.length))\n            return 'not_connected';\n\n        var parentWays = graph.parentWays(graph.entity(nodeId)),\n            seenRelationIds = {},\n            sharedRelation;\n\n        parentWays.forEach(function(way) {\n            if (wayIds && wayIds.indexOf(way.id) === -1)\n                return;\n\n            var relations = graph.parentRelations(way);\n            relations.forEach(function(relation) {\n                if (relation.id in seenRelationIds) {\n                    sharedRelation = relation;\n                } else {\n                    seenRelationIds[relation.id] = true;\n                }\n            });\n        });\n\n        if (sharedRelation)\n            return 'relation';\n    };\n\n    action.limitWays = function(_) {\n        if (!arguments.length) return wayIds;\n        wayIds = _;\n        return action;\n    };\n\n    return action;\n}\n","// Join ways at the end node they share.\n//\n// This is the inverse of `iD.actions.Split`.\n//\n// Reference:\n//   https://github.com/systemed/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/MergeWaysAction.as\n//   https://github.com/openstreetmap/josm/blob/mirror/src/org/openstreetmap/josm/actions/CombineWayAction.java\n//\nimport { joinWays } from '../geo/index';\nimport { interestingTag } from '../core/index';\nimport { DeleteWay } from './delete_way';\n\nexport function Join(ids) {\n\n    function groupEntitiesByGeometry(graph) {\n        var entities = ids.map(function(id) { return graph.entity(id); });\n        return _.extend({line: []}, _.groupBy(entities, function(entity) { return entity.geometry(graph); }));\n    }\n\n    var action = function(graph) {\n        var ways = ids.map(graph.entity, graph),\n            survivor = ways[0];\n\n        // Prefer to keep an existing way.\n        for (var i = 0; i < ways.length; i++) {\n            if (!ways[i].isNew()) {\n                survivor = ways[i];\n                break;\n            }\n        }\n\n        var joined = joinWays(ways, graph)[0];\n\n        survivor = survivor.update({nodes: _.map(joined.nodes, 'id')});\n        graph = graph.replace(survivor);\n\n        joined.forEach(function(way) {\n            if (way.id === survivor.id)\n                return;\n\n            graph.parentRelations(way).forEach(function(parent) {\n                graph = graph.replace(parent.replaceMember(way, survivor));\n            });\n\n            survivor = survivor.mergeTags(way.tags);\n\n            graph = graph.replace(survivor);\n            graph = DeleteWay(way.id)(graph);\n        });\n\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        var geometries = groupEntitiesByGeometry(graph);\n        if (ids.length < 2 || ids.length !== geometries.line.length)\n            return 'not_eligible';\n\n        var joined = joinWays(ids.map(graph.entity, graph), graph);\n        if (joined.length > 1)\n            return 'not_adjacent';\n\n        var nodeIds = _.map(joined[0].nodes, 'id').slice(1, -1),\n            relation,\n            tags = {},\n            conflicting = false;\n\n        joined[0].forEach(function(way) {\n            var parents = graph.parentRelations(way);\n            parents.forEach(function(parent) {\n                if (parent.isRestriction() && parent.members.some(function(m) { return nodeIds.indexOf(m.id) >= 0; }))\n                    relation = parent;\n            });\n\n            for (var k in way.tags) {\n                if (!(k in tags)) {\n                    tags[k] = way.tags[k];\n                } else if (tags[k] && interestingTag(k) && tags[k] !== way.tags[k]) {\n                    conflicting = true;\n                }\n            }\n        });\n\n        if (relation)\n            return 'restriction';\n\n        if (conflicting)\n            return 'conflicting_tags';\n    };\n\n    return action;\n}\n","export function Merge(ids) {\n    function groupEntitiesByGeometry(graph) {\n        var entities = ids.map(function(id) { return graph.entity(id); });\n        return _.extend({point: [], area: [], line: [], relation: []},\n            _.groupBy(entities, function(entity) { return entity.geometry(graph); }));\n    }\n\n    var action = function(graph) {\n        var geometries = groupEntitiesByGeometry(graph),\n            target = geometries.area[0] || geometries.line[0],\n            points = geometries.point;\n\n        points.forEach(function(point) {\n            target = target.mergeTags(point.tags);\n\n            graph.parentRelations(point).forEach(function(parent) {\n                graph = graph.replace(parent.replaceMember(point, target));\n            });\n\n            graph = graph.remove(point);\n        });\n\n        graph = graph.replace(target);\n\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        var geometries = groupEntitiesByGeometry(graph);\n        if (geometries.point.length === 0 ||\n            (geometries.area.length + geometries.line.length) !== 1 ||\n            geometries.relation.length !== 0)\n            return 'not_eligible';\n    };\n\n    return action;\n}\n","import { joinWays, polygonContainsPolygon } from '../geo/index';\nimport { Relation } from '../core/index';\n\nexport function MergePolygon(ids, newRelationId) {\n\n    function groupEntities(graph) {\n        var entities = ids.map(function (id) { return graph.entity(id); });\n        return _.extend({\n                closedWay: [],\n                multipolygon: [],\n                other: []\n            }, _.groupBy(entities, function(entity) {\n                if (entity.type === 'way' && entity.isClosed()) {\n                    return 'closedWay';\n                } else if (entity.type === 'relation' && entity.isMultipolygon()) {\n                    return 'multipolygon';\n                } else {\n                    return 'other';\n                }\n            }));\n    }\n\n    var action = function(graph) {\n        var entities = groupEntities(graph);\n\n        // An array representing all the polygons that are part of the multipolygon.\n        //\n        // Each element is itself an array of objects with an id property, and has a\n        // locs property which is an array of the locations forming the polygon.\n        var polygons = entities.multipolygon.reduce(function(polygons, m) {\n            return polygons.concat(joinWays(m.members, graph));\n        }, []).concat(entities.closedWay.map(function(d) {\n            var member = [{id: d.id}];\n            member.nodes = graph.childNodes(d);\n            return member;\n        }));\n\n        // contained is an array of arrays of boolean values,\n        // where contained[j][k] is true iff the jth way is\n        // contained by the kth way.\n        var contained = polygons.map(function(w, i) {\n            return polygons.map(function(d, n) {\n                if (i === n) return null;\n                return polygonContainsPolygon(\n                    _.map(d.nodes, 'loc'),\n                    _.map(w.nodes, 'loc'));\n            });\n        });\n\n        // Sort all polygons as either outer or inner ways\n        var members = [],\n            outer = true;\n\n        while (polygons.length) {\n            extractUncontained(polygons);\n            polygons = polygons.filter(isContained);\n            contained = contained.filter(isContained).map(filterContained);\n        }\n\n        function isContained(d, i) {\n            return _.some(contained[i]);\n        }\n\n        function filterContained(d) {\n            return d.filter(isContained);\n        }\n\n        function extractUncontained(polygons) {\n            polygons.forEach(function(d, i) {\n                if (!isContained(d, i)) {\n                    d.forEach(function(member) {\n                        members.push({\n                            type: 'way',\n                            id: member.id,\n                            role: outer ? 'outer' : 'inner'\n                        });\n                    });\n                }\n            });\n            outer = !outer;\n        }\n\n        // Move all tags to one relation\n        var relation = entities.multipolygon[0] ||\n            Relation({ id: newRelationId, tags: { type: 'multipolygon' }});\n\n        entities.multipolygon.slice(1).forEach(function(m) {\n            relation = relation.mergeTags(m.tags);\n            graph = graph.remove(m);\n        });\n\n        entities.closedWay.forEach(function(way) {\n            function isThisOuter(m) {\n                return m.id === way.id && m.role !== 'inner';\n            }\n            if (members.some(isThisOuter)) {\n                relation = relation.mergeTags(way.tags);\n                graph = graph.replace(way.update({ tags: {} }));\n            }\n        });\n\n        return graph.replace(relation.update({\n            members: members,\n            tags: _.omit(relation.tags, 'area')\n        }));\n    };\n\n    action.disabled = function(graph) {\n        var entities = groupEntities(graph);\n        if (entities.other.length > 0 ||\n            entities.closedWay.length + entities.multipolygon.length < 2)\n            return 'not_eligible';\n        if (!entities.multipolygon.every(function(r) { return r.isComplete(graph); }))\n            return 'incomplete_relation';\n    };\n\n    return action;\n}\n","import { DeleteMultiple } from './delete_multiple';\nimport { Entity } from '../core/index';\n\nexport function MergeRemoteChanges(id, localGraph, remoteGraph, formatUser) {\n    var option = 'safe',  // 'safe', 'force_local', 'force_remote'\n        conflicts = [];\n\n    function user(d) {\n        return _.isFunction(formatUser) ? formatUser(d) : d;\n    }\n\n\n    function mergeLocation(remote, target) {\n        function pointEqual(a, b) {\n            var epsilon = 1e-6;\n            return (Math.abs(a[0] - b[0]) < epsilon) && (Math.abs(a[1] - b[1]) < epsilon);\n        }\n\n        if (option === 'force_local' || pointEqual(target.loc, remote.loc)) {\n            return target;\n        }\n        if (option === 'force_remote') {\n            return target.update({loc: remote.loc});\n        }\n\n        conflicts.push(t('merge_remote_changes.conflict.location', { user: user(remote.user) }));\n        return target;\n    }\n\n\n    function mergeNodes(base, remote, target) {\n        if (option === 'force_local' || _.isEqual(target.nodes, remote.nodes)) {\n            return target;\n        }\n        if (option === 'force_remote') {\n            return target.update({nodes: remote.nodes});\n        }\n\n        var ccount = conflicts.length,\n            o = base.nodes || [],\n            a = target.nodes || [],\n            b = remote.nodes || [],\n            nodes = [],\n            hunks = Diff3.diff3_merge(a, o, b, true);\n\n        for (var i = 0; i < hunks.length; i++) {\n            var hunk = hunks[i];\n            if (hunk.ok) {\n                nodes.push.apply(nodes, hunk.ok);\n            } else {\n                // for all conflicts, we can assume c.a !== c.b\n                // because `diff3_merge` called with `true` option to exclude false conflicts..\n                var c = hunk.conflict;\n                if (_.isEqual(c.o, c.a)) {  // only changed remotely\n                    nodes.push.apply(nodes, c.b);\n                } else if (_.isEqual(c.o, c.b)) {  // only changed locally\n                    nodes.push.apply(nodes, c.a);\n                } else {       // changed both locally and remotely\n                    conflicts.push(t('merge_remote_changes.conflict.nodelist', { user: user(remote.user) }));\n                    break;\n                }\n            }\n        }\n\n        return (conflicts.length === ccount) ? target.update({nodes: nodes}) : target;\n    }\n\n\n    function mergeChildren(targetWay, children, updates, graph) {\n        function isUsed(node, targetWay) {\n            var parentWays = _.map(graph.parentWays(node), 'id');\n            return node.hasInterestingTags() ||\n                _.without(parentWays, targetWay.id).length > 0 ||\n                graph.parentRelations(node).length > 0;\n        }\n\n        var ccount = conflicts.length;\n\n        for (var i = 0; i < children.length; i++) {\n            var id = children[i],\n                node = graph.hasEntity(id);\n\n            // remove unused childNodes..\n            if (targetWay.nodes.indexOf(id) === -1) {\n                if (node && !isUsed(node, targetWay)) {\n                    updates.removeIds.push(id);\n                }\n                continue;\n            }\n\n            // restore used childNodes..\n            var local = localGraph.hasEntity(id),\n                remote = remoteGraph.hasEntity(id),\n                target;\n\n            if (option === 'force_remote' && remote && remote.visible) {\n                updates.replacements.push(remote);\n\n            } else if (option === 'force_local' && local) {\n                target = Entity(local);\n                if (remote) {\n                    target = target.update({ version: remote.version });\n                }\n                updates.replacements.push(target);\n\n            } else if (option === 'safe' && local && remote && local.version !== remote.version) {\n                target = Entity(local, { version: remote.version });\n                if (remote.visible) {\n                    target = mergeLocation(remote, target);\n                } else {\n                    conflicts.push(t('merge_remote_changes.conflict.deleted', { user: user(remote.user) }));\n                }\n\n                if (conflicts.length !== ccount) break;\n                updates.replacements.push(target);\n            }\n        }\n\n        return targetWay;\n    }\n\n\n    function updateChildren(updates, graph) {\n        for (var i = 0; i < updates.replacements.length; i++) {\n            graph = graph.replace(updates.replacements[i]);\n        }\n        if (updates.removeIds.length) {\n            graph = DeleteMultiple(updates.removeIds)(graph);\n        }\n        return graph;\n    }\n\n\n    function mergeMembers(remote, target) {\n        if (option === 'force_local' || _.isEqual(target.members, remote.members)) {\n            return target;\n        }\n        if (option === 'force_remote') {\n            return target.update({members: remote.members});\n        }\n\n        conflicts.push(t('merge_remote_changes.conflict.memberlist', { user: user(remote.user) }));\n        return target;\n    }\n\n\n    function mergeTags(base, remote, target) {\n        function ignoreKey(k) {\n            return _.includes(iD.data.discarded, k);\n        }\n\n        if (option === 'force_local' || _.isEqual(target.tags, remote.tags)) {\n            return target;\n        }\n        if (option === 'force_remote') {\n            return target.update({tags: remote.tags});\n        }\n\n        var ccount = conflicts.length,\n            o = base.tags || {},\n            a = target.tags || {},\n            b = remote.tags || {},\n            keys = _.reject(_.union(_.keys(o), _.keys(a), _.keys(b)), ignoreKey),\n            tags = _.clone(a),\n            changed = false;\n\n        for (var i = 0; i < keys.length; i++) {\n            var k = keys[i];\n\n            if (o[k] !== b[k] && a[k] !== b[k]) {    // changed remotely..\n                if (o[k] !== a[k]) {      // changed locally..\n                    conflicts.push(t('merge_remote_changes.conflict.tags',\n                        { tag: k, local: a[k], remote: b[k], user: user(remote.user) }));\n\n                } else {                  // unchanged locally, accept remote change..\n                    if (b.hasOwnProperty(k)) {\n                        tags[k] = b[k];\n                    } else {\n                        delete tags[k];\n                    }\n                    changed = true;\n                }\n            }\n        }\n\n        return (changed && conflicts.length === ccount) ? target.update({tags: tags}) : target;\n    }\n\n\n    //  `graph.base()` is the common ancestor of the two graphs.\n    //  `localGraph` contains user's edits up to saving\n    //  `remoteGraph` contains remote edits to modified nodes\n    //  `graph` must be a descendent of `localGraph` and may include\n    //      some conflict resolution actions performed on it.\n    //\n    //                  --- ... --- `localGraph` -- ... -- `graph`\n    //                 /\n    //  `graph.base()` --- ... --- `remoteGraph`\n    //\n    var action = function(graph) {\n        var updates = { replacements: [], removeIds: [] },\n            base = graph.base().entities[id],\n            local = localGraph.entity(id),\n            remote = remoteGraph.entity(id),\n            target = Entity(local, { version: remote.version });\n\n        // delete/undelete\n        if (!remote.visible) {\n            if (option === 'force_remote') {\n                return DeleteMultiple([id])(graph);\n\n            } else if (option === 'force_local') {\n                if (target.type === 'way') {\n                    target = mergeChildren(target, _.uniq(local.nodes), updates, graph);\n                    graph = updateChildren(updates, graph);\n                }\n                return graph.replace(target);\n\n            } else {\n                conflicts.push(t('merge_remote_changes.conflict.deleted', { user: user(remote.user) }));\n                return graph;  // do nothing\n            }\n        }\n\n        // merge\n        if (target.type === 'node') {\n            target = mergeLocation(remote, target);\n\n        } else if (target.type === 'way') {\n            // pull in any child nodes that may not be present locally..\n            graph.rebase(remoteGraph.childNodes(remote), [graph], false);\n            target = mergeNodes(base, remote, target);\n            target = mergeChildren(target, _.union(local.nodes, remote.nodes), updates, graph);\n\n        } else if (target.type === 'relation') {\n            target = mergeMembers(remote, target);\n        }\n\n        target = mergeTags(base, remote, target);\n\n        if (!conflicts.length) {\n            graph = updateChildren(updates, graph).replace(target);\n        }\n\n        return graph;\n    };\n\n    action.withOption = function(opt) {\n        option = opt;\n        return action;\n    };\n\n    action.conflicts = function() {\n        return conflicts;\n    };\n\n    return action;\n}\n","// https://github.com/openstreetmap/josm/blob/mirror/src/org/openstreetmap/josm/command/MoveCommand.java\n// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/MoveNodeAction.as\nimport {\n  angle as getAngle,\n  sphericalDistance,\n  chooseEdge,\n  pathLength,\n  interp,\n  pathIntersections\n} from '../geo/index';\nimport { Node } from '../core/index';\n\nexport function Move(moveIds, tryDelta, projection, cache) {\n    var delta = tryDelta;\n\n    function vecAdd(a, b) { return [a[0] + b[0], a[1] + b[1]]; }\n    function vecSub(a, b) { return [a[0] - b[0], a[1] - b[1]]; }\n\n    function setupCache(graph) {\n        function canMove(nodeId) {\n            var parents = _.map(graph.parentWays(graph.entity(nodeId)), 'id');\n            if (parents.length < 3) return true;\n\n            // Don't move a vertex where >2 ways meet, unless all parentWays are moving too..\n            var parentsMoving = _.all(parents, function(id) { return cache.moving[id]; });\n            if (!parentsMoving) delete cache.moving[nodeId];\n\n            return parentsMoving;\n        }\n\n        function cacheEntities(ids) {\n            _.each(ids, function(id) {\n                if (cache.moving[id]) return;\n                cache.moving[id] = true;\n\n                var entity = graph.hasEntity(id);\n                if (!entity) return;\n\n                if (entity.type === 'node') {\n                    cache.nodes.push(id);\n                    cache.startLoc[id] = entity.loc;\n                } else if (entity.type === 'way') {\n                    cache.ways.push(id);\n                    cacheEntities(entity.nodes);\n                } else {\n                    cacheEntities(_.map(entity.members, 'id'));\n                }\n            });\n        }\n\n        function cacheIntersections(ids) {\n            function isEndpoint(way, id) { return !way.isClosed() && !!way.affix(id); }\n\n            _.each(ids, function(id) {\n                // consider only intersections with 1 moved and 1 unmoved way.\n                _.each(graph.childNodes(graph.entity(id)), function(node) {\n                    var parents = graph.parentWays(node);\n                    if (parents.length !== 2) return;\n\n                    var moved = graph.entity(id),\n                        unmoved = _.find(parents, function(way) { return !cache.moving[way.id]; });\n                    if (!unmoved) return;\n\n                    // exclude ways that are overly connected..\n                    if (_.intersection(moved.nodes, unmoved.nodes).length > 2) return;\n\n                    if (moved.isArea() || unmoved.isArea()) return;\n\n                    cache.intersection[node.id] = {\n                        nodeId: node.id,\n                        movedId: moved.id,\n                        unmovedId: unmoved.id,\n                        movedIsEP: isEndpoint(moved, node.id),\n                        unmovedIsEP: isEndpoint(unmoved, node.id)\n                    };\n                });\n            });\n        }\n\n\n        if (!cache) {\n            cache = {};\n        }\n        if (!cache.ok) {\n            cache.moving = {};\n            cache.intersection = {};\n            cache.replacedVertex = {};\n            cache.startLoc = {};\n            cache.nodes = [];\n            cache.ways = [];\n\n            cacheEntities(moveIds);\n            cacheIntersections(cache.ways);\n            cache.nodes = _.filter(cache.nodes, canMove);\n\n            cache.ok = true;\n        }\n    }\n\n\n    // Place a vertex where the moved vertex used to be, to preserve way shape..\n    function replaceMovedVertex(nodeId, wayId, graph, delta) {\n        var way = graph.entity(wayId),\n            moved = graph.entity(nodeId),\n            movedIndex = way.nodes.indexOf(nodeId),\n            len, prevIndex, nextIndex;\n\n        if (way.isClosed()) {\n            len = way.nodes.length - 1;\n            prevIndex = (movedIndex + len - 1) % len;\n            nextIndex = (movedIndex + len + 1) % len;\n        } else {\n            len = way.nodes.length;\n            prevIndex = movedIndex - 1;\n            nextIndex = movedIndex + 1;\n        }\n\n        var prev = graph.hasEntity(way.nodes[prevIndex]),\n            next = graph.hasEntity(way.nodes[nextIndex]);\n\n        // Don't add orig vertex at endpoint..\n        if (!prev || !next) return graph;\n\n        var key = wayId + '_' + nodeId,\n            orig = cache.replacedVertex[key];\n        if (!orig) {\n            orig = Node();\n            cache.replacedVertex[key] = orig;\n            cache.startLoc[orig.id] = cache.startLoc[nodeId];\n        }\n\n        var start, end;\n        if (delta) {\n            start = projection(cache.startLoc[nodeId]);\n            end = projection.invert(vecAdd(start, delta));\n        } else {\n            end = cache.startLoc[nodeId];\n        }\n        orig = orig.move(end);\n\n        var angle = Math.abs(getAngle(orig, prev, projection) -\n                getAngle(orig, next, projection)) * 180 / Math.PI;\n\n        // Don't add orig vertex if it would just make a straight line..\n        if (angle > 175 && angle < 185) return graph;\n\n        // Don't add orig vertex if another point is already nearby (within 10m)\n        if (sphericalDistance(prev.loc, orig.loc) < 10 ||\n            sphericalDistance(orig.loc, next.loc) < 10) return graph;\n\n        // moving forward or backward along way?\n        var p1 = [prev.loc, orig.loc, moved.loc, next.loc].map(projection),\n            p2 = [prev.loc, moved.loc, orig.loc, next.loc].map(projection),\n            d1 = pathLength(p1),\n            d2 = pathLength(p2),\n            insertAt = (d1 < d2) ? movedIndex : nextIndex;\n\n        // moving around closed loop?\n        if (way.isClosed() && insertAt === 0) insertAt = len;\n\n        way = way.addNode(orig.id, insertAt);\n        return graph.replace(orig).replace(way);\n    }\n\n    // Reorder nodes around intersections that have moved..\n    function unZorroIntersection(intersection, graph) {\n        var vertex = graph.entity(intersection.nodeId),\n            way1 = graph.entity(intersection.movedId),\n            way2 = graph.entity(intersection.unmovedId),\n            isEP1 = intersection.movedIsEP,\n            isEP2 = intersection.unmovedIsEP;\n\n        // don't move the vertex if it is the endpoint of both ways.\n        if (isEP1 && isEP2) return graph;\n\n        var nodes1 = _.without(graph.childNodes(way1), vertex),\n            nodes2 = _.without(graph.childNodes(way2), vertex);\n\n        if (way1.isClosed() && way1.first() === vertex.id) nodes1.push(nodes1[0]);\n        if (way2.isClosed() && way2.first() === vertex.id) nodes2.push(nodes2[0]);\n\n        var edge1 = !isEP1 && chooseEdge(nodes1, projection(vertex.loc), projection),\n            edge2 = !isEP2 && chooseEdge(nodes2, projection(vertex.loc), projection),\n            loc;\n\n        // snap vertex to nearest edge (or some point between them)..\n        if (!isEP1 && !isEP2) {\n            var epsilon = 1e-4, maxIter = 10;\n            for (var i = 0; i < maxIter; i++) {\n                loc = interp(edge1.loc, edge2.loc, 0.5);\n                edge1 = chooseEdge(nodes1, projection(loc), projection);\n                edge2 = chooseEdge(nodes2, projection(loc), projection);\n                if (Math.abs(edge1.distance - edge2.distance) < epsilon) break;\n            }\n        } else if (!isEP1) {\n            loc = edge1.loc;\n        } else {\n            loc = edge2.loc;\n        }\n\n        graph = graph.replace(vertex.move(loc));\n\n        // if zorro happened, reorder nodes..\n        if (!isEP1 && edge1.index !== way1.nodes.indexOf(vertex.id)) {\n            way1 = way1.removeNode(vertex.id).addNode(vertex.id, edge1.index);\n            graph = graph.replace(way1);\n        }\n        if (!isEP2 && edge2.index !== way2.nodes.indexOf(vertex.id)) {\n            way2 = way2.removeNode(vertex.id).addNode(vertex.id, edge2.index);\n            graph = graph.replace(way2);\n        }\n\n        return graph;\n    }\n\n\n    function cleanupIntersections(graph) {\n        _.each(cache.intersection, function(obj) {\n            graph = replaceMovedVertex(obj.nodeId, obj.movedId, graph, delta);\n            graph = replaceMovedVertex(obj.nodeId, obj.unmovedId, graph, null);\n            graph = unZorroIntersection(obj, graph);\n        });\n\n        return graph;\n    }\n\n    // check if moving way endpoint can cross an unmoved way, if so limit delta..\n    function limitDelta(graph) {\n        _.each(cache.intersection, function(obj) {\n            if (!obj.movedIsEP) return;\n\n            var node = graph.entity(obj.nodeId),\n                start = projection(node.loc),\n                end = vecAdd(start, delta),\n                movedNodes = graph.childNodes(graph.entity(obj.movedId)),\n                movedPath = _.map(_.map(movedNodes, 'loc'),\n                    function(loc) { return vecAdd(projection(loc), delta); }),\n                unmovedNodes = graph.childNodes(graph.entity(obj.unmovedId)),\n                unmovedPath = _.map(_.map(unmovedNodes, 'loc'), projection),\n                hits = pathIntersections(movedPath, unmovedPath);\n\n            for (var i = 0; i < hits.length; i++) {\n                if (_.isEqual(hits[i], end)) continue;\n                var edge = chooseEdge(unmovedNodes, end, projection);\n                delta = vecSub(projection(edge.loc), start);\n            }\n        });\n    }\n\n\n    var action = function(graph) {\n        if (delta[0] === 0 && delta[1] === 0) return graph;\n\n        setupCache(graph);\n\n        if (!_.isEmpty(cache.intersection)) {\n            limitDelta(graph);\n        }\n\n        _.each(cache.nodes, function(id) {\n            var node = graph.entity(id),\n                start = projection(node.loc),\n                end = vecAdd(start, delta);\n            graph = graph.replace(node.move(projection.invert(end)));\n        });\n\n        if (!_.isEmpty(cache.intersection)) {\n            graph = cleanupIntersections(graph);\n        }\n\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        function incompleteRelation(id) {\n            var entity = graph.entity(id);\n            return entity.type === 'relation' && !entity.isComplete(graph);\n        }\n\n        if (_.some(moveIds, incompleteRelation))\n            return 'incomplete_relation';\n    };\n\n    action.delta = function() {\n        return delta;\n    };\n\n    return action;\n}\n","// https://github.com/openstreetmap/josm/blob/mirror/src/org/openstreetmap/josm/command/MoveCommand.java\n// https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/MoveNodeAction.as\nexport function MoveNode(nodeId, loc) {\n    return function(graph) {\n        return graph.replace(graph.entity(nodeId).move(loc));\n    };\n}\n","export function Noop() {\n    return function(graph) {\n        return graph;\n    };\n}\n","import { DeleteNode } from './delete_node';\nimport { euclideanDistance } from '../geo/index';\n/*\n * Based on https://github.com/openstreetmap/potlatch2/blob/master/net/systemeD/potlatch2/tools/Quadrilateralise.as\n */\n\nexport function Orthogonalize(wayId, projection) {\n    var threshold = 12, // degrees within right or straight to alter\n        lowerThreshold = Math.cos((90 - threshold) * Math.PI / 180),\n        upperThreshold = Math.cos(threshold * Math.PI / 180);\n\n    var action = function(graph) {\n        var way = graph.entity(wayId),\n            nodes = graph.childNodes(way),\n            points = _.uniq(nodes).map(function(n) { return projection(n.loc); }),\n            corner = {i: 0, dotp: 1},\n            epsilon = 1e-4,\n            i, j, score, motions;\n\n        if (nodes.length === 4) {\n            for (i = 0; i < 1000; i++) {\n                motions = points.map(calcMotion);\n                points[corner.i] = addPoints(points[corner.i],motions[corner.i]);\n                score = corner.dotp;\n                if (score < epsilon) {\n                    break;\n                }\n            }\n\n            graph = graph.replace(graph.entity(nodes[corner.i].id)\n                .move(projection.invert(points[corner.i])));\n        } else {\n            var best,\n                originalPoints = _.clone(points);\n            score = Infinity;\n\n            for (i = 0; i < 1000; i++) {\n                motions = points.map(calcMotion);\n                for (j = 0; j < motions.length; j++) {\n                    points[j] = addPoints(points[j],motions[j]);\n                }\n                var newScore = squareness(points);\n                if (newScore < score) {\n                    best = _.clone(points);\n                    score = newScore;\n                }\n                if (score < epsilon) {\n                    break;\n                }\n            }\n\n            points = best;\n\n            for (i = 0; i < points.length; i++) {\n                // only move the points that actually moved\n                if (originalPoints[i][0] !== points[i][0] || originalPoints[i][1] !== points[i][1]) {\n                    graph = graph.replace(graph.entity(nodes[i].id)\n                        .move(projection.invert(points[i])));\n                }\n            }\n\n            // remove empty nodes on straight sections\n            for (i = 0; i < points.length; i++) {\n                var node = nodes[i];\n\n                if (graph.parentWays(node).length > 1 ||\n                    graph.parentRelations(node).length ||\n                    node.hasInterestingTags()) {\n\n                    continue;\n                }\n\n                var dotp = normalizedDotProduct(i, points);\n                if (dotp < -1 + epsilon) {\n                    graph = DeleteNode(nodes[i].id)(graph);\n                }\n            }\n        }\n\n        return graph;\n\n        function calcMotion(b, i, array) {\n            var a = array[(i - 1 + array.length) % array.length],\n                c = array[(i + 1) % array.length],\n                p = subtractPoints(a, b),\n                q = subtractPoints(c, b),\n                scale, dotp;\n\n            scale = 2 * Math.min(euclideanDistance(p, [0, 0]), euclideanDistance(q, [0, 0]));\n            p = normalizePoint(p, 1.0);\n            q = normalizePoint(q, 1.0);\n\n            dotp = filterDotProduct(p[0] * q[0] + p[1] * q[1]);\n\n            // nasty hack to deal with almost-straight segments (angle is closer to 180 than to 90/270).\n            if (array.length > 3) {\n                if (dotp < -0.707106781186547) {\n                    dotp += 1.0;\n                }\n            } else if (dotp && Math.abs(dotp) < corner.dotp) {\n                corner.i = i;\n                corner.dotp = Math.abs(dotp);\n            }\n\n            return normalizePoint(addPoints(p, q), 0.1 * dotp * scale);\n        }\n    };\n\n    function squareness(points) {\n        return points.reduce(function(sum, val, i, array) {\n            var dotp = normalizedDotProduct(i, array);\n\n            dotp = filterDotProduct(dotp);\n            return sum + 2.0 * Math.min(Math.abs(dotp - 1.0), Math.min(Math.abs(dotp), Math.abs(dotp + 1)));\n        }, 0);\n    }\n\n    function normalizedDotProduct(i, points) {\n        var a = points[(i - 1 + points.length) % points.length],\n            b = points[i],\n            c = points[(i + 1) % points.length],\n            p = subtractPoints(a, b),\n            q = subtractPoints(c, b);\n\n        p = normalizePoint(p, 1.0);\n        q = normalizePoint(q, 1.0);\n\n        return p[0] * q[0] + p[1] * q[1];\n    }\n\n    function subtractPoints(a, b) {\n        return [a[0] - b[0], a[1] - b[1]];\n    }\n\n    function addPoints(a, b) {\n        return [a[0] + b[0], a[1] + b[1]];\n    }\n\n    function normalizePoint(point, scale) {\n        var vector = [0, 0];\n        var length = Math.sqrt(point[0] * point[0] + point[1] * point[1]);\n        if (length !== 0) {\n            vector[0] = point[0] / length;\n            vector[1] = point[1] / length;\n        }\n\n        vector[0] *= scale;\n        vector[1] *= scale;\n\n        return vector;\n    }\n\n    function filterDotProduct(dotp) {\n        if (lowerThreshold > Math.abs(dotp) || Math.abs(dotp) > upperThreshold) {\n            return dotp;\n        }\n\n        return 0;\n    }\n\n    action.disabled = function(graph) {\n        var way = graph.entity(wayId),\n            nodes = graph.childNodes(way),\n            points = _.uniq(nodes).map(function(n) { return projection(n.loc); });\n\n        if (squareness(points)) {\n            return false;\n        }\n\n        return 'not_squarish';\n    };\n\n    return action;\n}\n","import { AddMember } from './add_member';\nimport { sphericalDistance, isSimpleMultipolygonOuterMember} from '../geo/index';\nimport { wrap as Wrap } from '../util/index';\nimport { Way, Relation } from '../core/index';\n\n// Split a way at the given node.\n//\n// Optionally, split only the given ways, if multiple ways share\n// the given node.\n//\n// This is the inverse of `iD.actions.Join`.\n//\n// For testing convenience, accepts an ID to assign to the new way.\n// Normally, this will be undefined and the way will automatically\n// be assigned a new ID.\n//\n// Reference:\n//   https://github.com/systemed/potlatch2/blob/master/net/systemeD/halcyon/connection/actions/SplitWayAction.as\n//\nexport function Split(nodeId, newWayIds) {\n    var wayIds;\n\n    // if the way is closed, we need to search for a partner node\n    // to split the way at.\n    //\n    // The following looks for a node that is both far away from\n    // the initial node in terms of way segment length and nearby\n    // in terms of beeline-distance. This assures that areas get\n    // split on the most \"natural\" points (independent of the number\n    // of nodes).\n    // For example: bone-shaped areas get split across their waist\n    // line, circles across the diameter.\n    function splitArea(nodes, idxA, graph) {\n        var lengths = new Array(nodes.length),\n            length,\n            i,\n            best = 0,\n            idxB;\n\n        function wrap(index) {\n            return Wrap(index, nodes.length);\n        }\n\n        function dist(nA, nB) {\n            return sphericalDistance(graph.entity(nA).loc, graph.entity(nB).loc);\n        }\n\n        // calculate lengths\n        length = 0;\n        for (i = wrap(idxA+1); i !== idxA; i = wrap(i+1)) {\n            length += dist(nodes[i], nodes[wrap(i-1)]);\n            lengths[i] = length;\n        }\n\n        length = 0;\n        for (i = wrap(idxA-1); i !== idxA; i = wrap(i-1)) {\n            length += dist(nodes[i], nodes[wrap(i+1)]);\n            if (length < lengths[i])\n                lengths[i] = length;\n        }\n\n        // determine best opposite node to split\n        for (i = 0; i < nodes.length; i++) {\n            var cost = lengths[i] / dist(nodes[idxA], nodes[i]);\n            if (cost > best) {\n                idxB = i;\n                best = cost;\n            }\n        }\n\n        return idxB;\n    }\n\n    function split(graph, wayA, newWayId) {\n        var wayB = Way({id: newWayId, tags: wayA.tags}),\n            nodesA,\n            nodesB,\n            isArea = wayA.isArea(),\n            isOuter = isSimpleMultipolygonOuterMember(wayA, graph);\n\n        if (wayA.isClosed()) {\n            var nodes = wayA.nodes.slice(0, -1),\n                idxA = _.indexOf(nodes, nodeId),\n                idxB = splitArea(nodes, idxA, graph);\n\n            if (idxB < idxA) {\n                nodesA = nodes.slice(idxA).concat(nodes.slice(0, idxB + 1));\n                nodesB = nodes.slice(idxB, idxA + 1);\n            } else {\n                nodesA = nodes.slice(idxA, idxB + 1);\n                nodesB = nodes.slice(idxB).concat(nodes.slice(0, idxA + 1));\n            }\n        } else {\n            var idx = _.indexOf(wayA.nodes, nodeId, 1);\n            nodesA = wayA.nodes.slice(0, idx + 1);\n            nodesB = wayA.nodes.slice(idx);\n        }\n\n        wayA = wayA.update({nodes: nodesA});\n        wayB = wayB.update({nodes: nodesB});\n\n        graph = graph.replace(wayA);\n        graph = graph.replace(wayB);\n\n        graph.parentRelations(wayA).forEach(function(relation) {\n            if (relation.isRestriction()) {\n                var via = relation.memberByRole('via');\n                if (via && wayB.contains(via.id)) {\n                    relation = relation.updateMember({id: wayB.id}, relation.memberById(wayA.id).index);\n                    graph = graph.replace(relation);\n                }\n            } else {\n                if (relation === isOuter) {\n                    graph = graph.replace(relation.mergeTags(wayA.tags));\n                    graph = graph.replace(wayA.update({tags: {}}));\n                    graph = graph.replace(wayB.update({tags: {}}));\n                }\n\n                var member = {\n                    id: wayB.id,\n                    type: 'way',\n                    role: relation.memberById(wayA.id).role\n                };\n\n                graph = AddMember(relation.id, member)(graph);\n            }\n        });\n\n        if (!isOuter && isArea) {\n            var multipolygon = Relation({\n                tags: _.extend({}, wayA.tags, {type: 'multipolygon'}),\n                members: [\n                    {id: wayA.id, role: 'outer', type: 'way'},\n                    {id: wayB.id, role: 'outer', type: 'way'}\n                ]});\n\n            graph = graph.replace(multipolygon);\n            graph = graph.replace(wayA.update({tags: {}}));\n            graph = graph.replace(wayB.update({tags: {}}));\n        }\n\n        return graph;\n    }\n\n    var action = function(graph) {\n        var candidates = action.ways(graph);\n        for (var i = 0; i < candidates.length; i++) {\n            graph = split(graph, candidates[i], newWayIds && newWayIds[i]);\n        }\n        return graph;\n    };\n\n    action.ways = function(graph) {\n        var node = graph.entity(nodeId),\n            parents = graph.parentWays(node),\n            hasLines = _.some(parents, function(parent) { return parent.geometry(graph) === 'line'; });\n\n        return parents.filter(function(parent) {\n            if (wayIds && wayIds.indexOf(parent.id) === -1)\n                return false;\n\n            if (!wayIds && hasLines && parent.geometry(graph) !== 'line')\n                return false;\n\n            if (parent.isClosed()) {\n                return true;\n            }\n\n            for (var i = 1; i < parent.nodes.length - 1; i++) {\n                if (parent.nodes[i] === nodeId) {\n                    return true;\n                }\n            }\n\n            return false;\n        });\n    };\n\n    action.disabled = function(graph) {\n        var candidates = action.ways(graph);\n        if (candidates.length === 0 || (wayIds && wayIds.length !== candidates.length))\n            return 'not_eligible';\n    };\n\n    action.limitWays = function(_) {\n        if (!arguments.length) return wayIds;\n        wayIds = _;\n        return action;\n    };\n\n    return action;\n}\n","import { Split } from './split';\nimport { inferRestriction } from '../geo/index';\nimport { Relation, Way } from '../core/index';\n// Create a restriction relation for `turn`, which must have the following structure:\n//\n//     {\n//         from: { node: <node ID>, way: <way ID> },\n//         via:  { node: <node ID> },\n//         to:   { node: <node ID>, way: <way ID> },\n//         restriction: <'no_right_turn', 'no_left_turn', etc.>\n//     }\n//\n// This specifies a restriction of type `restriction` when traveling from\n// `from.node` in `from.way` toward `to.node` in `to.way` via `via.node`.\n// (The action does not check that these entities form a valid intersection.)\n//\n// If `restriction` is not provided, it is automatically determined by\n// inferRestriction.\n//\n// If necessary, the `from` and `to` ways are split. In these cases, `from.node`\n// and `to.node` are used to determine which portion of the split ways become\n// members of the restriction.\n//\n// For testing convenience, accepts an ID to assign to the new relation.\n// Normally, this will be undefined and the relation will automatically\n// be assigned a new ID.\n//\nexport function RestrictTurn(turn, projection, restrictionId) {\n    return function(graph) {\n        var from = graph.entity(turn.from.way),\n            via  = graph.entity(turn.via.node),\n            to   = graph.entity(turn.to.way);\n\n        function isClosingNode(way, nodeId) {\n            return nodeId === way.first() && nodeId === way.last();\n        }\n\n        function split(toOrFrom) {\n            var newID = toOrFrom.newID || Way().id;\n            graph = Split(via.id, [newID])\n                .limitWays([toOrFrom.way])(graph);\n\n            var a = graph.entity(newID),\n                b = graph.entity(toOrFrom.way);\n\n            if (a.nodes.indexOf(toOrFrom.node) !== -1) {\n                return [a, b];\n            } else {\n                return [b, a];\n            }\n        }\n\n        if (!from.affix(via.id) || isClosingNode(from, via.id)) {\n            if (turn.from.node === turn.to.node) {\n                // U-turn\n                from = to = split(turn.from)[0];\n            } else if (turn.from.way === turn.to.way) {\n                // Straight-on or circular\n                var s = split(turn.from);\n                from = s[0];\n                to   = s[1];\n            } else {\n                // Other\n                from = split(turn.from)[0];\n            }\n        }\n\n        if (!to.affix(via.id) || isClosingNode(to, via.id)) {\n            to = split(turn.to)[0];\n        }\n\n        return graph.replace(Relation({\n            id: restrictionId,\n            tags: {\n                type: 'restriction',\n                restriction: turn.restriction ||\n                    inferRestriction(\n                        graph,\n                        turn.from,\n                        turn.via,\n                        turn.to,\n                        projection)\n            },\n            members: [\n                {id: from.id, type: 'way',  role: 'from'},\n                {id: via.id,  type: 'node', role: 'via'},\n                {id: to.id,   type: 'way',  role: 'to'}\n            ]\n        }));\n    };\n}\n","/*\n  Order the nodes of a way in reverse order and reverse any direction dependent tags\n  other than `oneway`. (We assume that correcting a backwards oneway is the primary\n  reason for reversing a way.)\n\n  The following transforms are performed:\n\n    Keys:\n          *:right=* ⟺ *:left=*\n        *:forward=* ⟺ *:backward=*\n       direction=up ⟺ direction=down\n         incline=up ⟺ incline=down\n            *=right ⟺ *=left\n\n    Relation members:\n       role=forward ⟺ role=backward\n         role=north ⟺ role=south\n          role=east ⟺ role=west\n\n   In addition, numeric-valued `incline` tags are negated.\n\n   The JOSM implementation was used as a guide, but transformations that were of unclear benefit\n   or adjusted tags that don't seem to be used in practice were omitted.\n\n   References:\n      http://wiki.openstreetmap.org/wiki/Forward_%26_backward,_left_%26_right\n      http://wiki.openstreetmap.org/wiki/Key:direction#Steps\n      http://wiki.openstreetmap.org/wiki/Key:incline\n      http://wiki.openstreetmap.org/wiki/Route#Members\n      http://josm.openstreetmap.de/browser/josm/trunk/src/org/openstreetmap/josm/corrector/ReverseWayTagCorrector.java\n */\nexport function Reverse(wayId, options) {\n    var replacements = [\n            [/:right$/, ':left'], [/:left$/, ':right'],\n            [/:forward$/, ':backward'], [/:backward$/, ':forward']\n        ],\n        numeric = /^([+\\-]?)(?=[\\d.])/,\n        roleReversals = {\n            forward: 'backward',\n            backward: 'forward',\n            north: 'south',\n            south: 'north',\n            east: 'west',\n            west: 'east'\n        };\n\n    function reverseKey(key) {\n        for (var i = 0; i < replacements.length; ++i) {\n            var replacement = replacements[i];\n            if (replacement[0].test(key)) {\n                return key.replace(replacement[0], replacement[1]);\n            }\n        }\n        return key;\n    }\n\n    function reverseValue(key, value) {\n        if (key === 'incline' && numeric.test(value)) {\n            return value.replace(numeric, function(_, sign) { return sign === '-' ? '' : '-'; });\n        } else if (key === 'incline' || key === 'direction') {\n            return {up: 'down', down: 'up'}[value] || value;\n        } else if (options && options.reverseOneway && key === 'oneway') {\n            return {yes: '-1', '1': '-1', '-1': 'yes'}[value] || value;\n        } else {\n            return {left: 'right', right: 'left'}[value] || value;\n        }\n    }\n\n    return function(graph) {\n        var way = graph.entity(wayId),\n            nodes = way.nodes.slice().reverse(),\n            tags = {}, key, role;\n\n        for (key in way.tags) {\n            tags[reverseKey(key)] = reverseValue(key, way.tags[key]);\n        }\n\n        graph.parentRelations(way).forEach(function(relation) {\n            relation.members.forEach(function(member, index) {\n                if (member.id === way.id && (role = roleReversals[member.role])) {\n                    relation = relation.updateMember({role: role}, index);\n                    graph = graph.replace(relation);\n                }\n            });\n        });\n\n        return graph.replace(way.update({nodes: nodes, tags: tags}));\n    };\n}\n","import { DeleteWay } from './delete_way';\nimport { DeleteRelation } from './delete_relation';\n\nexport function Revert(id) {\n\n    var action = function(graph) {\n        var entity = graph.hasEntity(id),\n            base = graph.base().entities[id];\n\n        if (entity && !base) {    // entity will be removed..\n            if (entity.type === 'node') {\n                graph.parentWays(entity)\n                    .forEach(function(parent) {\n                        parent = parent.removeNode(id);\n                        graph = graph.replace(parent);\n\n                        if (parent.isDegenerate()) {\n                            graph = DeleteWay(parent.id)(graph);\n                        }\n                    });\n            }\n\n            graph.parentRelations(entity)\n                .forEach(function(parent) {\n                    parent = parent.removeMembersWithID(id);\n                    graph = graph.replace(parent);\n\n                    if (parent.isDegenerate()) {\n                        graph = DeleteRelation(parent.id)(graph);\n                    }\n                });\n        }\n\n        return graph.revert(id);\n    };\n\n    return action;\n}\n","export function RotateWay(wayId, pivot, angle, projection) {\n    return function(graph) {\n        return graph.update(function(graph) {\n            var way = graph.entity(wayId);\n\n            _.uniq(way.nodes).forEach(function(id) {\n\n                var node = graph.entity(id),\n                    point = projection(node.loc),\n                    radial = [0,0];\n\n                radial[0] = point[0] - pivot[0];\n                radial[1] = point[1] - pivot[1];\n\n                point = [\n                    radial[0] * Math.cos(angle) - radial[1] * Math.sin(angle) + pivot[0],\n                    radial[0] * Math.sin(angle) + radial[1] * Math.cos(angle) + pivot[1]\n                ];\n\n                graph = graph.replace(node.move(projection.invert(point)));\n\n            });\n\n        });\n    };\n}\n","import { DeleteNode } from './delete_node';\n\n/*\n * Based on https://github.com/openstreetmap/potlatch2/net/systemeD/potlatch2/tools/Straighten.as\n */\n\nexport function Straighten(wayId, projection) {\n    function positionAlongWay(n, s, e) {\n        return ((n[0] - s[0]) * (e[0] - s[0]) + (n[1] - s[1]) * (e[1] - s[1]))/\n                (Math.pow(e[0] - s[0], 2) + Math.pow(e[1] - s[1], 2));\n    }\n\n    var action = function(graph) {\n        var way = graph.entity(wayId),\n            nodes = graph.childNodes(way),\n            points = nodes.map(function(n) { return projection(n.loc); }),\n            startPoint = points[0],\n            endPoint = points[points.length-1],\n            toDelete = [],\n            i;\n\n        for (i = 1; i < points.length-1; i++) {\n            var node = nodes[i],\n                point = points[i];\n\n            if (graph.parentWays(node).length > 1 ||\n                graph.parentRelations(node).length ||\n                node.hasInterestingTags()) {\n\n                var u = positionAlongWay(point, startPoint, endPoint),\n                    p0 = startPoint[0] + u * (endPoint[0] - startPoint[0]),\n                    p1 = startPoint[1] + u * (endPoint[1] - startPoint[1]);\n\n                graph = graph.replace(graph.entity(node.id)\n                    .move(projection.invert([p0, p1])));\n            } else {\n                // safe to delete\n                if (toDelete.indexOf(node) === -1) {\n                    toDelete.push(node);\n                }\n            }\n        }\n\n        for (i = 0; i < toDelete.length; i++) {\n            graph = DeleteNode(toDelete[i].id)(graph);\n        }\n\n        return graph;\n    };\n\n    action.disabled = function(graph) {\n        // check way isn't too bendy\n        var way = graph.entity(wayId),\n            nodes = graph.childNodes(way),\n            points = nodes.map(function(n) { return projection(n.loc); }),\n            startPoint = points[0],\n            endPoint = points[points.length-1],\n            threshold = 0.2 * Math.sqrt(Math.pow(startPoint[0] - endPoint[0], 2) + Math.pow(startPoint[1] - endPoint[1], 2)),\n            i;\n\n        if (threshold === 0) {\n            return 'too_bendy';\n        }\n\n        for (i = 1; i < points.length-1; i++) {\n            var point = points[i],\n                u = positionAlongWay(point, startPoint, endPoint),\n                p0 = startPoint[0] + u * (endPoint[0] - startPoint[0]),\n                p1 = startPoint[1] + u * (endPoint[1] - startPoint[1]),\n                dist = Math.sqrt(Math.pow(p0 - point[0], 2) + Math.pow(p1 - point[1], 2));\n\n            // to bendy if point is off by 20% of total start/end distance in projected space\n            if (isNaN(dist) || dist > threshold) {\n                return 'too_bendy';\n            }\n        }\n    };\n\n    return action;\n}\n","import { DeleteRelation } from './delete_relation';\n\n// Remove the effects of `turn.restriction` on `turn`, which must have the\n// following structure:\n//\n//     {\n//         from: { node: <node ID>, way: <way ID> },\n//         via:  { node: <node ID> },\n//         to:   { node: <node ID>, way: <way ID> },\n//         restriction: <relation ID>\n//     }\n//\n// In the simple case, `restriction` is a reference to a `no_*` restriction\n// on the turn itself. In this case, it is simply deleted.\n//\n// The more complex case is where `restriction` references an `only_*`\n// restriction on a different turn in the same intersection. In that case,\n// that restriction is also deleted, but at the same time restrictions on\n// the turns other than the first two are created.\n//\nexport function UnrestrictTurn(turn) {\n    return function(graph) {\n        return DeleteRelation(turn.restriction)(graph);\n    };\n}\n","import { AddWay } from '../behavior/index';\nimport { Node, Way } from '../core/index';\nimport { DrawArea } from './index';\nimport { AddEntity, AddVertex, AddMidpoint } from '../actions/index';\nexport function AddArea(context) {\n    var mode = {\n        id: 'add-area',\n        button: 'area',\n        title: t('modes.add_area.title'),\n        description: t('modes.add_area.description'),\n        key: '3'\n    };\n\n    var behavior = AddWay(context)\n            .tail(t('modes.add_area.tail'))\n            .on('start', start)\n            .on('startFromWay', startFromWay)\n            .on('startFromNode', startFromNode),\n        defaultTags = {area: 'yes'};\n\n    function start(loc) {\n        var graph = context.graph(),\n            node = Node({loc: loc}),\n            way = Way({tags: defaultTags});\n\n        context.perform(\n            AddEntity(node),\n            AddEntity(way),\n            AddVertex(way.id, node.id),\n            AddVertex(way.id, node.id));\n\n        context.enter(DrawArea(context, way.id, graph));\n    }\n\n    function startFromWay(loc, edge) {\n        var graph = context.graph(),\n            node = Node({loc: loc}),\n            way = Way({tags: defaultTags});\n\n        context.perform(\n            AddEntity(node),\n            AddEntity(way),\n            AddVertex(way.id, node.id),\n            AddVertex(way.id, node.id),\n            AddMidpoint({ loc: loc, edge: edge }, node));\n\n        context.enter(DrawArea(context, way.id, graph));\n    }\n\n    function startFromNode(node) {\n        var graph = context.graph(),\n            way = Way({tags: defaultTags});\n\n        context.perform(\n            AddEntity(way),\n            AddVertex(way.id, node.id),\n            AddVertex(way.id, node.id));\n\n        context.enter(DrawArea(context, way.id, graph));\n    }\n\n    mode.enter = function() {\n        context.install(behavior);\n    };\n\n    mode.exit = function() {\n        context.uninstall(behavior);\n    };\n\n    return mode;\n}\n","import { AddWay } from '../behavior/index';\nimport { Node, Way } from '../core/index';\nimport { DrawLine } from './index';\nimport { AddEntity, AddVertex, AddMidpoint } from '../actions/index';\nexport function AddLine(context) {\n    var mode = {\n        id: 'add-line',\n        button: 'line',\n        title: t('modes.add_line.title'),\n        description: t('modes.add_line.description'),\n        key: '2'\n    };\n\n    var behavior = AddWay(context)\n        .tail(t('modes.add_line.tail'))\n        .on('start', start)\n        .on('startFromWay', startFromWay)\n        .on('startFromNode', startFromNode);\n\n    function start(loc) {\n        var baseGraph = context.graph(),\n            node = Node({loc: loc}),\n            way = Way();\n\n        context.perform(\n            AddEntity(node),\n            AddEntity(way),\n            AddVertex(way.id, node.id));\n\n        context.enter(DrawLine(context, way.id, baseGraph));\n    }\n\n    function startFromWay(loc, edge) {\n        var baseGraph = context.graph(),\n            node = Node({loc: loc}),\n            way = Way();\n\n        context.perform(\n            AddEntity(node),\n            AddEntity(way),\n            AddVertex(way.id, node.id),\n            AddMidpoint({ loc: loc, edge: edge }, node));\n\n        context.enter(DrawLine(context, way.id, baseGraph));\n    }\n\n    function startFromNode(node) {\n        var baseGraph = context.graph(),\n            way = Way();\n\n        context.perform(\n            AddEntity(way),\n            AddVertex(way.id, node.id));\n\n        context.enter(DrawLine(context, way.id, baseGraph));\n    }\n\n    mode.enter = function() {\n        context.install(behavior);\n    };\n\n    mode.exit = function() {\n        context.uninstall(behavior);\n    };\n\n    return mode;\n}\n","import { Draw } from '../behavior/index';\nimport { Node } from '../core/index';\nimport { Select, Browse } from './index';\nimport { AddEntity } from '../actions/index';\nexport function AddPoint(context) {\n    var mode = {\n        id: 'add-point',\n        button: 'point',\n        title: t('modes.add_point.title'),\n        description: t('modes.add_point.description'),\n        key: '1'\n    };\n\n    var behavior = Draw(context)\n        .tail(t('modes.add_point.tail'))\n        .on('click', add)\n        .on('clickWay', addWay)\n        .on('clickNode', addNode)\n        .on('cancel', cancel)\n        .on('finish', cancel);\n\n    function add(loc) {\n        var node = Node({loc: loc});\n\n        context.perform(\n            AddEntity(node),\n            t('operations.add.annotation.point'));\n\n        context.enter(\n            Select(context, [node.id])\n                .suppressMenu(true)\n                .newFeature(true));\n    }\n\n    function addWay(loc) {\n        add(loc);\n    }\n\n    function addNode(node) {\n        add(node.loc);\n    }\n\n    function cancel() {\n        context.enter(Browse(context));\n    }\n\n    mode.enter = function() {\n        context.install(behavior);\n    };\n\n    mode.exit = function() {\n        context.uninstall(behavior);\n    };\n\n    return mode;\n}\n","import { Paste, Hover, Select, Lasso } from '../behavior/index';\nimport { DragNode } from './index';\nexport function Browse(context) {\n    var mode = {\n        button: 'browse',\n        id: 'browse',\n        title: t('modes.browse.title'),\n        description: t('modes.browse.description')\n    }, sidebar;\n\n    var behaviors = [\n        Paste(context),\n        Hover(context)\n            .on('hover', context.ui().sidebar.hover),\n        Select(context),\n        Lasso(context),\n        DragNode(context).behavior];\n\n    mode.enter = function() {\n        behaviors.forEach(function(behavior) {\n            context.install(behavior);\n        });\n\n        // Get focus on the body.\n        if (document.activeElement && document.activeElement.blur) {\n            document.activeElement.blur();\n        }\n\n        if (sidebar) {\n            context.ui().sidebar.show(sidebar);\n        } else {\n            context.ui().sidebar.select(null);\n        }\n    };\n\n    mode.exit = function() {\n        context.ui().sidebar.hover.cancel();\n        behaviors.forEach(function(behavior) {\n            context.uninstall(behavior);\n        });\n\n        if (sidebar) {\n            context.ui().sidebar.hide();\n        }\n    };\n\n    mode.sidebar = function(_) {\n        if (!arguments.length) return sidebar;\n        sidebar = _;\n        return mode;\n    };\n\n    return mode;\n}\n","import { Hover, Edit, drag } from '../behavior/index';\nimport { Node } from '../core/index';\nimport { entitySelector } from '../util/index';\nimport { Select, Browse } from './index';\nimport { chooseEdge } from '../geo/index';\nimport { AddMidpoint, Noop, MoveNode, Connect } from '../actions/index';\nexport function DragNode(context) {\n    var mode = {\n        id: 'drag-node',\n        button: 'browse'\n    };\n\n    var nudgeInterval,\n        activeIDs,\n        wasMidpoint,\n        cancelled,\n        selectedIDs = [],\n        hover = Hover(context)\n            .altDisables(true)\n            .on('hover', context.ui().sidebar.hover),\n        edit = Edit(context);\n\n    function edge(point, size) {\n        var pad = [30, 100, 30, 100];\n        if (point[0] > size[0] - pad[0]) return [-10, 0];\n        else if (point[0] < pad[2]) return [10, 0];\n        else if (point[1] > size[1] - pad[1]) return [0, -10];\n        else if (point[1] < pad[3]) return [0, 10];\n        return null;\n    }\n\n    function startNudge(nudge) {\n        if (nudgeInterval) window.clearInterval(nudgeInterval);\n        nudgeInterval = window.setInterval(function() {\n            context.pan(nudge);\n        }, 50);\n    }\n\n    function stopNudge() {\n        if (nudgeInterval) window.clearInterval(nudgeInterval);\n        nudgeInterval = null;\n    }\n\n    function moveAnnotation(entity) {\n        return t('operations.move.annotation.' + entity.geometry(context.graph()));\n    }\n\n    function connectAnnotation(entity) {\n        return t('operations.connect.annotation.' + entity.geometry(context.graph()));\n    }\n\n    function origin(entity) {\n        return context.projection(entity.loc);\n    }\n\n    function start(entity) {\n        cancelled = d3.event.sourceEvent.shiftKey ||\n            context.features().hasHiddenConnections(entity, context.graph());\n\n        if (cancelled) return behavior.cancel();\n\n        wasMidpoint = entity.type === 'midpoint';\n        if (wasMidpoint) {\n            var midpoint = entity;\n            entity = Node();\n            context.perform(AddMidpoint(midpoint, entity));\n\n             var vertex = context.surface()\n                .selectAll('.' + entity.id);\n             behavior.target(vertex.node(), entity);\n\n        } else {\n            context.perform(\n                Noop());\n        }\n\n        activeIDs = _.map(context.graph().parentWays(entity), 'id');\n        activeIDs.push(entity.id);\n\n        context.enter(mode);\n    }\n\n    function datum() {\n        if (d3.event.sourceEvent.altKey) {\n            return {};\n        }\n\n        return d3.event.sourceEvent.target.__data__ || {};\n    }\n\n    // via https://gist.github.com/shawnbot/4166283\n    function childOf(p, c) {\n        if (p === c) return false;\n        while (c && c !== p) c = c.parentNode;\n        return c === p;\n    }\n\n    function move(entity) {\n        if (cancelled) return;\n        d3.event.sourceEvent.stopPropagation();\n\n        var nudge = childOf(context.container().node(),\n            d3.event.sourceEvent.toElement) &&\n            edge(d3.event.point, context.map().dimensions());\n\n        if (nudge) startNudge(nudge);\n        else stopNudge();\n\n        var loc = context.projection.invert(d3.event.point);\n\n        var d = datum();\n        if (d.type === 'node' && d.id !== entity.id) {\n            loc = d.loc;\n        } else if (d.type === 'way' && !d3.select(d3.event.sourceEvent.target).classed('fill')) {\n            loc = chooseEdge(context.childNodes(d), context.mouse(), context.projection).loc;\n        }\n\n        context.replace(\n            MoveNode(entity.id, loc),\n            moveAnnotation(entity));\n    }\n\n    function end(entity) {\n        if (cancelled) return;\n\n        var d = datum();\n\n        if (d.type === 'way') {\n            var choice = chooseEdge(context.childNodes(d), context.mouse(), context.projection);\n            context.replace(\n                AddMidpoint({ loc: choice.loc, edge: [d.nodes[choice.index - 1], d.nodes[choice.index]] }, entity),\n                connectAnnotation(d));\n\n        } else if (d.type === 'node' && d.id !== entity.id) {\n            context.replace(\n                Connect([d.id, entity.id]),\n                connectAnnotation(d));\n\n        } else if (wasMidpoint) {\n            context.replace(\n                Noop(),\n                t('operations.add.annotation.vertex'));\n\n        } else {\n            context.replace(\n                Noop(),\n                moveAnnotation(entity));\n        }\n\n        var reselection = selectedIDs.filter(function(id) {\n            return context.graph().hasEntity(id);\n        });\n\n        if (reselection.length) {\n            context.enter(\n                Select(context, reselection)\n                    .suppressMenu(true));\n        } else {\n            context.enter(Browse(context));\n        }\n    }\n\n    function cancel() {\n        behavior.cancel();\n        context.enter(Browse(context));\n    }\n\n    function setActiveElements() {\n        context.surface().selectAll(entitySelector(activeIDs))\n            .classed('active', true);\n    }\n\n    var behavior = drag()\n        .delegate('g.node, g.point, g.midpoint')\n        .surface(context.surface().node())\n        .origin(origin)\n        .on('start', start)\n        .on('move', move)\n        .on('end', end);\n\n    mode.enter = function() {\n        context.install(hover);\n        context.install(edit);\n\n        context.history()\n            .on('undone.drag-node', cancel);\n\n        context.map()\n            .on('drawn.drag-node', setActiveElements);\n\n        setActiveElements();\n    };\n\n    mode.exit = function() {\n        context.ui().sidebar.hover.cancel();\n        context.uninstall(hover);\n        context.uninstall(edit);\n\n        context.history()\n            .on('undone.drag-node', null);\n\n        context.map()\n            .on('drawn.drag-node', null);\n\n        context.surface()\n            .selectAll('.active')\n            .classed('active', false);\n\n        stopNudge();\n    };\n\n    mode.selectedIDs = function(_) {\n        if (!arguments.length) return selectedIDs;\n        selectedIDs = _;\n        return mode;\n    };\n\n    mode.behavior = behavior;\n\n    return mode;\n}\n","import { DrawWay } from '../behavior/index';\nexport function DrawArea(context, wayId, baseGraph) {\n    var mode = {\n        button: 'area',\n        id: 'draw-area'\n    };\n\n    var behavior;\n\n    mode.enter = function() {\n        var way = context.entity(wayId),\n            headId = way.nodes[way.nodes.length - 2],\n            tailId = way.first();\n\n        behavior = DrawWay(context, wayId, -1, mode, baseGraph)\n            .tail(t('modes.draw_area.tail'));\n\n        var addNode = behavior.addNode;\n\n        behavior.addNode = function(node) {\n            if (node.id === headId || node.id === tailId) {\n                behavior.finish();\n            } else {\n                addNode(node);\n            }\n        };\n\n        context.install(behavior);\n    };\n\n    mode.exit = function() {\n        context.uninstall(behavior);\n    };\n\n    mode.selectedIDs = function() {\n        return [wayId];\n    };\n\n    return mode;\n}\n","import { DrawWay } from '../behavior/index';\nexport function DrawLine(context, wayId, baseGraph, affix) {\n    var mode = {\n        button: 'line',\n        id: 'draw-line'\n    };\n\n    var behavior;\n\n    mode.enter = function() {\n        var way = context.entity(wayId),\n            index = (affix === 'prefix') ? 0 : undefined,\n            headId = (affix === 'prefix') ? way.first() : way.last();\n\n        behavior = DrawWay(context, wayId, index, mode, baseGraph)\n            .tail(t('modes.draw_line.tail'));\n\n        var addNode = behavior.addNode;\n\n        behavior.addNode = function(node) {\n            if (node.id === headId) {\n                behavior.finish();\n            } else {\n                addNode(node);\n            }\n        };\n\n        context.install(behavior);\n    };\n\n    mode.exit = function() {\n        context.uninstall(behavior);\n    };\n\n    mode.selectedIDs = function() {\n        return [wayId];\n    };\n\n    return mode;\n}\n","import { Edit } from '../behavior/index';\nimport { Select, Browse } from './index';\nimport { Move as MoveAction, Noop } from '../actions/index';\nexport function Move(context, entityIDs, baseGraph) {\n    var mode = {\n        id: 'move',\n        button: 'browse'\n    };\n\n    var keybinding = d3.keybinding('move'),\n        edit = Edit(context),\n        annotation = entityIDs.length === 1 ?\n            t('operations.move.annotation.' + context.geometry(entityIDs[0])) :\n            t('operations.move.annotation.multiple'),\n        cache,\n        origin,\n        nudgeInterval;\n\n    function vecSub(a, b) { return [a[0] - b[0], a[1] - b[1]]; }\n\n    function edge(point, size) {\n        var pad = [30, 100, 30, 100];\n        if (point[0] > size[0] - pad[0]) return [-10, 0];\n        else if (point[0] < pad[2]) return [10, 0];\n        else if (point[1] > size[1] - pad[1]) return [0, -10];\n        else if (point[1] < pad[3]) return [0, 10];\n        return null;\n    }\n\n    function startNudge(nudge) {\n        if (nudgeInterval) window.clearInterval(nudgeInterval);\n        nudgeInterval = window.setInterval(function() {\n            context.pan(nudge);\n\n            var currMouse = context.mouse(),\n                origMouse = context.projection(origin),\n                delta = vecSub(vecSub(currMouse, origMouse), nudge),\n                action = MoveAction(entityIDs, delta, context.projection, cache);\n\n            context.overwrite(action, annotation);\n\n        }, 50);\n    }\n\n    function stopNudge() {\n        if (nudgeInterval) window.clearInterval(nudgeInterval);\n        nudgeInterval = null;\n    }\n\n    function move() {\n        var currMouse = context.mouse(),\n            origMouse = context.projection(origin),\n            delta = vecSub(currMouse, origMouse),\n            action = MoveAction(entityIDs, delta, context.projection, cache);\n\n        context.overwrite(action, annotation);\n\n        var nudge = edge(currMouse, context.map().dimensions());\n        if (nudge) startNudge(nudge);\n        else stopNudge();\n    }\n\n    function finish() {\n        d3.event.stopPropagation();\n        context.enter(Select(context, entityIDs).suppressMenu(true));\n        stopNudge();\n    }\n\n    function cancel() {\n        if (baseGraph) {\n            while (context.graph() !== baseGraph) context.pop();\n            context.enter(Browse(context));\n        } else {\n            context.pop();\n            context.enter(Select(context, entityIDs).suppressMenu(true));\n        }\n        stopNudge();\n    }\n\n    function undone() {\n        context.enter(Browse(context));\n    }\n\n    mode.enter = function() {\n        origin = context.map().mouseCoordinates();\n        cache = {};\n\n        context.install(edit);\n\n        context.perform(\n            Noop(),\n            annotation);\n\n        context.surface()\n            .on('mousemove.move', move)\n            .on('click.move', finish);\n\n        context.history()\n            .on('undone.move', undone);\n\n        keybinding\n            .on('⎋', cancel)\n            .on('↩', finish);\n\n        d3.select(document)\n            .call(keybinding);\n    };\n\n    mode.exit = function() {\n        stopNudge();\n\n        context.uninstall(edit);\n\n        context.surface()\n            .on('mousemove.move', null)\n            .on('click.move', null);\n\n        context.history()\n            .on('undone.move', null);\n\n        keybinding.off();\n    };\n\n    return mode;\n}\n","import { Edit } from '../behavior/index';\nimport { Select, Browse } from './index';\nimport { Noop, RotateWay as RotateWayAction } from '../actions/index';\nexport function RotateWay(context, wayId) {\n    var mode = {\n        id: 'rotate-way',\n        button: 'browse'\n    };\n\n    var keybinding = d3.keybinding('rotate-way'),\n        edit = Edit(context);\n\n    mode.enter = function() {\n        context.install(edit);\n\n        var annotation = t('operations.rotate.annotation.' + context.geometry(wayId)),\n            way = context.graph().entity(wayId),\n            nodes = _.uniq(context.graph().childNodes(way)),\n            points = nodes.map(function(n) { return context.projection(n.loc); }),\n            pivot = d3.geom.polygon(points).centroid(),\n            angle;\n\n        context.perform(\n            Noop(),\n            annotation);\n\n        function rotate() {\n\n            var mousePoint = context.mouse(),\n                newAngle = Math.atan2(mousePoint[1] - pivot[1], mousePoint[0] - pivot[0]);\n\n            if (typeof angle === 'undefined') angle = newAngle;\n\n            context.replace(\n                RotateWayAction(wayId, pivot, newAngle - angle, context.projection),\n                annotation);\n\n            angle = newAngle;\n        }\n\n        function finish() {\n            d3.event.stopPropagation();\n            context.enter(Select(context, [wayId])\n                .suppressMenu(true));\n        }\n\n        function cancel() {\n            context.pop();\n            context.enter(Select(context, [wayId])\n                .suppressMenu(true));\n        }\n\n        function undone() {\n            context.enter(Browse(context));\n        }\n\n        context.surface()\n            .on('mousemove.rotate-way', rotate)\n            .on('click.rotate-way', finish);\n\n        context.history()\n            .on('undone.rotate-way', undone);\n\n        keybinding\n            .on('⎋', cancel)\n            .on('↩', finish);\n\n        d3.select(document)\n            .call(keybinding);\n    };\n\n    mode.exit = function() {\n        context.uninstall(edit);\n\n        context.surface()\n            .on('mousemove.rotate-way', null)\n            .on('click.rotate-way', null);\n\n        context.history()\n            .on('undone.rotate-way', null);\n\n        keybinding.off();\n    };\n\n    return mode;\n}\n","import { Graph } from '../core/index';\nimport { displayName, displayType } from '../util/index';\nimport { Browse } from './index';\nimport { DiscardTags, Noop, MergeRemoteChanges, Revert } from '../actions/index';\nimport { Commit, Loading, Success, Conflicts } from '../ui/core/index';\n\nexport function Save(context) {\n    var ui = Commit(context)\n            .on('cancel', cancel)\n            .on('save', save);\n\n    function cancel() {\n        context.enter(Browse(context));\n    }\n\n    function save(e, tryAgain) {\n        function withChildNodes(ids, graph) {\n            return _.uniq(_.reduce(ids, function(result, id) {\n                var e = graph.entity(id);\n                if (e.type === 'way') {\n                    try {\n                        var cn = graph.childNodes(e);\n                        result.push.apply(result, _.map(_.filter(cn, 'version'), 'id'));\n                    } catch (err) {\n                        /* eslint-disable no-console */\n                        if (typeof console !== 'undefined') console.error(err);\n                        /* eslint-enable no-console */\n                    }\n                }\n                return result;\n            }, _.clone(ids)));\n        }\n\n        var loading = Loading(context).message(t('save.uploading')).blocking(true),\n            history = context.history(),\n            origChanges = history.changes(DiscardTags(history.difference())),\n            localGraph = context.graph(),\n            remoteGraph = Graph(history.base(), true),\n            modified = _.filter(history.difference().summary(), {changeType: 'modified'}),\n            toCheck = _.map(_.map(modified, 'entity'), 'id'),\n            toLoad = withChildNodes(toCheck, localGraph),\n            conflicts = [],\n            errors = [];\n\n        if (!tryAgain) history.perform(Noop());  // checkpoint\n        context.container().call(loading);\n\n        if (toCheck.length) {\n            context.connection().loadMultiple(toLoad, loaded);\n        } else {\n            finalize();\n        }\n\n\n        // Reload modified entities into an alternate graph and check for conflicts..\n        function loaded(err, result) {\n            if (errors.length) return;\n\n            if (err) {\n                errors.push({\n                    msg: err.responseText,\n                    details: [ t('save.status_code', { code: err.status }) ]\n                });\n                showErrors();\n\n            } else {\n                var loadMore = [];\n                _.each(result.data, function(entity) {\n                    remoteGraph.replace(entity);\n                    toLoad = _.without(toLoad, entity.id);\n\n                    // Because loadMultiple doesn't download /full like loadEntity,\n                    // need to also load children that aren't already being checked..\n                    if (!entity.visible) return;\n                    if (entity.type === 'way') {\n                        loadMore.push.apply(loadMore,\n                            _.difference(entity.nodes, toCheck, toLoad, loadMore));\n                    } else if (entity.type === 'relation' && entity.isMultipolygon()) {\n                        loadMore.push.apply(loadMore,\n                            _.difference(_.map(entity.members, 'id'), toCheck, toLoad, loadMore));\n                    }\n                });\n\n                if (loadMore.length) {\n                    toLoad.push.apply(toLoad, loadMore);\n                    context.connection().loadMultiple(loadMore, loaded);\n                }\n\n                if (!toLoad.length) {\n                    checkConflicts();\n                }\n            }\n        }\n\n\n        function checkConflicts() {\n            function choice(id, text, action) {\n                return { id: id, text: text, action: function() { history.replace(action); } };\n            }\n            function formatUser(d) {\n                return '<a href=\"' + context.connection().userURL(d) + '\" target=\"_blank\">' + d + '</a>';\n            }\n            function entityName(entity) {\n                return displayName(entity) || (displayType(entity.id) + ' ' + entity.id);\n            }\n\n            function compareVersions(local, remote) {\n                if (local.version !== remote.version) return false;\n\n                if (local.type === 'way') {\n                    var children = _.union(local.nodes, remote.nodes);\n\n                    for (var i = 0; i < children.length; i++) {\n                        var a = localGraph.hasEntity(children[i]),\n                            b = remoteGraph.hasEntity(children[i]);\n\n                        if (a && b && a.version !== b.version) return false;\n                    }\n                }\n\n                return true;\n            }\n\n            _.each(toCheck, function(id) {\n                var local = localGraph.entity(id),\n                    remote = remoteGraph.entity(id);\n\n                if (compareVersions(local, remote)) return;\n\n                var action = MergeRemoteChanges,\n                    merge = action(id, localGraph, remoteGraph, formatUser);\n\n                history.replace(merge);\n\n                var mergeConflicts = merge.conflicts();\n                if (!mergeConflicts.length) return;  // merged safely\n\n                var forceLocal = action(id, localGraph, remoteGraph).withOption('force_local'),\n                    forceRemote = action(id, localGraph, remoteGraph).withOption('force_remote'),\n                    keepMine = t('save.conflict.' + (remote.visible ? 'keep_local' : 'restore')),\n                    keepTheirs = t('save.conflict.' + (remote.visible ? 'keep_remote' : 'delete'));\n\n                conflicts.push({\n                    id: id,\n                    name: entityName(local),\n                    details: mergeConflicts,\n                    chosen: 1,\n                    choices: [\n                        choice(id, keepMine, forceLocal),\n                        choice(id, keepTheirs, forceRemote)\n                    ]\n                });\n            });\n\n            finalize();\n        }\n\n\n        function finalize() {\n            if (conflicts.length) {\n                conflicts.sort(function(a,b) { return b.id.localeCompare(a.id); });\n                showConflicts();\n            } else if (errors.length) {\n                showErrors();\n            } else {\n                var changes = history.changes(DiscardTags(history.difference()));\n                if (changes.modified.length || changes.created.length || changes.deleted.length) {\n                    context.connection().putChangeset(\n                        changes,\n                        e.comment,\n                        history.imageryUsed(),\n                        function(err, changeset_id) {\n                            if (err) {\n                                errors.push({\n                                    msg: err.responseText,\n                                    details: [ t('save.status_code', { code: err.status }) ]\n                                });\n                                showErrors();\n                            } else {\n                                history.clearSaved();\n                                success(e, changeset_id);\n                                // Add delay to allow for postgres replication #1646 #2678\n                                window.setTimeout(function() {\n                                    loading.close();\n                                    context.flush();\n                                }, 2500);\n                            }\n                        });\n                } else {        // changes were insignificant or reverted by user\n                    loading.close();\n                    context.flush();\n                    cancel();\n                }\n            }\n        }\n\n\n        function showConflicts() {\n            var selection = context.container()\n                .select('#sidebar')\n                .append('div')\n                .attr('class','sidebar-component');\n\n            loading.close();\n\n            selection.call(Conflicts(context)\n                .list(conflicts)\n                .on('download', function() {\n                    var data = JXON.stringify(context.connection().osmChangeJXON('CHANGEME', origChanges)),\n                        win = window.open('data:text/xml,' + encodeURIComponent(data), '_blank');\n                    win.focus();\n                })\n                .on('cancel', function() {\n                    history.pop();\n                    selection.remove();\n                })\n                .on('save', function() {\n                    for (var i = 0; i < conflicts.length; i++) {\n                        if (conflicts[i].chosen === 1) {  // user chose \"keep theirs\"\n                            var entity = context.hasEntity(conflicts[i].id);\n                            if (entity && entity.type === 'way') {\n                                var children = _.uniq(entity.nodes);\n                                for (var j = 0; j < children.length; j++) {\n                                    history.replace(Revert(children[j]));\n                                }\n                            }\n                            history.replace(Revert(conflicts[i].id));\n                        }\n                    }\n\n                    selection.remove();\n                    save(e, true);\n                })\n            );\n        }\n\n\n        function showErrors() {\n            var selection = confirm(context.container());\n\n            history.pop();\n            loading.close();\n\n            selection\n                .select('.modal-section.header')\n                .append('h3')\n                .text(t('save.error'));\n\n            addErrors(selection, errors);\n            selection.okButton();\n        }\n\n\n        function addErrors(selection, data) {\n            var message = selection\n                .select('.modal-section.message-text');\n\n            var items = message\n                .selectAll('.error-container')\n                .data(data);\n\n            var enter = items.enter()\n                .append('div')\n                .attr('class', 'error-container');\n\n            enter\n                .append('a')\n                .attr('class', 'error-description')\n                .attr('href', '#')\n                .classed('hide-toggle', true)\n                .text(function(d) { return d.msg || t('save.unknown_error_details'); })\n                .on('click', function() {\n                    var error = d3.select(this),\n                        detail = d3.select(this.nextElementSibling),\n                        exp = error.classed('expanded');\n\n                    detail.style('display', exp ? 'none' : 'block');\n                    error.classed('expanded', !exp);\n\n                    d3.event.preventDefault();\n                });\n\n            var details = enter\n                .append('div')\n                .attr('class', 'error-detail-container')\n                .style('display', 'none');\n\n            details\n                .append('ul')\n                .attr('class', 'error-detail-list')\n                .selectAll('li')\n                .data(function(d) { return d.details || []; })\n                .enter()\n                .append('li')\n                .attr('class', 'error-detail-item')\n                .text(function(d) { return d; });\n\n            items.exit()\n                .remove();\n        }\n\n    }\n\n\n    function success(e, changeset_id) {\n        context.enter(Browse(context)\n            .sidebar(Success(context)\n                .changeset({\n                    id: changeset_id,\n                    comment: e.comment\n                })\n                .on('cancel', function() {\n                    context.ui().sidebar.hide();\n                })));\n    }\n\n    var mode = {\n        id: 'save'\n    };\n\n    mode.enter = function() {\n        context.connection().authenticate(function(err) {\n            if (err) {\n                cancel();\n            } else {\n                context.ui().sidebar.show(ui);\n            }\n        });\n    };\n\n    mode.exit = function() {\n        context.ui().sidebar.hide();\n    };\n\n    return mode;\n}\n","import { Circularize as CircularizeAction } from '../actions/index';\nexport function Circularize(selectedIDs, context) {\n    var entityId = selectedIDs[0],\n        entity = context.entity(entityId),\n        extent = entity.extent(context.graph()),\n        geometry = context.geometry(entityId),\n        action = CircularizeAction(entityId, context.projection);\n\n    var operation = function() {\n        var annotation = t('operations.circularize.annotation.' + geometry);\n        context.perform(action, annotation);\n    };\n\n    operation.available = function() {\n        return selectedIDs.length === 1 &&\n            entity.type === 'way' &&\n            _.uniq(entity.nodes).length > 1;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (extent.percentContainedIn(context.extent()) < 0.8) {\n            reason = 'too_large';\n        } else if (context.hasHiddenConnections(entityId)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.circularize.' + disable) :\n            t('operations.circularize.description.' + geometry);\n    };\n\n    operation.id = 'circularize';\n    operation.keys = [t('operations.circularize.key')];\n    operation.title = t('operations.circularize.title');\n\n    return operation;\n}\n","import { DrawLine } from '../modes/index';\nexport function Continue(selectedIDs, context) {\n    var graph = context.graph(),\n        entities = selectedIDs.map(function(id) { return graph.entity(id); }),\n        geometries = _.extend({line: [], vertex: []},\n            _.groupBy(entities, function(entity) { return entity.geometry(graph); })),\n        vertex = geometries.vertex[0];\n\n    function candidateWays() {\n        return graph.parentWays(vertex).filter(function(parent) {\n            return parent.geometry(graph) === 'line' &&\n                parent.affix(vertex.id) &&\n                (geometries.line.length === 0 || geometries.line[0] === parent);\n        });\n    }\n\n    var operation = function() {\n        var candidate = candidateWays()[0];\n        context.enter(DrawLine(\n            context,\n            candidate.id,\n            context.graph(),\n            candidate.affix(vertex.id)));\n    };\n\n    operation.available = function() {\n        return geometries.vertex.length === 1 && geometries.line.length <= 1 &&\n            !context.features().hasHiddenConnections(vertex, context.graph());\n    };\n\n    operation.disabled = function() {\n        var candidates = candidateWays();\n        if (candidates.length === 0)\n            return 'not_eligible';\n        if (candidates.length > 1)\n            return 'multiple';\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.continue.' + disable) :\n            t('operations.continue.description');\n    };\n\n    operation.id = 'continue';\n    operation.keys = [t('operations.continue.key')];\n    operation.title = t('operations.continue.title');\n\n    return operation;\n}\n","import { Select, Browse } from '../modes/index';\nimport { sphericalDistance } from '../geo/index';\nimport { DeleteMultiple } from '../actions/index';\nexport function Delete(selectedIDs, context) {\n    var action = DeleteMultiple(selectedIDs);\n\n    var operation = function() {\n        var annotation,\n            nextSelectedID;\n\n        if (selectedIDs.length > 1) {\n            annotation = t('operations.delete.annotation.multiple', {n: selectedIDs.length});\n\n        } else {\n            var id = selectedIDs[0],\n                entity = context.entity(id),\n                geometry = context.geometry(id),\n                parents = context.graph().parentWays(entity),\n                parent = parents[0];\n\n            annotation = t('operations.delete.annotation.' + geometry);\n\n            // Select the next closest node in the way.\n            if (geometry === 'vertex' && parents.length === 1 && parent.nodes.length > 2) {\n                var nodes = parent.nodes,\n                    i = nodes.indexOf(id);\n\n                if (i === 0) {\n                    i++;\n                } else if (i === nodes.length - 1) {\n                    i--;\n                } else {\n                    var a = sphericalDistance(entity.loc, context.entity(nodes[i - 1]).loc),\n                        b = sphericalDistance(entity.loc, context.entity(nodes[i + 1]).loc);\n                    i = a < b ? i - 1 : i + 1;\n                }\n\n                nextSelectedID = nodes[i];\n            }\n        }\n\n        if (nextSelectedID && context.hasEntity(nextSelectedID)) {\n            context.enter(Select(context, [nextSelectedID]));\n        } else {\n            context.enter(Browse(context));\n        }\n\n        context.perform(\n            action,\n            annotation);\n    };\n\n    operation.available = function() {\n        return true;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (_.some(selectedIDs, context.hasHiddenConnections)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.delete.' + disable) :\n            t('operations.delete.description');\n    };\n\n    operation.id = 'delete';\n    operation.keys = [iD.ui.cmd('⌘⌫'), iD.ui.cmd('⌘⌦')];\n    operation.title = t('operations.delete.title');\n\n    return operation;\n}\n","import { Disconnect as DisconnectAction } from '../actions/index';\nexport function Disconnect(selectedIDs, context) {\n    var vertices = _.filter(selectedIDs, function vertex(entityId) {\n        return context.geometry(entityId) === 'vertex';\n    });\n\n    var entityId = vertices[0],\n        action = DisconnectAction(entityId);\n\n    if (selectedIDs.length > 1) {\n        action.limitWays(_.without(selectedIDs, entityId));\n    }\n\n    var operation = function() {\n        context.perform(action, t('operations.disconnect.annotation'));\n    };\n\n    operation.available = function() {\n        return vertices.length === 1;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (_.some(selectedIDs, context.hasHiddenConnections)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.disconnect.' + disable) :\n            t('operations.disconnect.description');\n    };\n\n    operation.id = 'disconnect';\n    operation.keys = [t('operations.disconnect.key')];\n    operation.title = t('operations.disconnect.title');\n\n    return operation;\n}\n","import { Select } from '../modes/index';\nimport { Join, Merge as MergeAction, MergePolygon } from '../actions/index';\nexport function Merge(selectedIDs, context) {\n    var join = Join(selectedIDs),\n        merge = MergeAction(selectedIDs),\n        mergePolygon = MergePolygon(selectedIDs);\n\n    var operation = function() {\n        var annotation = t('operations.merge.annotation', {n: selectedIDs.length}),\n            action;\n\n        if (!join.disabled(context.graph())) {\n            action = join;\n        } else if (!merge.disabled(context.graph())) {\n            action = merge;\n        } else {\n            action = mergePolygon;\n        }\n\n        context.perform(action, annotation);\n        context.enter(Select(context, selectedIDs.filter(function(id) { return context.hasEntity(id); }))\n            .suppressMenu(true));\n    };\n\n    operation.available = function() {\n        return selectedIDs.length >= 2;\n    };\n\n    operation.disabled = function() {\n        return join.disabled(context.graph()) &&\n            merge.disabled(context.graph()) &&\n            mergePolygon.disabled(context.graph());\n    };\n\n    operation.tooltip = function() {\n        var j = join.disabled(context.graph()),\n            m = merge.disabled(context.graph()),\n            p = mergePolygon.disabled(context.graph());\n\n        if (j === 'restriction' && m && p)\n            return t('operations.merge.restriction', {relation: context.presets().item('type/restriction').name()});\n\n        if (p === 'incomplete_relation' && j && m)\n            return t('operations.merge.incomplete_relation');\n\n        if (j && m && p)\n            return t('operations.merge.' + j);\n\n        return t('operations.merge.description');\n    };\n\n    operation.id = 'merge';\n    operation.keys = [t('operations.merge.key')];\n    operation.title = t('operations.merge.title');\n\n    return operation;\n}\n","import { Move as MoveMode } from '../modes/index';\nimport { Extent } from '../geo/index';\nimport { Move as MoveAction } from '../actions/index';\nexport function Move(selectedIDs, context) {\n    var extent = selectedIDs.reduce(function(extent, id) {\n            return extent.extend(context.entity(id).extent(context.graph()));\n        }, Extent());\n\n    var operation = function() {\n        context.enter(MoveMode(context, selectedIDs));\n    };\n\n    operation.available = function() {\n        return selectedIDs.length > 1 ||\n            context.entity(selectedIDs[0]).type !== 'node';\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (extent.area() && extent.percentContainedIn(context.extent()) < 0.8) {\n            reason = 'too_large';\n        } else if (_.some(selectedIDs, context.hasHiddenConnections)) {\n            reason = 'connected_to_hidden';\n        }\n        return MoveAction(selectedIDs).disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.move.' + disable) :\n            t('operations.move.description');\n    };\n\n    operation.id = 'move';\n    operation.keys = [t('operations.move.key')];\n    operation.title = t('operations.move.title');\n\n    return operation;\n}\n","import { Orthogonalize as OrthogonalizeAction } from '../actions/index';\nexport function Orthogonalize(selectedIDs, context) {\n    var entityId = selectedIDs[0],\n        entity = context.entity(entityId),\n        extent = entity.extent(context.graph()),\n        geometry = context.geometry(entityId),\n        action = OrthogonalizeAction(entityId, context.projection);\n\n    var operation = function() {\n        var annotation = t('operations.orthogonalize.annotation.' + geometry);\n        context.perform(action, annotation);\n    };\n\n    operation.available = function() {\n        return selectedIDs.length === 1 &&\n            entity.type === 'way' &&\n            entity.isClosed() &&\n            _.uniq(entity.nodes).length > 2;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (extent.percentContainedIn(context.extent()) < 0.8) {\n            reason = 'too_large';\n        } else if (context.hasHiddenConnections(entityId)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.orthogonalize.' + disable) :\n            t('operations.orthogonalize.description.' + geometry);\n    };\n\n    operation.id = 'orthogonalize';\n    operation.keys = [t('operations.orthogonalize.key')];\n    operation.title = t('operations.orthogonalize.title');\n\n    return operation;\n}\n","import { Reverse as ReverseAction } from '../actions/index';\nexport function Reverse(selectedIDs, context) {\n    var entityId = selectedIDs[0];\n\n    var operation = function() {\n        context.perform(\n            ReverseAction(entityId),\n            t('operations.reverse.annotation'));\n    };\n\n    operation.available = function() {\n        return selectedIDs.length === 1 &&\n            context.geometry(entityId) === 'line';\n    };\n\n    operation.disabled = function() {\n        return false;\n    };\n\n    operation.tooltip = function() {\n        return t('operations.reverse.description');\n    };\n\n    operation.id = 'reverse';\n    operation.keys = [t('operations.reverse.key')];\n    operation.title = t('operations.reverse.title');\n\n    return operation;\n}\n","import { RotateWay } from '../modes/index';\nexport function Rotate(selectedIDs, context) {\n    var entityId = selectedIDs[0],\n        entity = context.entity(entityId),\n        extent = entity.extent(context.graph()),\n        geometry = context.geometry(entityId);\n\n    var operation = function() {\n        context.enter(RotateWay(context, entityId));\n    };\n\n    operation.available = function() {\n        if (selectedIDs.length !== 1 || entity.type !== 'way')\n            return false;\n        if (geometry === 'area')\n            return true;\n        if (entity.isClosed() &&\n            context.graph().parentRelations(entity).some(function(r) { return r.isMultipolygon(); }))\n            return true;\n        return false;\n    };\n\n    operation.disabled = function() {\n        if (extent.percentContainedIn(context.extent()) < 0.8) {\n            return 'too_large';\n        } else if (context.hasHiddenConnections(entityId)) {\n            return 'connected_to_hidden';\n        } else {\n            return false;\n        }\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.rotate.' + disable) :\n            t('operations.rotate.description');\n    };\n\n    operation.id = 'rotate';\n    operation.keys = [t('operations.rotate.key')];\n    operation.title = t('operations.rotate.title');\n\n    return operation;\n}\n","import { Select } from '../modes/index';\nimport { Split as SplitAction } from '../actions/index';\nexport function Split(selectedIDs, context) {\n    var vertices = _.filter(selectedIDs, function vertex(entityId) {\n        return context.geometry(entityId) === 'vertex';\n    });\n\n    var entityId = vertices[0],\n        action = SplitAction(entityId);\n\n    if (selectedIDs.length > 1) {\n        action.limitWays(_.without(selectedIDs, entityId));\n    }\n\n    var operation = function() {\n        var annotation;\n\n        var ways = action.ways(context.graph());\n        if (ways.length === 1) {\n            annotation = t('operations.split.annotation.' + context.geometry(ways[0].id));\n        } else {\n            annotation = t('operations.split.annotation.multiple', {n: ways.length});\n        }\n\n        var difference = context.perform(action, annotation);\n        context.enter(Select(context, difference.extantIDs()));\n    };\n\n    operation.available = function() {\n        return vertices.length === 1;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (_.some(selectedIDs, context.hasHiddenConnections)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        if (disable) {\n            return t('operations.split.' + disable);\n        }\n\n        var ways = action.ways(context.graph());\n        if (ways.length === 1) {\n            return t('operations.split.description.' + context.geometry(ways[0].id));\n        } else {\n            return t('operations.split.description.multiple');\n        }\n    };\n\n    operation.id = 'split';\n    operation.keys = [t('operations.split.key')];\n    operation.title = t('operations.split.title');\n\n    return operation;\n}\n","import { Straighten as StraightenAction } from '../actions/index';\nexport function Straighten(selectedIDs, context) {\n    var entityId = selectedIDs[0],\n        action = StraightenAction(entityId, context.projection);\n\n    function operation() {\n        var annotation = t('operations.straighten.annotation');\n        context.perform(action, annotation);\n    }\n\n    operation.available = function() {\n        var entity = context.entity(entityId);\n        return selectedIDs.length === 1 &&\n            entity.type === 'way' &&\n            !entity.isClosed() &&\n            _.uniq(entity.nodes).length > 2;\n    };\n\n    operation.disabled = function() {\n        var reason;\n        if (context.hasHiddenConnections(entityId)) {\n            reason = 'connected_to_hidden';\n        }\n        return action.disabled(context.graph()) || reason;\n    };\n\n    operation.tooltip = function() {\n        var disable = operation.disabled();\n        return disable ?\n            t('operations.straighten.' + disable) :\n            t('operations.straighten.description');\n    };\n\n    operation.id = 'straighten';\n    operation.keys = [t('operations.straighten.key')];\n    operation.title = t('operations.straighten.title');\n\n    return operation;\n}\n","import { Copy, Paste, Breathe, Hover, Select as SelectBehavior, Lasso } from '../behavior/index';\nimport { Way, Node } from '../core/index';\nimport { entityOrMemberSelector } from '../util/index';\nimport { DragNode, Browse } from './index';\nimport { Extent, pointInPolygon, chooseEdge } from '../geo/index';\nimport { AddMidpoint } from '../actions/index';\nimport * as Operations from '../operations/index';\nimport {  RadialMenu, SelectionList } from '../ui/core/index';\n\nexport function Select(context, selectedIDs) {\n    var mode = {\n        id: 'select',\n        button: 'browse'\n    };\n\n    var keybinding = d3.keybinding('select'),\n        timeout = null,\n        behaviors = [\n            Copy(context),\n            Paste(context),\n            Breathe(context),\n            Hover(context),\n            SelectBehavior(context),\n            Lasso(context),\n            DragNode(context)\n                .selectedIDs(selectedIDs)\n                .behavior],\n        inspector,\n        radialMenu,\n        newFeature = false,\n        suppressMenu = false;\n\n    var wrap = context.container()\n        .select('.inspector-wrap');\n\n\n    function singular() {\n        if (selectedIDs.length === 1) {\n            return context.hasEntity(selectedIDs[0]);\n        }\n    }\n\n    function closeMenu() {\n        if (radialMenu) {\n            context.surface().call(radialMenu.close);\n        }\n    }\n\n    function positionMenu() {\n        if (suppressMenu || !radialMenu) { return; }\n\n        var entity = singular();\n        if (entity && context.geometry(entity.id) === 'relation') {\n            suppressMenu = true;\n        } else if (entity && entity.type === 'node') {\n            radialMenu.center(context.projection(entity.loc));\n        } else {\n            var point = context.mouse(),\n                viewport = Extent(context.projection.clipExtent()).polygon();\n            if (pointInPolygon(point, viewport)) {\n                radialMenu.center(point);\n            } else {\n                suppressMenu = true;\n            }\n        }\n    }\n\n    function showMenu() {\n        closeMenu();\n        if (!suppressMenu && radialMenu) {\n            context.surface().call(radialMenu);\n        }\n    }\n\n    function toggleMenu() {\n        if (d3.select('.radial-menu').empty()) {\n            showMenu();\n        } else {\n            closeMenu();\n        }\n    }\n\n    mode.selectedIDs = function() {\n        return selectedIDs;\n    };\n\n    mode.reselect = function() {\n        var surfaceNode = context.surface().node();\n        if (surfaceNode.focus) { // FF doesn't support it\n            surfaceNode.focus();\n        }\n\n        positionMenu();\n        showMenu();\n    };\n\n    mode.newFeature = function(_) {\n        if (!arguments.length) return newFeature;\n        newFeature = _;\n        return mode;\n    };\n\n    mode.suppressMenu = function(_) {\n        if (!arguments.length) return suppressMenu;\n        suppressMenu = _;\n        return mode;\n    };\n\n    mode.enter = function() {\n        function update() {\n            closeMenu();\n            if (_.some(selectedIDs, function(id) { return !context.hasEntity(id); })) {\n                // Exit mode if selected entity gets undone\n                context.enter(Browse(context));\n            }\n        }\n\n        function dblclick() {\n            var target = d3.select(d3.event.target),\n                datum = target.datum();\n\n            if (datum instanceof Way && !target.classed('fill')) {\n                var choice = chooseEdge(context.childNodes(datum), context.mouse(), context.projection),\n                    node = Node();\n\n                var prev = datum.nodes[choice.index - 1],\n                    next = datum.nodes[choice.index];\n\n                context.perform(\n                    AddMidpoint({loc: choice.loc, edge: [prev, next]}, node),\n                    t('operations.add.annotation.vertex'));\n\n                d3.event.preventDefault();\n                d3.event.stopPropagation();\n            }\n        }\n\n        function selectElements(drawn) {\n            var entity = singular();\n            if (entity && context.geometry(entity.id) === 'relation') {\n                suppressMenu = true;\n                return;\n            }\n\n            var selection = context.surface()\n                    .selectAll(entityOrMemberSelector(selectedIDs, context.graph()));\n\n            if (selection.empty()) {\n                if (drawn) {  // Exit mode if selected DOM elements have disappeared..\n                    context.enter(Browse(context));\n                }\n            } else {\n                selection\n                    .classed('selected', true);\n            }\n        }\n\n        function esc() {\n            if (!context.inIntro()) {\n                context.enter(Browse(context));\n            }\n        }\n\n\n        behaviors.forEach(function(behavior) {\n            context.install(behavior);\n        });\n\n        var operations = _.without(d3.values(Operations), Operations.Delete)\n                .map(function(o) { return o(selectedIDs, context); })\n                .filter(function(o) { return o.available(); });\n\n        operations.unshift(Operations.Delete(selectedIDs, context));\n\n        keybinding\n            .on('⎋', esc, true)\n            .on('space', toggleMenu);\n\n        operations.forEach(function(operation) {\n            operation.keys.forEach(function(key) {\n                keybinding.on(key, function() {\n                    if (!(context.inIntro() || operation.disabled())) {\n                        operation();\n                    }\n                });\n            });\n        });\n\n        d3.select(document)\n            .call(keybinding);\n\n        radialMenu = RadialMenu(context, operations);\n\n        context.ui().sidebar\n            .select(singular() ? singular().id : null, newFeature);\n\n        context.history()\n            .on('undone.select', update)\n            .on('redone.select', update);\n\n        context.map()\n            .on('move.select', closeMenu)\n            .on('drawn.select', selectElements);\n\n        selectElements();\n\n        var show = d3.event && !suppressMenu;\n\n        if (show) {\n            positionMenu();\n        }\n\n        timeout = window.setTimeout(function() {\n            if (show) {\n                showMenu();\n            }\n\n            context.surface()\n                .on('dblclick.select', dblclick);\n        }, 200);\n\n        if (selectedIDs.length > 1) {\n            var entities = SelectionList(context, selectedIDs);\n            context.ui().sidebar.show(entities);\n        }\n    };\n\n    mode.exit = function() {\n        if (timeout) window.clearTimeout(timeout);\n\n        if (inspector) wrap.call(inspector.close);\n\n        behaviors.forEach(function(behavior) {\n            context.uninstall(behavior);\n        });\n\n        keybinding.off();\n        closeMenu();\n        radialMenu = undefined;\n\n        context.history()\n            .on('undone.select', null)\n            .on('redone.select', null);\n\n        context.surface()\n            .on('dblclick.select', null)\n            .selectAll('.selected')\n            .classed('selected', false);\n\n        context.map().on('drawn.select', null);\n        context.ui().sidebar.hide();\n    };\n\n    return mode;\n}\n","export function Edit(context) {\n    function edit() {\n        context.map()\n            .minzoom(context.minEditableZoom());\n    }\n\n    edit.off = function() {\n        context.map()\n            .minzoom(0);\n    };\n\n    return edit;\n}\n","import { Entity } from '../core/index';\n/*\n   The hover behavior adds the `.hover` class on mouseover to all elements to which\n   the identical datum is bound, and removes it on mouseout.\n\n   The :hover pseudo-class is insufficient for iD's purposes because a datum's visual\n   representation may consist of several elements scattered throughout the DOM hierarchy.\n   Only one of these elements can have the :hover pseudo-class, but all of them will\n   have the .hover class.\n */\nexport function Hover() {\n    var dispatch = d3.dispatch('hover'),\n        selection,\n        altDisables,\n        target;\n\n    function keydown() {\n        if (altDisables && d3.event.keyCode === d3.keybinding.modifierCodes.alt) {\n            dispatch.hover(null);\n            selection.selectAll('.hover')\n                .classed('hover-suppressed', true)\n                .classed('hover', false);\n        }\n    }\n\n    function keyup() {\n        if (altDisables && d3.event.keyCode === d3.keybinding.modifierCodes.alt) {\n            dispatch.hover(target ? target.id : null);\n            selection.selectAll('.hover-suppressed')\n                .classed('hover-suppressed', false)\n                .classed('hover', true);\n        }\n    }\n\n    var hover = function(__) {\n        selection = __;\n\n        function enter(d) {\n            if (d === target) return;\n\n            target = d;\n\n            selection.selectAll('.hover')\n                .classed('hover', false);\n            selection.selectAll('.hover-suppressed')\n                .classed('hover-suppressed', false);\n\n            if (target instanceof Entity) {\n                var selector = '.' + target.id;\n\n                if (target.type === 'relation') {\n                    target.members.forEach(function(member) {\n                        selector += ', .' + member.id;\n                    });\n                }\n\n                var suppressed = altDisables && d3.event && d3.event.altKey;\n\n                selection.selectAll(selector)\n                    .classed(suppressed ? 'hover-suppressed' : 'hover', true);\n\n                dispatch.hover(target.id);\n            } else {\n                dispatch.hover(null);\n            }\n        }\n\n        var down;\n\n        function mouseover() {\n            if (down) return;\n            var target = d3.event.target;\n            enter(target ? target.__data__ : null);\n        }\n\n        function mouseout() {\n            if (down) return;\n            var target = d3.event.relatedTarget;\n            enter(target ? target.__data__ : null);\n        }\n\n        function mousedown() {\n            down = true;\n            d3.select(window)\n                .on('mouseup.hover', mouseup);\n        }\n\n        function mouseup() {\n            down = false;\n        }\n\n        selection\n            .on('mouseover.hover', mouseover)\n            .on('mouseout.hover', mouseout)\n            .on('mousedown.hover', mousedown)\n            .on('mouseup.hover', mouseup);\n\n        d3.select(window)\n            .on('keydown.hover', keydown)\n            .on('keyup.hover', keyup);\n    };\n\n    hover.off = function(selection) {\n        selection.selectAll('.hover')\n            .classed('hover', false);\n        selection.selectAll('.hover-suppressed')\n            .classed('hover-suppressed', false);\n\n        selection\n            .on('mouseover.hover', null)\n            .on('mouseout.hover', null)\n            .on('mousedown.hover', null)\n            .on('mouseup.hover', null);\n\n        d3.select(window)\n            .on('keydown.hover', null)\n            .on('keyup.hover', null)\n            .on('mouseup.hover', null);\n    };\n\n    hover.altDisables = function(_) {\n        if (!arguments.length) return altDisables;\n        altDisables = _;\n        return hover;\n    };\n\n    return d3.rebind(hover, dispatch, 'on');\n}\n","import { setTransform } from '../util/index';\nexport function Tail() {\n    var text,\n        container,\n        xmargin = 25,\n        tooltipSize = [0, 0],\n        selectionSize = [0, 0];\n\n    function tail(selection) {\n        if (!text) return;\n\n        d3.select(window)\n            .on('resize.tail', function() { selectionSize = selection.dimensions(); });\n\n        function show() {\n            container.style('display', 'block');\n            tooltipSize = container.dimensions();\n        }\n\n        function mousemove() {\n            if (container.style('display') === 'none') show();\n            var xoffset = ((d3.event.clientX + tooltipSize[0] + xmargin) > selectionSize[0]) ?\n                -tooltipSize[0] - xmargin : xmargin;\n            container.classed('left', xoffset > 0);\n            setTransform(container, d3.event.clientX + xoffset, d3.event.clientY);\n        }\n\n        function mouseleave() {\n            if (d3.event.relatedTarget !== container.node()) {\n                container.style('display', 'none');\n            }\n        }\n\n        function mouseenter() {\n            if (d3.event.relatedTarget !== container.node()) {\n                show();\n            }\n        }\n\n        container = d3.select(document.body)\n            .append('div')\n            .style('display', 'none')\n            .attr('class', 'tail tooltip-inner');\n\n        container.append('div')\n            .text(text);\n\n        selection\n            .on('mousemove.tail', mousemove)\n            .on('mouseenter.tail', mouseenter)\n            .on('mouseleave.tail', mouseleave);\n\n        container\n            .on('mousemove.tail', mousemove);\n\n        tooltipSize = container.dimensions();\n        selectionSize = selection.dimensions();\n    }\n\n    tail.off = function(selection) {\n        if (!text) return;\n\n        container\n            .on('mousemove.tail', null)\n            .remove();\n\n        selection\n            .on('mousemove.tail', null)\n            .on('mouseenter.tail', null)\n            .on('mouseleave.tail', null);\n\n        d3.select(window)\n            .on('resize.tail', null);\n    };\n\n    tail.text = function(_) {\n        if (!arguments.length) return text;\n        text = _;\n        return tail;\n    };\n\n    return tail;\n}\n","import { euclideanDistance, chooseEdge } from '../geo/index';\nimport { Edit } from './edit';\nimport { Hover } from './hover';\nimport { Tail } from './tail';\n\nexport function Draw(context) {\n    var event = d3.dispatch('move', 'click', 'clickWay',\n            'clickNode', 'undo', 'cancel', 'finish'),\n        keybinding = d3.keybinding('draw'),\n        hover = Hover(context)\n            .altDisables(true)\n            .on('hover', context.ui().sidebar.hover),\n        tail = Tail(),\n        edit = Edit(context),\n        closeTolerance = 4,\n        tolerance = 12,\n        mouseLeave = false,\n        lastMouse = null,\n        cached = Draw;\n\n    function datum() {\n        if (d3.event.altKey) return {};\n\n        if (d3.event.type === 'keydown') {\n            return (lastMouse && lastMouse.target.__data__) || {};\n        } else {\n            return d3.event.target.__data__ || {};\n        }\n    }\n\n    function mousedown() {\n\n        function point() {\n            var p = context.container().node();\n            return touchId !== null ? d3.touches(p).filter(function(p) {\n                return p.identifier === touchId;\n            })[0] : d3.mouse(p);\n        }\n\n        var element = d3.select(this),\n            touchId = d3.event.touches ? d3.event.changedTouches[0].identifier : null,\n            t1 = +new Date(),\n            p1 = point();\n\n        element.on('mousemove.draw', null);\n\n        d3.select(window).on('mouseup.draw', function() {\n            var t2 = +new Date(),\n                p2 = point(),\n                dist = euclideanDistance(p1, p2);\n\n            element.on('mousemove.draw', mousemove);\n            d3.select(window).on('mouseup.draw', null);\n\n            if (dist < closeTolerance || (dist < tolerance && (t2 - t1) < 500)) {\n                // Prevent a quick second click\n                d3.select(window).on('click.draw-block', function() {\n                    d3.event.stopPropagation();\n                }, true);\n\n                context.map().dblclickEnable(false);\n\n                window.setTimeout(function() {\n                    context.map().dblclickEnable(true);\n                    d3.select(window).on('click.draw-block', null);\n                }, 500);\n\n                click();\n            }\n        });\n    }\n\n    function mousemove() {\n        lastMouse = d3.event;\n        event.move(datum());\n    }\n\n    function mouseenter() {\n        mouseLeave = false;\n    }\n\n    function mouseleave() {\n        mouseLeave = true;\n    }\n\n    function click() {\n        var d = datum();\n        if (d.type === 'way') {\n            var dims = context.map().dimensions(),\n                mouse = context.mouse(),\n                pad = 5,\n                trySnap = mouse[0] > pad && mouse[0] < dims[0] - pad &&\n                    mouse[1] > pad && mouse[1] < dims[1] - pad;\n\n            if (trySnap) {\n                var choice = chooseEdge(context.childNodes(d), context.mouse(), context.projection),\n                    edge = [d.nodes[choice.index - 1], d.nodes[choice.index]];\n                event.clickWay(choice.loc, edge);\n            } else {\n                event.click(context.map().mouseCoordinates());\n            }\n\n        } else if (d.type === 'node') {\n            event.clickNode(d);\n\n        } else {\n            event.click(context.map().mouseCoordinates());\n        }\n    }\n\n    function space() {\n        var currSpace = context.mouse();\n        if (cached.disableSpace && cached.lastSpace) {\n            var dist = euclideanDistance(cached.lastSpace, currSpace);\n            if (dist > tolerance) {\n                cached.disableSpace = false;\n            }\n        }\n\n        if (cached.disableSpace || mouseLeave || !lastMouse) return;\n\n        // user must move mouse or release space bar to allow another click\n        cached.lastSpace = currSpace;\n        cached.disableSpace = true;\n\n        d3.select(window).on('keyup.space-block', function() {\n            cached.disableSpace = false;\n            d3.select(window).on('keyup.space-block', null);\n        });\n\n        d3.event.preventDefault();\n        click();\n    }\n\n    function backspace() {\n        d3.event.preventDefault();\n        event.undo();\n    }\n\n    function del() {\n        d3.event.preventDefault();\n        event.cancel();\n    }\n\n    function ret() {\n        d3.event.preventDefault();\n        event.finish();\n    }\n\n    function draw(selection) {\n        context.install(hover);\n        context.install(edit);\n\n        if (!context.inIntro() && !cached.usedTails[tail.text()]) {\n            context.install(tail);\n        }\n\n        keybinding\n            .on('⌫', backspace)\n            .on('⌦', del)\n            .on('⎋', ret)\n            .on('↩', ret)\n            .on('space', space)\n            .on('⌥space', space);\n\n        selection\n            .on('mouseenter.draw', mouseenter)\n            .on('mouseleave.draw', mouseleave)\n            .on('mousedown.draw', mousedown)\n            .on('mousemove.draw', mousemove);\n\n        d3.select(document)\n            .call(keybinding);\n\n        return draw;\n    }\n\n    draw.off = function(selection) {\n        context.ui().sidebar.hover.cancel();\n        context.uninstall(hover);\n        context.uninstall(edit);\n\n        if (!context.inIntro() && !cached.usedTails[tail.text()]) {\n            context.uninstall(tail);\n            cached.usedTails[tail.text()] = true;\n        }\n\n        selection\n            .on('mouseenter.draw', null)\n            .on('mouseleave.draw', null)\n            .on('mousedown.draw', null)\n            .on('mousemove.draw', null);\n\n        d3.select(window)\n            .on('mouseup.draw', null);\n            // note: keyup.space-block, click.draw-block should remain\n\n        d3.select(document)\n            .call(keybinding.off);\n    };\n\n    draw.tail = function(_) {\n        tail.text(_);\n        return draw;\n    };\n\n    return d3.rebind(draw, event, 'on');\n}\n\nDraw.usedTails = {};\nDraw.disableSpace = false;\nDraw.lastSpace = null;\n","import { Browse } from '../modes/index';\nimport { Draw } from './draw';\n\nexport function AddWay(context) {\n    var event = d3.dispatch('start', 'startFromWay', 'startFromNode'),\n        draw = Draw(context);\n\n    var addWay = function(surface) {\n        draw.on('click', event.start)\n            .on('clickWay', event.startFromWay)\n            .on('clickNode', event.startFromNode)\n            .on('cancel', addWay.cancel)\n            .on('finish', addWay.cancel);\n\n        context.map()\n            .dblclickEnable(false);\n\n        surface.call(draw);\n    };\n\n    addWay.off = function(surface) {\n        surface.call(draw.off);\n    };\n\n    addWay.cancel = function() {\n        window.setTimeout(function() {\n            context.map().dblclickEnable(true);\n        }, 1000);\n\n        context.enter(Browse(context));\n    };\n\n    addWay.tail = function(text) {\n        draw.tail(text);\n        return addWay;\n    };\n\n    return d3.rebind(addWay, event, 'on');\n}\n","export function Breathe(){\n    var duration = 800,\n        selector = '.selected.shadow, .selected .shadow',\n        selected = d3.select(null),\n        classed = '',\n        params = {},\n        done;\n\n    function reset(selection) {\n        selection\n            .style('stroke-opacity', null)\n            .style('stroke-width', null)\n            .style('fill-opacity', null)\n            .style('r', null);\n    }\n\n    function setAnimationParams(transition, fromTo) {\n        transition\n            .style('stroke-opacity', function(d) { return params[d.id][fromTo].opacity; })\n            .style('stroke-width', function(d) { return params[d.id][fromTo].width; })\n            .style('fill-opacity', function(d) { return params[d.id][fromTo].opacity; })\n            .style('r', function(d) { return params[d.id][fromTo].width; });\n    }\n\n    function calcAnimationParams(selection) {\n        selection\n            .call(reset)\n            .each(function(d) {\n                var s = d3.select(this),\n                    tag = s.node().tagName,\n                    p = {'from': {}, 'to': {}},\n                    opacity, width;\n\n                // determine base opacity and width\n                if (tag === 'circle') {\n                    opacity = parseFloat(s.style('fill-opacity') || 0.5);\n                    width = parseFloat(s.style('r') || 15.5);\n                } else {\n                    opacity = parseFloat(s.style('stroke-opacity') || 0.7);\n                    width = parseFloat(s.style('stroke-width') || 10);\n                }\n\n                // calculate from/to interpolation params..\n                p.tag = tag;\n                p.from.opacity = opacity * 0.6;\n                p.to.opacity = opacity * 1.25;\n                p.from.width = width * 0.9;\n                p.to.width = width * (tag === 'circle' ? 1.5 : 1.25);\n                params[d.id] = p;\n            });\n    }\n\n    function run(surface, fromTo) {\n        var toFrom = (fromTo === 'from' ? 'to': 'from'),\n            currSelected = surface.selectAll(selector),\n            currClassed = surface.attr('class'),\n            n = 0;\n\n        if (done || currSelected.empty()) {\n            selected.call(reset);\n            return;\n        }\n\n        if (!_.isEqual(currSelected, selected) || currClassed !== classed) {\n            selected.call(reset);\n            classed = currClassed;\n            selected = currSelected.call(calcAnimationParams);\n        }\n\n        selected\n            .transition()\n            .call(setAnimationParams, fromTo)\n            .duration(duration)\n            .each(function() { ++n; })\n            .each('end', function() {\n                if (!--n) {  // call once\n                    surface.call(run, toFrom);\n                }\n            });\n    }\n\n    var breathe = function(surface) {\n        done = false;\n        d3.timer(function() {\n            if (done) return true;\n\n            var currSelected = surface.selectAll(selector);\n            if (currSelected.empty()) return false;\n\n            surface.call(run, 'from');\n            return true;\n        }, 200);\n    };\n\n    breathe.off = function() {\n        done = true;\n        d3.timer.flush();\n        selected\n            .transition()\n            .call(reset)\n            .duration(0);\n    };\n\n    return breathe;\n}\n","import { cmd } from '../ui/core/index';\nexport function Copy(context) {\n    var keybinding = d3.keybinding('copy');\n\n    function groupEntities(ids, graph) {\n        var entities = ids.map(function (id) { return graph.entity(id); });\n        return _.extend({relation: [], way: [], node: []},\n            _.groupBy(entities, function(entity) { return entity.type; }));\n    }\n\n    function getDescendants(id, graph, descendants) {\n        var entity = graph.entity(id),\n            i, children;\n\n        descendants = descendants || {};\n\n        if (entity.type === 'relation') {\n            children = _.map(entity.members, 'id');\n        } else if (entity.type === 'way') {\n            children = entity.nodes;\n        } else {\n            children = [];\n        }\n\n        for (i = 0; i < children.length; i++) {\n            if (!descendants[children[i]]) {\n                descendants[children[i]] = true;\n                descendants = getDescendants(children[i], graph, descendants);\n            }\n        }\n\n        return descendants;\n    }\n\n    function doCopy() {\n        d3.event.preventDefault();\n        if (context.inIntro()) return;\n\n        var graph = context.graph(),\n            selected = groupEntities(context.selectedIDs(), graph),\n            canCopy = [],\n            skip = {},\n            i, entity;\n\n        for (i = 0; i < selected.relation.length; i++) {\n            entity = selected.relation[i];\n            if (!skip[entity.id] && entity.isComplete(graph)) {\n                canCopy.push(entity.id);\n                skip = getDescendants(entity.id, graph, skip);\n            }\n        }\n        for (i = 0; i < selected.way.length; i++) {\n            entity = selected.way[i];\n            if (!skip[entity.id]) {\n                canCopy.push(entity.id);\n                skip = getDescendants(entity.id, graph, skip);\n            }\n        }\n        for (i = 0; i < selected.node.length; i++) {\n            entity = selected.node[i];\n            if (!skip[entity.id]) {\n                canCopy.push(entity.id);\n            }\n        }\n\n        context.copyIDs(canCopy);\n    }\n\n    function copy() {\n        keybinding.on(cmd('⌘C'), doCopy);\n        d3.select(document).call(keybinding);\n        return copy;\n    }\n\n    copy.off = function() {\n        d3.select(document).call(keybinding.off);\n    };\n\n    return copy;\n}\n","import { prefixCSSProperty, prefixDOMProperty } from '../util/index';\n/*\n    `iD.behavior.drag` is like `d3.behavior.drag`, with the following differences:\n\n    * The `origin` function is expected to return an [x, y] tuple rather than an\n      {x, y} object.\n    * The events are `start`, `move`, and `end`.\n      (https://github.com/mbostock/d3/issues/563)\n    * The `start` event is not dispatched until the first cursor movement occurs.\n      (https://github.com/mbostock/d3/pull/368)\n    * The `move` event has a `point` and `delta` [x, y] tuple properties rather\n      than `x`, `y`, `dx`, and `dy` properties.\n    * The `end` event is not dispatched if no movement occurs.\n    * An `off` function is available that unbinds the drag's internal event handlers.\n    * Delegation is supported via the `delegate` function.\n\n */\nexport function drag() {\n    function d3_eventCancel() {\n      d3.event.stopPropagation();\n      d3.event.preventDefault();\n    }\n\n    var event = d3.dispatch('start', 'move', 'end'),\n        origin = null,\n        selector = '',\n        filter = null,\n        event_, target, surface;\n\n    event.of = function(thiz, argumentz) {\n      return function(e1) {\n        var e0 = e1.sourceEvent = d3.event;\n        e1.target = drag;\n        d3.event = e1;\n        try {\n          event[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    var d3_event_userSelectProperty = prefixCSSProperty('UserSelect'),\n        d3_event_userSelectSuppress = d3_event_userSelectProperty ?\n            function () {\n                var selection = d3.selection(),\n                    select = selection.style(d3_event_userSelectProperty);\n                selection.style(d3_event_userSelectProperty, 'none');\n                return function () {\n                    selection.style(d3_event_userSelectProperty, select);\n                };\n            } :\n            function (type) {\n                var w = d3.select(window).on('selectstart.' + type, d3_eventCancel);\n                return function () {\n                    w.on('selectstart.' + type, null);\n                };\n            };\n\n    function mousedown() {\n        target = this;\n        event_ = event.of(target, arguments);\n        var eventTarget = d3.event.target,\n            touchId = d3.event.touches ? d3.event.changedTouches[0].identifier : null,\n            offset,\n            origin_ = point(),\n            started = false,\n            selectEnable = d3_event_userSelectSuppress(touchId !== null ? 'drag-' + touchId : 'drag');\n\n        var w = d3.select(window)\n            .on(touchId !== null ? 'touchmove.drag-' + touchId : 'mousemove.drag', dragmove)\n            .on(touchId !== null ? 'touchend.drag-' + touchId : 'mouseup.drag', dragend, true);\n\n        if (origin) {\n            offset = origin.apply(target, arguments);\n            offset = [offset[0] - origin_[0], offset[1] - origin_[1]];\n        } else {\n            offset = [0, 0];\n        }\n\n        if (touchId === null) d3.event.stopPropagation();\n\n        function point() {\n            var p = target.parentNode || surface;\n            return touchId !== null ? d3.touches(p).filter(function(p) {\n                return p.identifier === touchId;\n            })[0] : d3.mouse(p);\n        }\n\n        function dragmove() {\n\n            var p = point(),\n                dx = p[0] - origin_[0],\n                dy = p[1] - origin_[1];\n\n            if (dx === 0 && dy === 0)\n                return;\n\n            if (!started) {\n                started = true;\n                event_({\n                    type: 'start'\n                });\n            }\n\n            origin_ = p;\n            d3_eventCancel();\n\n            event_({\n                type: 'move',\n                point: [p[0] + offset[0],  p[1] + offset[1]],\n                delta: [dx, dy]\n            });\n        }\n\n        function dragend() {\n            if (started) {\n                event_({\n                    type: 'end'\n                });\n\n                d3_eventCancel();\n                if (d3.event.target === eventTarget) w.on('click.drag', click, true);\n            }\n\n            w.on(touchId !== null ? 'touchmove.drag-' + touchId : 'mousemove.drag', null)\n                .on(touchId !== null ? 'touchend.drag-' + touchId : 'mouseup.drag', null);\n            selectEnable();\n        }\n\n        function click() {\n            d3_eventCancel();\n            w.on('click.drag', null);\n        }\n    }\n\n    function drag(selection) {\n        var matchesSelector = prefixDOMProperty('matchesSelector'),\n            delegate = mousedown;\n\n        if (selector) {\n            delegate = function() {\n                var root = this,\n                    target = d3.event.target;\n                for (; target && target !== root; target = target.parentNode) {\n                    if (target[matchesSelector](selector) &&\n                            (!filter || filter(target.__data__))) {\n                        return mousedown.call(target, target.__data__);\n                    }\n                }\n            };\n        }\n\n        selection.on('mousedown.drag' + selector, delegate)\n            .on('touchstart.drag' + selector, delegate);\n    }\n\n    drag.off = function(selection) {\n        selection.on('mousedown.drag' + selector, null)\n            .on('touchstart.drag' + selector, null);\n    };\n\n    drag.delegate = function(_) {\n        if (!arguments.length) return selector;\n        selector = _;\n        return drag;\n    };\n\n    drag.filter = function(_) {\n        if (!arguments.length) return origin;\n        filter = _;\n        return drag;\n    };\n\n    drag.origin = function (_) {\n        if (!arguments.length) return origin;\n        origin = _;\n        return drag;\n    };\n\n    drag.cancel = function() {\n        d3.select(window)\n            .on('mousemove.drag', null)\n            .on('mouseup.drag', null);\n        return drag;\n    };\n\n    drag.target = function() {\n        if (!arguments.length) return target;\n        target = arguments[0];\n        event_ = event.of(target, Array.prototype.slice.call(arguments, 1));\n        return drag;\n    };\n\n    drag.surface = function() {\n        if (!arguments.length) return surface;\n        surface = arguments[0];\n        return drag;\n    };\n\n    return d3.rebind(drag, event, 'on');\n}\n","import { Node, Way } from '../core/index';\nimport { entitySelector } from '../util/index';\nimport { Browse, Select } from '../modes/index';\nimport { chooseEdge, edgeEqual } from '../geo/index';\nimport { AddEntity, AddVertex, MoveNode, AddMidpoint } from '../actions/index';\nimport { Draw } from './draw';\n\nexport function DrawWay(context, wayId, index, mode, baseGraph) {\n    var way = context.entity(wayId),\n        isArea = context.geometry(wayId) === 'area',\n        finished = false,\n        annotation = t((way.isDegenerate() ?\n            'operations.start.annotation.' :\n            'operations.continue.annotation.') + context.geometry(wayId)),\n        draw = Draw(context);\n\n    var startIndex = typeof index === 'undefined' ? way.nodes.length - 1 : 0,\n        start = Node({loc: context.graph().entity(way.nodes[startIndex]).loc}),\n        end = Node({loc: context.map().mouseCoordinates()}),\n        segment = Way({\n            nodes: typeof index === 'undefined' ? [start.id, end.id] : [end.id, start.id],\n            tags: _.clone(way.tags)\n        });\n\n    var f = context[way.isDegenerate() ? 'replace' : 'perform'];\n    if (isArea) {\n        f(AddEntity(end),\n            AddVertex(wayId, end.id, index));\n    } else {\n        f(AddEntity(start),\n            AddEntity(end),\n            AddEntity(segment));\n    }\n\n    function move(datum) {\n        var loc;\n\n        if (datum.type === 'node' && datum.id !== end.id) {\n            loc = datum.loc;\n\n        } else if (datum.type === 'way' && datum.id !== segment.id) {\n            var dims = context.map().dimensions(),\n                mouse = context.mouse(),\n                pad = 5,\n                trySnap = mouse[0] > pad && mouse[0] < dims[0] - pad &&\n                    mouse[1] > pad && mouse[1] < dims[1] - pad;\n\n            if (trySnap) {\n                loc = chooseEdge(context.childNodes(datum), context.mouse(), context.projection).loc;\n            }\n        }\n\n        if (!loc) {\n            loc = context.map().mouseCoordinates();\n        }\n\n        context.replace(MoveNode(end.id, loc));\n    }\n\n    function undone() {\n        finished = true;\n        context.enter(Browse(context));\n    }\n\n    function setActiveElements() {\n        var active = isArea ? [wayId, end.id] : [segment.id, start.id, end.id];\n        context.surface().selectAll(entitySelector(active))\n            .classed('active', true);\n    }\n\n    var drawWay = function(surface) {\n        draw.on('move', move)\n            .on('click', drawWay.add)\n            .on('clickWay', drawWay.addWay)\n            .on('clickNode', drawWay.addNode)\n            .on('undo', context.undo)\n            .on('cancel', drawWay.cancel)\n            .on('finish', drawWay.finish);\n\n        context.map()\n            .dblclickEnable(false)\n            .on('drawn.draw', setActiveElements);\n\n        setActiveElements();\n\n        surface.call(draw);\n\n        context.history()\n            .on('undone.draw', undone);\n    };\n\n    drawWay.off = function(surface) {\n        if (!finished)\n            context.pop();\n\n        context.map()\n            .on('drawn.draw', null);\n\n        surface.call(draw.off)\n            .selectAll('.active')\n            .classed('active', false);\n\n        context.history()\n            .on('undone.draw', null);\n    };\n\n    function ReplaceTemporaryNode(newNode) {\n        return function(graph) {\n            if (isArea) {\n                return graph\n                    .replace(way.addNode(newNode.id, index))\n                    .remove(end);\n\n            } else {\n                return graph\n                    .replace(graph.entity(wayId).addNode(newNode.id, index))\n                    .remove(end)\n                    .remove(segment)\n                    .remove(start);\n            }\n        };\n    }\n\n    // Accept the current position of the temporary node and continue drawing.\n    drawWay.add = function(loc) {\n\n        // prevent duplicate nodes\n        var last = context.hasEntity(way.nodes[way.nodes.length - (isArea ? 2 : 1)]);\n        if (last && last.loc[0] === loc[0] && last.loc[1] === loc[1]) return;\n\n        var newNode = Node({loc: loc});\n\n        context.replace(\n            AddEntity(newNode),\n            ReplaceTemporaryNode(newNode),\n            annotation);\n\n        finished = true;\n        context.enter(mode);\n    };\n\n    // Connect the way to an existing way.\n    drawWay.addWay = function(loc, edge) {\n        var previousEdge = startIndex ?\n            [way.nodes[startIndex], way.nodes[startIndex - 1]] :\n            [way.nodes[0], way.nodes[1]];\n\n        // Avoid creating duplicate segments\n        if (!isArea && edgeEqual(edge, previousEdge))\n            return;\n\n        var newNode = Node({ loc: loc });\n\n        context.perform(\n            AddMidpoint({ loc: loc, edge: edge}, newNode),\n            ReplaceTemporaryNode(newNode),\n            annotation);\n\n        finished = true;\n        context.enter(mode);\n    };\n\n    // Connect the way to an existing node and continue drawing.\n    drawWay.addNode = function(node) {\n\n        // Avoid creating duplicate segments\n        if (way.areAdjacent(node.id, way.nodes[way.nodes.length - 1])) return;\n\n        context.perform(\n            ReplaceTemporaryNode(node),\n            annotation);\n\n        finished = true;\n        context.enter(mode);\n    };\n\n    // Finish the draw operation, removing the temporary node. If the way has enough\n    // nodes to be valid, it's selected. Otherwise, return to browse mode.\n    drawWay.finish = function() {\n        context.pop();\n        finished = true;\n\n        window.setTimeout(function() {\n            context.map().dblclickEnable(true);\n        }, 1000);\n\n        if (context.hasEntity(wayId)) {\n            context.enter(\n                Select(context, [wayId])\n                    .suppressMenu(true)\n                    .newFeature(true));\n        } else {\n            context.enter(Browse(context));\n        }\n    };\n\n    // Cancel the draw operation and return to browse, deleting everything drawn.\n    drawWay.cancel = function() {\n        context.perform(\n            d3.functor(baseGraph),\n            t('operations.cancel_draw.annotation'));\n\n        window.setTimeout(function() {\n            context.map().dblclickEnable(true);\n        }, 1000);\n\n        finished = true;\n        context.enter(Browse(context));\n    };\n\n    drawWay.tail = function(text) {\n        draw.tail(text);\n        return drawWay;\n    };\n\n    return drawWay;\n}\n","import { stringQs, qsString } from '../util/index';\nexport function Hash(context) {\n    var s0 = null, // cached location.hash\n        lat = 90 - 1e-8; // allowable latitude range\n\n    var parser = function(map, s) {\n        var q = stringQs(s);\n        var args = (q.map || '').split('/').map(Number);\n        if (args.length < 3 || args.some(isNaN)) {\n            return true; // replace bogus hash\n        } else if (s !== formatter(map).slice(1)) {\n            map.centerZoom([args[1],\n                Math.min(lat, Math.max(-lat, args[2]))], args[0]);\n        }\n    };\n\n    var formatter = function(map) {\n        var mode = context.mode(),\n            center = map.center(),\n            zoom = map.zoom(),\n            precision = Math.max(0, Math.ceil(Math.log(zoom) / Math.LN2)),\n            q = _.omit(stringQs(location.hash.substring(1)), 'comment'),\n            newParams = {};\n\n        if (mode && mode.id === 'browse') {\n            delete q.id;\n        } else {\n            var selected = context.selectedIDs().filter(function(id) {\n                return !context.entity(id).isNew();\n            });\n            if (selected.length) {\n                newParams.id = selected.join(',');\n            }\n        }\n\n        newParams.map = zoom.toFixed(2) +\n                '/' + center[0].toFixed(precision) +\n                '/' + center[1].toFixed(precision);\n\n        return '#' + qsString(_.assign(q, newParams), true);\n    };\n\n    function update() {\n        if (context.inIntro()) return;\n        var s1 = formatter(context.map());\n        if (s0 !== s1) location.replace(s0 = s1); // don't recenter the map!\n    }\n\n    var throttledUpdate = _.throttle(update, 500);\n\n    function hashchange() {\n        if (location.hash === s0) return; // ignore spurious hashchange events\n        if (parser(context.map(), (s0 = location.hash).substring(1))) {\n            update(); // replace bogus hash\n        }\n    }\n\n    function hash() {\n        context.map()\n            .on('move.hash', throttledUpdate);\n\n        context\n            .on('enter.hash', throttledUpdate);\n\n        d3.select(window)\n            .on('hashchange.hash', hashchange);\n\n        if (location.hash) {\n            var q = stringQs(location.hash.substring(1));\n            if (q.id) context.zoomToEntity(q.id.split(',')[0], !q.map);\n            if (q.comment) context.storage('comment', q.comment);\n            hashchange();\n            if (q.map) hash.hadHash = true;\n        }\n    }\n\n    hash.off = function() {\n        throttledUpdate.cancel();\n\n        context.map()\n            .on('move.hash', null);\n\n        context\n            .on('enter.hash', null);\n\n        d3.select(window)\n            .on('hashchange.hash', null);\n\n        location.hash = '';\n    };\n\n    return hash;\n}\n","import { Select } from '../modes/index';\nimport { Extent, pointInPolygon } from '../geo/index';\nimport { Lasso as uiLasso } from '../ui/core/index';\n\nexport function Lasso(context) {\n\n    var behavior = function(selection) {\n        var lasso;\n\n        function mousedown() {\n            var button = 0;  // left\n            if (d3.event.button === button && d3.event.shiftKey === true) {\n                lasso = null;\n\n                selection\n                    .on('mousemove.lasso', mousemove)\n                    .on('mouseup.lasso', mouseup);\n\n                d3.event.stopPropagation();\n            }\n        }\n\n        function mousemove() {\n            if (!lasso) {\n                lasso = uiLasso(context);\n                context.surface().call(lasso);\n            }\n\n            lasso.p(context.mouse());\n        }\n\n        function normalize(a, b) {\n            return [\n                [Math.min(a[0], b[0]), Math.min(a[1], b[1])],\n                [Math.max(a[0], b[0]), Math.max(a[1], b[1])]];\n        }\n\n        function lassoed() {\n            if (!lasso) return [];\n\n            var graph = context.graph(),\n                bounds = lasso.extent().map(context.projection.invert),\n                extent = Extent(normalize(bounds[0], bounds[1]));\n\n            return _.map(context.intersects(extent).filter(function(entity) {\n                return entity.type === 'node' &&\n                    pointInPolygon(context.projection(entity.loc), lasso.coordinates) &&\n                    !context.features().isHidden(entity, graph, entity.geometry(graph));\n            }), 'id');\n        }\n\n        function mouseup() {\n            selection\n                .on('mousemove.lasso', null)\n                .on('mouseup.lasso', null);\n\n            if (!lasso) return;\n\n            var ids = lassoed();\n            lasso.close();\n\n            if (ids.length) {\n                context.enter(Select(context, ids));\n            }\n        }\n\n        selection\n            .on('mousedown.lasso', mousedown);\n    };\n\n    behavior.off = function(selection) {\n        selection.on('mousedown.lasso', null);\n    };\n\n    return behavior;\n}\n","import { Move as MoveMode } from '../modes/index';\nimport { Extent, pointInPolygon } from '../geo/index';\nimport { CopyEntities, ChangeTags, Move as MoveAction} from '../actions/index';\nimport { cmd } from '../ui/core/index';\n\nexport function Paste(context) {\n    var keybinding = d3.keybinding('paste');\n\n    function omitTag(v, k) {\n        return (\n            k === 'phone' ||\n            k === 'fax' ||\n            k === 'email' ||\n            k === 'website' ||\n            k === 'url' ||\n            k === 'note' ||\n            k === 'description' ||\n            k.indexOf('name') !== -1 ||\n            k.indexOf('wiki') === 0 ||\n            k.indexOf('addr:') === 0 ||\n            k.indexOf('contact:') === 0\n        );\n    }\n\n    function doPaste() {\n        d3.event.preventDefault();\n        if (context.inIntro()) return;\n\n        var baseGraph = context.graph(),\n            mouse = context.mouse(),\n            projection = context.projection,\n            viewport = Extent(projection.clipExtent()).polygon();\n\n        if (!pointInPolygon(mouse, viewport)) return;\n\n        var extent = Extent(),\n            oldIDs = context.copyIDs(),\n            oldGraph = context.copyGraph(),\n            newIDs = [];\n\n        if (!oldIDs.length) return;\n\n        var action = CopyEntities(oldIDs, oldGraph);\n        context.perform(action);\n\n        var copies = action.copies();\n        for (var id in copies) {\n            var oldEntity = oldGraph.entity(id),\n                newEntity = copies[id];\n\n            extent._extend(oldEntity.extent(oldGraph));\n            newIDs.push(newEntity.id);\n            context.perform(ChangeTags(newEntity.id, _.omit(newEntity.tags, omitTag)));\n        }\n\n        // Put pasted objects where mouse pointer is..\n        var center = projection(extent.center()),\n            delta = [ mouse[0] - center[0], mouse[1] - center[1] ];\n\n        context.perform(MoveAction(newIDs, delta, projection));\n        context.enter(MoveMode(context, newIDs, baseGraph));\n    }\n\n    function paste() {\n        keybinding.on(cmd('⌘V'), doPaste);\n        d3.select(document).call(keybinding);\n        return paste;\n    }\n\n    paste.off = function() {\n        d3.select(document).call(keybinding.off);\n    };\n\n    return paste;\n}\n","import { Entity } from '../core/index';\nimport { Browse, Select as SelectMode } from '../modes/index';\nexport function Select(context) {\n    function keydown() {\n        if (d3.event && d3.event.shiftKey) {\n            context.surface()\n                .classed('behavior-multiselect', true);\n        }\n    }\n\n    function keyup() {\n        if (!d3.event || !d3.event.shiftKey) {\n            context.surface()\n                .classed('behavior-multiselect', false);\n        }\n    }\n\n    function click() {\n        var datum = d3.event.target.__data__,\n            lasso = d3.select('#surface .lasso').node(),\n            mode = context.mode();\n\n        if (!(datum instanceof Entity)) {\n            if (!d3.event.shiftKey && !lasso && mode.id !== 'browse')\n                context.enter(Browse(context));\n\n        } else if (!d3.event.shiftKey && !lasso) {\n            // Avoid re-entering Select mode with same entity.\n            if (context.selectedIDs().length !== 1 || context.selectedIDs()[0] !== datum.id) {\n                context.enter(SelectMode(context, [datum.id]));\n            } else {\n                mode.suppressMenu(false).reselect();\n            }\n        } else if (context.selectedIDs().indexOf(datum.id) >= 0) {\n            var selectedIDs = _.without(context.selectedIDs(), datum.id);\n            context.enter(selectedIDs.length ?\n                SelectMode(context, selectedIDs) :\n                Browse(context));\n\n        } else {\n            context.enter(SelectMode(context, context.selectedIDs().concat([datum.id])));\n        }\n    }\n\n    var behavior = function(selection) {\n        d3.select(window)\n            .on('keydown.select', keydown)\n            .on('keyup.select', keyup);\n\n        selection.on('click.select', click);\n\n        keydown();\n    };\n\n    behavior.off = function(selection) {\n        d3.select(window)\n            .on('keydown.select', null)\n            .on('keyup.select', null);\n\n        selection.on('click.select', null);\n\n        keyup();\n    };\n\n    return behavior;\n}\n","import { editDistance } from '../util/index';\nexport function Collection(collection) {\n    var maxSearchResults = 50,\n        maxSuggestionResults = 10;\n\n    var presets = {\n\n        collection: collection,\n\n        item: function(id) {\n            return _.find(collection, function(d) {\n                return d.id === id;\n            });\n        },\n\n        matchGeometry: function(geometry) {\n            return Collection(collection.filter(function(d) {\n                return d.matchGeometry(geometry);\n            }));\n        },\n\n        search: function(value, geometry) {\n            if (!value) return this;\n\n            value = value.toLowerCase();\n\n            var searchable = _.filter(collection, function(a) {\n                    return a.searchable !== false && a.suggestion !== true;\n                }),\n                suggestions = _.filter(collection, function(a) {\n                    return a.suggestion === true;\n                });\n\n            function leading(a) {\n                var index = a.indexOf(value);\n                return index === 0 || a[index - 1] === ' ';\n            }\n\n            // matches value to preset.name\n            var leading_name = _.filter(searchable, function(a) {\n                    return leading(a.name().toLowerCase());\n                }).sort(function(a, b) {\n                    var i = a.name().toLowerCase().indexOf(value) - b.name().toLowerCase().indexOf(value);\n                    if (i === 0) return a.name().length - b.name().length;\n                    else return i;\n                });\n\n            // matches value to preset.terms values\n            var leading_terms = _.filter(searchable, function(a) {\n                    return _.some(a.terms() || [], leading);\n                });\n\n            // matches value to preset.tags values\n            var leading_tag_values = _.filter(searchable, function(a) {\n                    return _.some(_.without(_.values(a.tags || {}), '*'), leading);\n                });\n\n\n            // finds close matches to value in preset.name\n            var levenstein_name = searchable.map(function(a) {\n                    return {\n                        preset: a,\n                        dist: editDistance(value, a.name().toLowerCase())\n                    };\n                }).filter(function(a) {\n                    return a.dist + Math.min(value.length - a.preset.name().length, 0) < 3;\n                }).sort(function(a, b) {\n                    return a.dist - b.dist;\n                }).map(function(a) {\n                    return a.preset;\n                });\n\n            // finds close matches to value in preset.terms\n            var leventstein_terms = _.filter(searchable, function(a) {\n                    return _.some(a.terms() || [], function(b) {\n                        return editDistance(value, b) + Math.min(value.length - b.length, 0) < 3;\n                    });\n                });\n\n            function suggestionName(name) {\n                var nameArray = name.split(' - ');\n                if (nameArray.length > 1) {\n                    name = nameArray.slice(0, nameArray.length-1).join(' - ');\n                }\n                return name.toLowerCase();\n            }\n\n            var leading_suggestions = _.filter(suggestions, function(a) {\n                    return leading(suggestionName(a.name()));\n                }).sort(function(a, b) {\n                    a = suggestionName(a.name());\n                    b = suggestionName(b.name());\n                    var i = a.indexOf(value) - b.indexOf(value);\n                    if (i === 0) return a.length - b.length;\n                    else return i;\n                });\n\n            var leven_suggestions = suggestions.map(function(a) {\n                    return {\n                        preset: a,\n                        dist: editDistance(value, suggestionName(a.name()))\n                    };\n                }).filter(function(a) {\n                    return a.dist + Math.min(value.length - suggestionName(a.preset.name()).length, 0) < 1;\n                }).sort(function(a, b) {\n                    return a.dist - b.dist;\n                }).map(function(a) {\n                    return a.preset;\n                });\n\n            var other = presets.item(geometry);\n\n            var results = leading_name.concat(\n                            leading_terms,\n                            leading_tag_values,\n                            leading_suggestions.slice(0, maxSuggestionResults+5),\n                            levenstein_name,\n                            leventstein_terms,\n                            leven_suggestions.slice(0, maxSuggestionResults)\n                        ).slice(0, maxSearchResults-1);\n\n            return Collection(_.uniq(\n                    results.concat(other)\n                ));\n        }\n    };\n\n    return presets;\n}\n","import { Collection } from './collection';\nexport function Category(id, category, all) {\n    category = _.clone(category);\n\n    category.id = id;\n\n    category.members = Collection(category.members.map(function(id) {\n        return all.item(id);\n    }));\n\n    category.matchGeometry = function(geometry) {\n        return category.geometry.indexOf(geometry) >= 0;\n    };\n\n    category.matchScore = function() { return -1; };\n\n    category.name = function() {\n        return t('presets.categories.' + id + '.name', {'default': id});\n    };\n\n    category.terms = function() {\n        return [];\n    };\n\n    return category;\n}\n","export function Field(id, field) {\n    field = _.clone(field);\n\n    field.id = id;\n\n    field.matchGeometry = function(geometry) {\n        return !field.geometry || field.geometry === geometry;\n    };\n\n    field.t = function(scope, options) {\n        return t('presets.fields.' + id + '.' + scope, options);\n    };\n\n    field.label = function() {\n        return field.t('label', {'default': id});\n    };\n\n    var placeholder = field.placeholder;\n    field.placeholder = function() {\n        return field.t('placeholder', {'default': placeholder});\n    };\n\n    return field;\n}\n","export function Preset(id, preset, fields) {\n    preset = _.clone(preset);\n\n    preset.id = id;\n    preset.fields = (preset.fields || []).map(getFields);\n    preset.geometry = (preset.geometry || []);\n\n    function getFields(f) {\n        return fields[f];\n    }\n\n    preset.matchGeometry = function(geometry) {\n        return preset.geometry.indexOf(geometry) >= 0;\n    };\n\n    var matchScore = preset.matchScore || 1;\n    preset.matchScore = function(entity) {\n        var tags = preset.tags,\n            score = 0;\n\n        for (var t in tags) {\n            if (entity.tags[t] === tags[t]) {\n                score += matchScore;\n            } else if (tags[t] === '*' && t in entity.tags) {\n                score += matchScore / 2;\n            } else {\n                return -1;\n            }\n        }\n\n        return score;\n    };\n\n    preset.t = function(scope, options) {\n        return t('presets.presets.' + id + '.' + scope, options);\n    };\n\n    var name = preset.name;\n    preset.name = function() {\n        if (preset.suggestion) {\n            id = id.split('/');\n            id = id[0] + '/' + id[1];\n            return name + ' - ' + t('presets.presets.' + id + '.name');\n        }\n        return preset.t('name', {'default': name});\n    };\n\n    preset.terms = function() {\n        return preset.t('terms', {'default': ''}).toLowerCase().trim().split(/\\s*,+\\s*/);\n    };\n\n    preset.isFallback = function() {\n        var tagCount = Object.keys(preset.tags).length;\n        return tagCount === 0 || (tagCount === 1 && preset.tags.hasOwnProperty('area'));\n    };\n\n    preset.reference = function(geometry) {\n        var key = Object.keys(preset.tags)[0],\n            value = preset.tags[key];\n\n        if (geometry === 'relation' && key === 'type') {\n            return { rtype: value };\n        } else if (value === '*') {\n            return { key: key };\n        } else {\n            return { key: key, value: value };\n        }\n    };\n\n    var removeTags = preset.removeTags || preset.tags;\n    preset.removeTags = function(tags, geometry) {\n        tags = _.omit(tags, _.keys(removeTags));\n\n        for (var f in preset.fields) {\n            var field = preset.fields[f];\n            if (field.matchGeometry(geometry) && field.default === tags[field.key]) {\n                delete tags[field.key];\n            }\n        }\n\n        delete tags.area;\n        return tags;\n    };\n\n    var applyTags = preset.addTags || preset.tags;\n    preset.applyTags = function(tags, geometry) {\n        var k;\n\n        tags = _.clone(tags);\n\n        for (k in applyTags) {\n            if (applyTags[k] === '*') {\n                tags[k] = 'yes';\n            } else {\n                tags[k] = applyTags[k];\n            }\n        }\n\n        // Add area=yes if necessary.\n        // This is necessary if the geometry is already an area (e.g. user drew an area) AND any of:\n        // 1. chosen preset could be either an area or a line (`barrier=city_wall`)\n        // 2. chosen preset doesn't have a key in areaKeys (`railway=station`)\n        if (geometry === 'area') {\n            var needsAreaTag = true;\n            if (preset.geometry.indexOf('line') === -1) {\n                for (k in applyTags) {\n                    if (k in iD.areaKeys) {\n                        needsAreaTag = false;\n                        break;\n                    }\n                }\n            }\n            if (needsAreaTag) {\n                tags.area = 'yes';\n            }\n        }\n\n        for (var f in preset.fields) {\n            var field = preset.fields[f];\n            if (field.matchGeometry(geometry) && field.key && !tags[field.key] && field.default) {\n                tags[field.key] = field.default;\n            }\n        }\n\n        return tags;\n    };\n\n    return preset;\n}\n","import { Collection } from './collection';\nimport { Field } from './field';\nimport { Preset } from './preset';\nimport { Category } from './category';\n\nexport function presets() {\n    // an iD.presets.Collection with methods for\n    // loading new data and returning defaults\n\n    var all = Collection([]),\n        defaults = { area: all, line: all, point: all, vertex: all, relation: all },\n        fields = {},\n        universal = [],\n        recent = Collection([]);\n\n    // Index of presets by (geometry, tag key).\n    var index = {\n        point: {},\n        vertex: {},\n        line: {},\n        area: {},\n        relation: {}\n    };\n\n    all.match = function(entity, resolver) {\n        var geometry = entity.geometry(resolver),\n            geometryMatches = index[geometry],\n            best = -1,\n            match;\n\n        for (var k in entity.tags) {\n            var keyMatches = geometryMatches[k];\n            if (!keyMatches) continue;\n\n            for (var i = 0; i < keyMatches.length; i++) {\n                var score = keyMatches[i].matchScore(entity);\n                if (score > best) {\n                    best = score;\n                    match = keyMatches[i];\n                }\n            }\n        }\n\n        return match || all.item(geometry);\n    };\n\n    // Because of the open nature of tagging, iD will never have a complete\n    // list of tags used in OSM, so we want it to have logic like \"assume\n    // that a closed way with an amenity tag is an area, unless the amenity\n    // is one of these specific types\". This function computes a structure\n    // that allows testing of such conditions, based on the presets designated\n    // as as supporting (or not supporting) the area geometry.\n    //\n    // The returned object L is a whitelist/blacklist of tags. A closed way\n    // with a tag (k, v) is considered to be an area if `k in L && !(v in L[k])`\n    // (see `Way#isArea()`). In other words, the keys of L form the whitelist,\n    // and the subkeys form the blacklist.\n    all.areaKeys = function() {\n        var areaKeys = {},\n            ignore = ['barrier', 'highway', 'footway', 'railway', 'type'],\n            presets = _.reject(all.collection, 'suggestion');\n\n        // whitelist\n        presets.forEach(function(d) {\n            for (var key in d.tags) break;\n            if (!key) return;\n            if (ignore.indexOf(key) !== -1) return;\n\n            if (d.geometry.indexOf('area') !== -1) {\n                areaKeys[key] = areaKeys[key] || {};\n            }\n        });\n\n        // blacklist\n        presets.forEach(function(d) {\n            for (var key in d.tags) break;\n            if (!key) return;\n            if (ignore.indexOf(key) !== -1) return;\n\n            var value = d.tags[key];\n            if (d.geometry.indexOf('area') === -1 &&\n                d.geometry.indexOf('line') !== -1 &&\n                key in areaKeys && value !== '*') {\n                areaKeys[key][value] = true;\n            }\n        });\n\n        return areaKeys;\n    };\n\n    all.load = function(d) {\n\n        if (d.fields) {\n            _.forEach(d.fields, function(d, id) {\n                fields[id] = Field(id, d);\n                if (d.universal) universal.push(fields[id]);\n            });\n        }\n\n        if (d.presets) {\n            _.forEach(d.presets, function(d, id) {\n                all.collection.push(Preset(id, d, fields));\n            });\n        }\n\n        if (d.categories) {\n            _.forEach(d.categories, function(d, id) {\n                all.collection.push(Category(id, d, all));\n            });\n        }\n\n        if (d.defaults) {\n            var getItem = _.bind(all.item, all);\n            defaults = {\n                area: Collection(d.defaults.area.map(getItem)),\n                line: Collection(d.defaults.line.map(getItem)),\n                point: Collection(d.defaults.point.map(getItem)),\n                vertex: Collection(d.defaults.vertex.map(getItem)),\n                relation: Collection(d.defaults.relation.map(getItem))\n            };\n        }\n\n        for (var i = 0; i < all.collection.length; i++) {\n            var preset = all.collection[i],\n                geometry = preset.geometry;\n\n            for (var j = 0; j < geometry.length; j++) {\n                var g = index[geometry[j]];\n                for (var k in preset.tags) {\n                    (g[k] = g[k] || []).push(preset);\n                }\n            }\n        }\n\n        return all;\n    };\n\n    all.field = function(id) {\n        return fields[id];\n    };\n\n    all.universal = function() {\n        return universal;\n    };\n\n    all.defaults = function(geometry, n) {\n        var rec = recent.matchGeometry(geometry).collection.slice(0, 4),\n            def = _.uniq(rec.concat(defaults[geometry].collection)).slice(0, n - 1);\n        return Collection(_.uniq(rec.concat(def).concat(all.item(geometry))));\n    };\n\n    all.choose = function(preset) {\n        if (!preset.isFallback()) {\n            recent = Collection(_.uniq([preset].concat(recent.collection)));\n        }\n        return all;\n    };\n\n    return all;\n}\n","import { tagText } from '../util/index';\nexport function DeprecatedTag() {\n\n    var validation = function(changes) {\n        var warnings = [];\n        for (var i = 0; i < changes.created.length; i++) {\n            var change = changes.created[i],\n                deprecatedTags = change.deprecatedTags();\n\n            if (!_.isEmpty(deprecatedTags)) {\n                var tags = tagText({ tags: deprecatedTags });\n                warnings.push({\n                    id: 'deprecated_tags',\n                    message: t('validations.deprecated_tags', { tags: tags }),\n                    entity: change\n                });\n            }\n        }\n        return warnings;\n    };\n\n    return validation;\n}\n","export function ManyDeletions() {\n    var threshold = 100;\n\n    var validation = function(changes) {\n        var warnings = [];\n        if (changes.deleted.length > threshold) {\n            warnings.push({\n                id: 'many_deletions',\n                message: t('validations.many_deletions', { n: changes.deleted.length })\n            });\n        }\n        return warnings;\n    };\n\n    return validation;\n}\n","export function MissingTag() {\n\n    // Slightly stricter check than Entity#isUsed (#3091)\n    function hasTags(entity, graph) {\n        return _.without(Object.keys(entity.tags), 'area', 'name').length > 0 ||\n            graph.parentRelations(entity).length > 0;\n    }\n\n    var validation = function(changes, graph) {\n        var warnings = [];\n        for (var i = 0; i < changes.created.length; i++) {\n            var change = changes.created[i],\n                geometry = change.geometry(graph);\n\n            if ((geometry === 'point' || geometry === 'line' || geometry === 'area') && !hasTags(change, graph)) {\n                warnings.push({\n                    id: 'missing_tag',\n                    message: t('validations.untagged_' + geometry),\n                    tooltip: t('validations.untagged_' + geometry + '_tooltip'),\n                    entity: change\n                });\n            }\n        }\n        return warnings;\n    };\n\n    return validation;\n}\n","export function TagSuggestsArea() {\n\n    // https://github.com/openstreetmap/josm/blob/mirror/src/org/\n    // openstreetmap/josm/data/validation/tests/UnclosedWays.java#L80\n    function tagSuggestsArea(tags) {\n        if (_.isEmpty(tags)) return false;\n\n        var presence = ['landuse', 'amenities', 'tourism', 'shop'];\n        for (var i = 0; i < presence.length; i++) {\n            if (tags[presence[i]] !== undefined) {\n                return presence[i] + '=' + tags[presence[i]];\n            }\n        }\n\n        if (tags.building && tags.building === 'yes') return 'building=yes';\n    }\n\n    var validation = function(changes, graph) {\n        var warnings = [];\n        for (var i = 0; i < changes.created.length; i++) {\n            var change = changes.created[i],\n                geometry = change.geometry(graph),\n                suggestion = (geometry === 'line' ? tagSuggestsArea(change.tags) : undefined);\n\n            if (suggestion) {\n                warnings.push({\n                    id: 'tag_suggests_area',\n                    message: t('validations.tag_suggests_area', { tag: suggestion }),\n                    entity: change\n                });\n            }\n        }\n        return warnings;\n    };\n\n    return validation;\n}\n","import { polygonIntersectsPolygon, Extent } from '../geo/index';\nexport function BackgroundSource(data) {\n    var source = _.clone(data),\n        offset = [0, 0],\n        name = source.name,\n        best = !!source.best;\n\n    source.scaleExtent = data.scaleExtent || [0, 20];\n    source.overzoom = data.overzoom !== false;\n\n    source.offset = function(_) {\n        if (!arguments.length) return offset;\n        offset = _;\n        return source;\n    };\n\n    source.nudge = function(_, zoomlevel) {\n        offset[0] += _[0] / Math.pow(2, zoomlevel);\n        offset[1] += _[1] / Math.pow(2, zoomlevel);\n        return source;\n    };\n\n    source.name = function() {\n        return name;\n    };\n\n    source.best = function() {\n        return best;\n    };\n\n    source.area = function() {\n        if (!data.polygon) return Number.MAX_VALUE;  // worldwide\n        var area = d3.geo.area({ type: 'MultiPolygon', coordinates: [ data.polygon ] });\n        return isNaN(area) ? 0 : area;\n    };\n\n    source.imageryUsed = function() {\n        return source.id || name;\n    };\n\n    source.url = function(coord) {\n        return data.template\n            .replace('{x}', coord[0])\n            .replace('{y}', coord[1])\n            // TMS-flipped y coordinate\n            .replace(/\\{[t-]y\\}/, Math.pow(2, coord[2]) - coord[1] - 1)\n            .replace(/\\{z(oom)?\\}/, coord[2])\n            .replace(/\\{switch:([^}]+)\\}/, function(s, r) {\n                var subdomains = r.split(',');\n                return subdomains[(coord[0] + coord[1]) % subdomains.length];\n            })\n            .replace('{u}', function() {\n                var u = '';\n                for (var zoom = coord[2]; zoom > 0; zoom--) {\n                    var b = 0;\n                    var mask = 1 << (zoom - 1);\n                    if ((coord[0] & mask) !== 0) b++;\n                    if ((coord[1] & mask) !== 0) b += 2;\n                    u += b.toString();\n                }\n                return u;\n            });\n    };\n\n    source.intersects = function(extent) {\n        extent = extent.polygon();\n        return !data.polygon || data.polygon.some(function(polygon) {\n            return polygonIntersectsPolygon(polygon, extent, true);\n        });\n    };\n\n    source.validZoom = function(z) {\n        return source.scaleExtent[0] <= z &&\n            (source.overzoom || source.scaleExtent[1] > z);\n    };\n\n    source.isLocatorOverlay = function() {\n        return name === 'Locator Overlay';\n    };\n\n    source.copyrightNotices = function() {};\n\n    return source;\n}\n\nBackgroundSource.Bing = function(data, dispatch) {\n    // http://msdn.microsoft.com/en-us/library/ff701716.aspx\n    // http://msdn.microsoft.com/en-us/library/ff701701.aspx\n\n    data.template = 'https://ecn.t{switch:0,1,2,3}.tiles.virtualearth.net/tiles/a{u}.jpeg?g=587&mkt=en-gb&n=z';\n\n    var bing = BackgroundSource(data),\n        key = 'Arzdiw4nlOJzRwOz__qailc8NiR31Tt51dN2D7cm57NrnceZnCpgOkmJhNpGoppU', // Same as P2 and JOSM\n        url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/Aerial?include=ImageryProviders&key=' +\n            key + '&jsonp={callback}',\n        providers = [];\n\n    d3.jsonp(url, function(json) {\n        providers = json.resourceSets[0].resources[0].imageryProviders.map(function(provider) {\n            return {\n                attribution: provider.attribution,\n                areas: provider.coverageAreas.map(function(area) {\n                    return {\n                        zoom: [area.zoomMin, area.zoomMax],\n                        extent: Extent([area.bbox[1], area.bbox[0]], [area.bbox[3], area.bbox[2]])\n                    };\n                })\n            };\n        });\n        dispatch.change();\n    });\n\n    bing.copyrightNotices = function(zoom, extent) {\n        zoom = Math.min(zoom, 21);\n        return providers.filter(function(provider) {\n            return _.some(provider.areas, function(area) {\n                return extent.intersects(area.extent) &&\n                    area.zoom[0] <= zoom &&\n                    area.zoom[1] >= zoom;\n            });\n        }).map(function(provider) {\n            return provider.attribution;\n        }).join(', ');\n    };\n\n    bing.logo = 'bing_maps.png';\n    bing.terms_url = 'https://blog.openstreetmap.org/2010/11/30/microsoft-imagery-details';\n\n    return bing;\n};\n\nBackgroundSource.None = function() {\n    var source = BackgroundSource({id: 'none', template: ''});\n\n    source.name = function() {\n        return t('background.none');\n    };\n\n    source.imageryUsed = function() {\n        return 'None';\n    };\n\n    source.area = function() {\n        return -1;\n    };\n\n    return source;\n};\n\nBackgroundSource.Custom = function(template) {\n    var source = BackgroundSource({id: 'custom', template: template});\n\n    source.name = function() {\n        return t('background.custom');\n    };\n\n    source.imageryUsed = function() {\n        return 'Custom (' + template + ')';\n    };\n\n    source.area = function() {\n        return -2;\n    };\n\n    return source;\n};\n","import { prefixCSSProperty } from '../util/index';\nexport function TileLayer(context) {\n    var tileSize = 256,\n        tile = d3.geo.tile(),\n        projection,\n        cache = {},\n        tileOrigin,\n        z,\n        transformProp = prefixCSSProperty('Transform'),\n        source = d3.functor('');\n\n\n    // blacklist overlay tiles around Null Island..\n    function nearNullIsland(x, y, z) {\n        if (z >= 7) {\n            var center = Math.pow(2, z - 1),\n                width = Math.pow(2, z - 6),\n                min = center - (width / 2),\n                max = center + (width / 2) - 1;\n            return x >= min && x <= max && y >= min && y <= max;\n        }\n        return false;\n    }\n\n    function tileSizeAtZoom(d, z) {\n        var epsilon = 0.002;\n        return ((tileSize * Math.pow(2, z - d[2])) / tileSize) + epsilon;\n    }\n\n    function atZoom(t, distance) {\n        var power = Math.pow(2, distance);\n        return [\n            Math.floor(t[0] * power),\n            Math.floor(t[1] * power),\n            t[2] + distance];\n    }\n\n    function lookUp(d) {\n        for (var up = -1; up > -d[2]; up--) {\n            var tile = atZoom(d, up);\n            if (cache[source.url(tile)] !== false) {\n                return tile;\n            }\n        }\n    }\n\n    function uniqueBy(a, n) {\n        var o = [], seen = {};\n        for (var i = 0; i < a.length; i++) {\n            if (seen[a[i][n]] === undefined) {\n                o.push(a[i]);\n                seen[a[i][n]] = true;\n            }\n        }\n        return o;\n    }\n\n    function addSource(d) {\n        d.push(source.url(d));\n        return d;\n    }\n\n    // Update tiles based on current state of `projection`.\n    function background(selection) {\n        tile.scale(projection.scale() * 2 * Math.PI)\n            .translate(projection.translate());\n\n        tileOrigin = [\n            projection.scale() * Math.PI - projection.translate()[0],\n            projection.scale() * Math.PI - projection.translate()[1]];\n\n        z = Math.max(Math.log(projection.scale() * 2 * Math.PI) / Math.log(2) - 8, 0);\n\n        render(selection);\n    }\n\n    // Derive the tiles onscreen, remove those offscreen and position them.\n    // Important that this part not depend on `projection` because it's\n    // rentered when tiles load/error (see #644).\n    function render(selection) {\n        var requests = [];\n        var showDebug = context.getDebug('tile') && !source.overlay;\n\n        if (source.validZoom(z)) {\n            tile().forEach(function(d) {\n                addSource(d);\n                if (d[3] === '') return;\n                if (typeof d[3] !== 'string') return; // Workaround for chrome crash https://github.com/openstreetmap/iD/issues/2295\n                requests.push(d);\n                if (cache[d[3]] === false && lookUp(d)) {\n                    requests.push(addSource(lookUp(d)));\n                }\n            });\n\n            requests = uniqueBy(requests, 3).filter(function(r) {\n                if (!!source.overlay && nearNullIsland(r[0], r[1], r[2])) {\n                    return false;\n                }\n                // don't re-request tiles which have failed in the past\n                return cache[r[3]] !== false;\n            });\n        }\n\n        var pixelOffset = [\n            source.offset()[0] * Math.pow(2, z),\n            source.offset()[1] * Math.pow(2, z)\n        ];\n\n        function load(d) {\n            cache[d[3]] = true;\n            d3.select(this)\n                .on('error', null)\n                .on('load', null)\n                .classed('tile-loaded', true);\n            render(selection);\n        }\n\n        function error(d) {\n            cache[d[3]] = false;\n            d3.select(this)\n                .on('error', null)\n                .on('load', null)\n                .remove();\n            render(selection);\n        }\n\n        function imageTransform(d) {\n            var _ts = tileSize * Math.pow(2, z - d[2]);\n            var scale = tileSizeAtZoom(d, z);\n            return 'translate(' +\n                ((d[0] * _ts) - tileOrigin[0] + pixelOffset[0]) + 'px,' +\n                ((d[1] * _ts) - tileOrigin[1] + pixelOffset[1]) + 'px)' +\n                'scale(' + scale + ',' + scale + ')';\n        }\n\n        function debugTransform(d) {\n            var _ts = tileSize * Math.pow(2, z - d[2]);\n            var scale = tileSizeAtZoom(d, z);\n            return 'translate(' +\n                ((d[0] * _ts) - tileOrigin[0] + pixelOffset[0] + scale * (tileSize / 4)) + 'px,' +\n                ((d[1] * _ts) - tileOrigin[1] + pixelOffset[1] + scale * (tileSize / 2)) + 'px)';\n        }\n\n        var image = selection\n            .selectAll('img')\n            .data(requests, function(d) { return d[3]; });\n\n        image.exit()\n            .style(transformProp, imageTransform)\n            .classed('tile-removing', true)\n            .each(function() {\n                var tile = d3.select(this);\n                window.setTimeout(function() {\n                    if (tile.classed('tile-removing')) {\n                        tile.remove();\n                    }\n                }, 300);\n            });\n\n        image.enter().append('img')\n            .attr('class', 'tile')\n            .attr('src', function(d) { return d[3]; })\n            .on('error', error)\n            .on('load', load);\n\n        image\n            .style(transformProp, imageTransform)\n            .classed('tile-debug', showDebug)\n            .classed('tile-removing', false);\n\n\n        var debug = selection.selectAll('.tile-label-debug')\n            .data(showDebug ? requests : [], function(d) { return d[3]; });\n\n        debug.exit()\n            .remove();\n\n        debug.enter()\n            .append('div')\n            .attr('class', 'tile-label-debug');\n\n        debug\n            .text(function(d) { return d[2] + ' / ' + d[0] + ' / ' + d[1]; })\n            .style(transformProp, debugTransform);\n    }\n\n    background.projection = function(_) {\n        if (!arguments.length) return projection;\n        projection = _;\n        return background;\n    };\n\n    background.dimensions = function(_) {\n        if (!arguments.length) return tile.size();\n        tile.size(_);\n        return background;\n    };\n\n    background.source = function(_) {\n        if (!arguments.length) return source;\n        source = _;\n        cache = {};\n        tile.scaleExtent(source.scaleExtent);\n        return background;\n    };\n\n    return background;\n}\n","import { stringQs, qsString } from '../util/index';\nimport { offsetToMeters, Extent, metersToOffset } from '../geo/index';\nimport { BackgroundSource } from './background_source';\nimport { TileLayer } from './tile_layer';\n\nexport function Background(context) {\n    var dispatch = d3.dispatch('change'),\n        baseLayer = TileLayer(context).projection(context.projection),\n        overlayLayers = [],\n        backgroundSources;\n\n\n    function findSource(id) {\n        return _.find(backgroundSources, function(d) {\n            return d.id && d.id === id;\n        });\n    }\n\n\n    function background(selection) {\n        var base = selection.selectAll('.layer-background')\n            .data([0]);\n\n        base.enter()\n            .insert('div', '.layer-data')\n            .attr('class', 'layer layer-background');\n\n        base.call(baseLayer);\n\n        var overlays = selection.selectAll('.layer-overlay')\n            .data(overlayLayers, function(d) { return d.source().name(); });\n\n        overlays.enter()\n            .insert('div', '.layer-data')\n            .attr('class', 'layer layer-overlay');\n\n        overlays.each(function(layer) {\n            d3.select(this).call(layer);\n        });\n\n        overlays.exit()\n            .remove();\n    }\n\n\n    background.updateImagery = function() {\n        var b = background.baseLayerSource(),\n            o = overlayLayers.map(function (d) { return d.source().id; }).join(','),\n            meters = offsetToMeters(b.offset()),\n            epsilon = 0.01,\n            x = +meters[0].toFixed(2),\n            y = +meters[1].toFixed(2),\n            q = stringQs(location.hash.substring(1));\n\n        var id = b.id;\n        if (id === 'custom') {\n            id = 'custom:' + b.template;\n        }\n\n        if (id) {\n            q.background = id;\n        } else {\n            delete q.background;\n        }\n\n        if (o) {\n            q.overlays = o;\n        } else {\n            delete q.overlays;\n        }\n\n        if (Math.abs(x) > epsilon || Math.abs(y) > epsilon) {\n            q.offset = x + ',' + y;\n        } else {\n            delete q.offset;\n        }\n\n        location.replace('#' + qsString(q, true));\n\n        var imageryUsed = [b.imageryUsed()];\n\n        overlayLayers.forEach(function (d) {\n            var source = d.source();\n            if (!source.isLocatorOverlay()) {\n                imageryUsed.push(source.imageryUsed());\n            }\n        });\n\n        var gpx = context.layers().layer('gpx');\n        if (gpx && gpx.enabled() && gpx.hasGpx()) {\n            imageryUsed.push('Local GPX');\n        }\n\n        var mapillary_images = context.layers().layer('mapillary-images');\n        if (mapillary_images && mapillary_images.enabled()) {\n            imageryUsed.push('Mapillary Images');\n        }\n\n        var mapillary_signs = context.layers().layer('mapillary-signs');\n        if (mapillary_signs && mapillary_signs.enabled()) {\n            imageryUsed.push('Mapillary Signs');\n        }\n\n        context.history().imageryUsed(imageryUsed);\n    };\n\n    background.sources = function(extent) {\n        return backgroundSources.filter(function(source) {\n            return source.intersects(extent);\n        });\n    };\n\n    background.dimensions = function(_) {\n        baseLayer.dimensions(_);\n\n        overlayLayers.forEach(function(layer) {\n            layer.dimensions(_);\n        });\n    };\n\n    background.baseLayerSource = function(d) {\n        if (!arguments.length) return baseLayer.source();\n        baseLayer.source(d);\n        dispatch.change();\n        background.updateImagery();\n        return background;\n    };\n\n    background.bing = function() {\n        background.baseLayerSource(findSource('Bing'));\n    };\n\n    background.showsLayer = function(d) {\n        return d === baseLayer.source() ||\n            (d.id === 'custom' && baseLayer.source().id === 'custom') ||\n            overlayLayers.some(function(l) { return l.source() === d; });\n    };\n\n    background.overlayLayerSources = function() {\n        return overlayLayers.map(function (l) { return l.source(); });\n    };\n\n    background.toggleOverlayLayer = function(d) {\n        var layer;\n\n        for (var i = 0; i < overlayLayers.length; i++) {\n            layer = overlayLayers[i];\n            if (layer.source() === d) {\n                overlayLayers.splice(i, 1);\n                dispatch.change();\n                background.updateImagery();\n                return;\n            }\n        }\n\n        layer = TileLayer(context)\n            .source(d)\n            .projection(context.projection)\n            .dimensions(baseLayer.dimensions());\n\n        overlayLayers.push(layer);\n        dispatch.change();\n        background.updateImagery();\n    };\n\n    background.nudge = function(d, zoom) {\n        baseLayer.source().nudge(d, zoom);\n        dispatch.change();\n        background.updateImagery();\n        return background;\n    };\n\n    background.offset = function(d) {\n        if (!arguments.length) return baseLayer.source().offset();\n        baseLayer.source().offset(d);\n        dispatch.change();\n        background.updateImagery();\n        return background;\n    };\n\n    background.load = function(imagery) {\n        function parseMap(qmap) {\n            if (!qmap) return false;\n            var args = qmap.split('/').map(Number);\n            if (args.length < 3 || args.some(isNaN)) return false;\n            return Extent([args[1], args[2]]);\n        }\n\n        var q = stringQs(location.hash.substring(1)),\n            chosen = q.background || q.layer,\n            extent = parseMap(q.map),\n            best;\n\n        backgroundSources = imagery.map(function(source) {\n            if (source.type === 'bing') {\n                return BackgroundSource.Bing(source, dispatch);\n            } else {\n                return BackgroundSource(source);\n            }\n        });\n\n        backgroundSources.unshift(BackgroundSource.None());\n\n        if (!chosen && extent) {\n            best = _.find(this.sources(extent), function(s) { return s.best(); });\n        }\n\n        if (chosen && chosen.indexOf('custom:') === 0) {\n            background.baseLayerSource(BackgroundSource.Custom(chosen.replace(/^custom:/, '')));\n        } else {\n            background.baseLayerSource(findSource(chosen) || best || findSource('Bing') || backgroundSources[1] || backgroundSources[0]);\n        }\n\n        var locator = _.find(backgroundSources, function(d) {\n            return d.overlay && d.default;\n        });\n\n        if (locator) {\n            background.toggleOverlayLayer(locator);\n        }\n\n        var overlays = (q.overlays || '').split(',');\n        overlays.forEach(function(overlay) {\n            overlay = findSource(overlay);\n            if (overlay) {\n                background.toggleOverlayLayer(overlay);\n            }\n        });\n\n        if (q.gpx) {\n            var gpx = context.layers().layer('gpx');\n            if (gpx) {\n                gpx.url(q.gpx);\n            }\n        }\n\n        if (q.offset) {\n            var offset = q.offset.replace(/;/g, ',').split(',').map(function(n) {\n                return !isNaN(n) && n;\n            });\n\n            if (offset.length === 2) {\n                background.offset(metersToOffset(offset));\n            }\n        }\n    };\n\n    return d3.rebind(background, dispatch, 'on');\n}\n","import { Entity } from '../core/index';\nexport function Features(context) {\n    var traffic_roads = {\n        'motorway': true,\n        'motorway_link': true,\n        'trunk': true,\n        'trunk_link': true,\n        'primary': true,\n        'primary_link': true,\n        'secondary': true,\n        'secondary_link': true,\n        'tertiary': true,\n        'tertiary_link': true,\n        'residential': true,\n        'unclassified': true,\n        'living_street': true\n    };\n\n    var service_roads = {\n        'service': true,\n        'road': true,\n        'track': true\n    };\n\n    var paths = {\n        'path': true,\n        'footway': true,\n        'cycleway': true,\n        'bridleway': true,\n        'steps': true,\n        'pedestrian': true,\n        'corridor': true\n    };\n\n    var past_futures = {\n        'proposed': true,\n        'construction': true,\n        'abandoned': true,\n        'dismantled': true,\n        'disused': true,\n        'razed': true,\n        'demolished': true,\n        'obliterated': true\n    };\n\n    var dispatch = d3.dispatch('change', 'redraw'),\n        _cullFactor = 1,\n        _cache = {},\n        _features = {},\n        _stats = {},\n        _keys = [],\n        _hidden = [];\n\n    function update() {\n        _hidden = features.hidden();\n        dispatch.change();\n        dispatch.redraw();\n    }\n\n    function defineFeature(k, filter, max) {\n        _keys.push(k);\n        _features[k] = {\n            filter: filter,\n            enabled: true,   // whether the user wants it enabled..\n            count: 0,\n            currentMax: (max || Infinity),\n            defaultMax: (max || Infinity),\n            enable: function() { this.enabled = true; this.currentMax = this.defaultMax; },\n            disable: function() { this.enabled = false; this.currentMax = 0; },\n            hidden: function() { return !context.editable() || this.count > this.currentMax * _cullFactor; },\n            autoHidden: function() { return this.hidden() && this.currentMax > 0; }\n        };\n    }\n\n\n    defineFeature('points', function isPoint(entity, resolver, geometry) {\n        return geometry === 'point';\n    }, 200);\n\n    defineFeature('traffic_roads', function isTrafficRoad(entity) {\n        return traffic_roads[entity.tags.highway];\n    });\n\n    defineFeature('service_roads', function isServiceRoad(entity) {\n        return service_roads[entity.tags.highway];\n    });\n\n    defineFeature('paths', function isPath(entity) {\n        return paths[entity.tags.highway];\n    });\n\n    defineFeature('buildings', function isBuilding(entity) {\n        return (\n            !!entity.tags['building:part'] ||\n            (!!entity.tags.building && entity.tags.building !== 'no') ||\n            entity.tags.amenity === 'shelter' ||\n            entity.tags.parking === 'multi-storey' ||\n            entity.tags.parking === 'sheds' ||\n            entity.tags.parking === 'carports' ||\n            entity.tags.parking === 'garage_boxes'\n        );\n    }, 250);\n\n    defineFeature('landuse', function isLanduse(entity, resolver, geometry) {\n        return geometry === 'area' &&\n            !_features.buildings.filter(entity) &&\n            !_features.water.filter(entity);\n    });\n\n    defineFeature('boundaries', function isBoundary(entity) {\n        return !!entity.tags.boundary;\n    });\n\n    defineFeature('water', function isWater(entity) {\n        return (\n            !!entity.tags.waterway ||\n            entity.tags.natural === 'water' ||\n            entity.tags.natural === 'coastline' ||\n            entity.tags.natural === 'bay' ||\n            entity.tags.landuse === 'pond' ||\n            entity.tags.landuse === 'basin' ||\n            entity.tags.landuse === 'reservoir' ||\n            entity.tags.landuse === 'salt_pond'\n        );\n    });\n\n    defineFeature('rail', function isRail(entity) {\n        return (\n            !!entity.tags.railway ||\n            entity.tags.landuse === 'railway'\n        ) && !(\n            traffic_roads[entity.tags.highway] ||\n            service_roads[entity.tags.highway] ||\n            paths[entity.tags.highway]\n        );\n    });\n\n    defineFeature('power', function isPower(entity) {\n        return !!entity.tags.power;\n    });\n\n    // contains a past/future tag, but not in active use as a road/path/cycleway/etc..\n    defineFeature('past_future', function isPastFuture(entity) {\n        if (\n            traffic_roads[entity.tags.highway] ||\n            service_roads[entity.tags.highway] ||\n            paths[entity.tags.highway]\n        ) { return false; }\n\n        var strings = Object.keys(entity.tags);\n\n        for (var i = 0; i < strings.length; i++) {\n            var s = strings[i];\n            if (past_futures[s] || past_futures[entity.tags[s]]) { return true; }\n        }\n        return false;\n    });\n\n    // Lines or areas that don't match another feature filter.\n    // IMPORTANT: The 'others' feature must be the last one defined,\n    //   so that code in getMatches can skip this test if `hasMatch = true`\n    defineFeature('others', function isOther(entity, resolver, geometry) {\n        return (geometry === 'line' || geometry === 'area');\n    });\n\n\n    function features() {}\n\n    features.features = function() {\n        return _features;\n    };\n\n    features.keys = function() {\n        return _keys;\n    };\n\n    features.enabled = function(k) {\n        if (!arguments.length) {\n            return _.filter(_keys, function(k) { return _features[k].enabled; });\n        }\n        return _features[k] && _features[k].enabled;\n    };\n\n    features.disabled = function(k) {\n        if (!arguments.length) {\n            return _.reject(_keys, function(k) { return _features[k].enabled; });\n        }\n        return _features[k] && !_features[k].enabled;\n    };\n\n    features.hidden = function(k) {\n        if (!arguments.length) {\n            return _.filter(_keys, function(k) { return _features[k].hidden(); });\n        }\n        return _features[k] && _features[k].hidden();\n    };\n\n    features.autoHidden = function(k) {\n        if (!arguments.length) {\n            return _.filter(_keys, function(k) { return _features[k].autoHidden(); });\n        }\n        return _features[k] && _features[k].autoHidden();\n    };\n\n    features.enable = function(k) {\n        if (_features[k] && !_features[k].enabled) {\n            _features[k].enable();\n            update();\n        }\n    };\n\n    features.disable = function(k) {\n        if (_features[k] && _features[k].enabled) {\n            _features[k].disable();\n            update();\n        }\n    };\n\n    features.toggle = function(k) {\n        if (_features[k]) {\n            (function(f) { return f.enabled ? f.disable() : f.enable(); }(_features[k]));\n            update();\n        }\n    };\n\n    features.resetStats = function() {\n        _.each(_features, function(f) { f.count = 0; });\n        dispatch.change();\n    };\n\n    features.gatherStats = function(d, resolver, dimensions) {\n        var needsRedraw = false,\n            type = _.groupBy(d, function(ent) { return ent.type; }),\n            entities = [].concat(type.relation || [], type.way || [], type.node || []),\n            currHidden, geometry, matches;\n\n        _.each(_features, function(f) { f.count = 0; });\n\n        // adjust the threshold for point/building culling based on viewport size..\n        // a _cullFactor of 1 corresponds to a 1000x1000px viewport..\n        _cullFactor = dimensions[0] * dimensions[1] / 1000000;\n\n        for (var i = 0; i < entities.length; i++) {\n            geometry = entities[i].geometry(resolver);\n            if (!(geometry === 'vertex' || geometry === 'relation')) {\n                matches = Object.keys(features.getMatches(entities[i], resolver, geometry));\n                for (var j = 0; j < matches.length; j++) {\n                    _features[matches[j]].count++;\n                }\n            }\n        }\n\n        currHidden = features.hidden();\n        if (currHidden !== _hidden) {\n            _hidden = currHidden;\n            needsRedraw = true;\n            dispatch.change();\n        }\n\n        return needsRedraw;\n    };\n\n    features.stats = function() {\n        _.each(_keys, function(k) { _stats[k] = _features[k].count; });\n        return _stats;\n    };\n\n    features.clear = function(d) {\n        for (var i = 0; i < d.length; i++) {\n            features.clearEntity(d[i]);\n        }\n    };\n\n    features.clearEntity = function(entity) {\n        delete _cache[Entity.key(entity)];\n    };\n\n    features.reset = function() {\n        _cache = {};\n    };\n\n    features.getMatches = function(entity, resolver, geometry) {\n        if (geometry === 'vertex' || geometry === 'relation') return {};\n\n        var ent = Entity.key(entity);\n        if (!_cache[ent]) {\n            _cache[ent] = {};\n        }\n\n        if (!_cache[ent].matches) {\n            var matches = {},\n                hasMatch = false;\n\n            for (var i = 0; i < _keys.length; i++) {\n                if (_keys[i] === 'others') {\n                    if (hasMatch) continue;\n\n                    // Multipolygon members:\n                    // If an entity...\n                    //   1. is a way that hasn't matched other \"interesting\" feature rules,\n                    //   2. and it belongs to a single parent multipolygon relation\n                    // ...then match whatever feature rules the parent multipolygon has matched.\n                    // see #2548, #2887\n                    //\n                    // IMPORTANT:\n                    // For this to work, getMatches must be called on relations before ways.\n                    //\n                    if (entity.type === 'way') {\n                        var parents = features.getParents(entity, resolver, geometry);\n                        if (parents.length === 1 && parents[0].isMultipolygon()) {\n                            var pkey = Entity.key(parents[0]);\n                            if (_cache[pkey] && _cache[pkey].matches) {\n                                matches = _.clone(_cache[pkey].matches);\n                                continue;\n                            }\n                        }\n                    }\n                }\n\n                if (_features[_keys[i]].filter(entity, resolver, geometry)) {\n                    matches[_keys[i]] = hasMatch = true;\n                }\n            }\n            _cache[ent].matches = matches;\n        }\n\n        return _cache[ent].matches;\n    };\n\n    features.getParents = function(entity, resolver, geometry) {\n        if (geometry === 'point') return [];\n\n        var ent = Entity.key(entity);\n        if (!_cache[ent]) {\n            _cache[ent] = {};\n        }\n\n        if (!_cache[ent].parents) {\n            var parents = [];\n            if (geometry === 'vertex') {\n                parents = resolver.parentWays(entity);\n            } else {   // 'line', 'area', 'relation'\n                parents = resolver.parentRelations(entity);\n            }\n            _cache[ent].parents = parents;\n        }\n        return _cache[ent].parents;\n    };\n\n    features.isHiddenFeature = function(entity, resolver, geometry) {\n        if (!_hidden.length) return false;\n        if (!entity.version) return false;\n\n        var matches = features.getMatches(entity, resolver, geometry);\n\n        for (var i = 0; i < _hidden.length; i++) {\n            if (matches[_hidden[i]]) return true;\n        }\n        return false;\n    };\n\n    features.isHiddenChild = function(entity, resolver, geometry) {\n        if (!_hidden.length) return false;\n        if (!entity.version || geometry === 'point') return false;\n\n        var parents = features.getParents(entity, resolver, geometry);\n        if (!parents.length) return false;\n\n        for (var i = 0; i < parents.length; i++) {\n            if (!features.isHidden(parents[i], resolver, parents[i].geometry(resolver))) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    features.hasHiddenConnections = function(entity, resolver) {\n        if (!_hidden.length) return false;\n        var childNodes, connections;\n\n        if (entity.type === 'midpoint') {\n            childNodes = [resolver.entity(entity.edge[0]), resolver.entity(entity.edge[1])];\n            connections = [];\n        } else {\n            childNodes = entity.nodes ? resolver.childNodes(entity) : [];\n            connections = features.getParents(entity, resolver, entity.geometry(resolver));\n        }\n\n        // gather ways connected to child nodes..\n        connections = _.reduce(childNodes, function(result, e) {\n            return resolver.isShared(e) ? _.union(result, resolver.parentWays(e)) : result;\n        }, connections);\n\n        return connections.length ? _.some(connections, function(e) {\n            return features.isHidden(e, resolver, e.geometry(resolver));\n        }) : false;\n    };\n\n    features.isHidden = function(entity, resolver, geometry) {\n        if (!_hidden.length) return false;\n        if (!entity.version) return false;\n\n        var fn = (geometry === 'vertex' ? features.isHiddenChild : features.isHiddenFeature);\n        return fn(entity, resolver, geometry);\n    };\n\n    features.filter = function(d, resolver) {\n        if (!_hidden.length) return d;\n\n        var result = [];\n        for (var i = 0; i < d.length; i++) {\n            var entity = d[i];\n            if (!features.isHidden(entity, resolver, entity.geometry(resolver))) {\n                result.push(entity);\n            }\n        }\n        return result;\n    };\n\n    return d3.rebind(features, dispatch, 'on');\n}\n","export function Areas(projection) {\n    // Patterns only work in Firefox when set directly on element.\n    // (This is not a bug: https://bugzilla.mozilla.org/show_bug.cgi?id=750632)\n    var patterns = {\n        wetland: 'wetland',\n        beach: 'beach',\n        scrub: 'scrub',\n        construction: 'construction',\n        military: 'construction',\n        cemetery: 'cemetery',\n        grave_yard: 'cemetery',\n        meadow: 'meadow',\n        farm: 'farmland',\n        farmland: 'farmland',\n        orchard: 'orchard'\n    };\n\n    var patternKeys = ['landuse', 'natural', 'amenity'];\n\n    function setPattern(d) {\n        for (var i = 0; i < patternKeys.length; i++) {\n            if (patterns.hasOwnProperty(d.tags[patternKeys[i]])) {\n                this.style.fill = this.style.stroke = 'url(\"#pattern-' + patterns[d.tags[patternKeys[i]]] + '\")';\n                return;\n            }\n        }\n        this.style.fill = this.style.stroke = '';\n    }\n\n    return function drawAreas(surface, graph, entities, filter) {\n        var path = iD.svg.Path(projection, graph, true),\n            areas = {},\n            multipolygon;\n\n        for (var i = 0; i < entities.length; i++) {\n            var entity = entities[i];\n            if (entity.geometry(graph) !== 'area') continue;\n\n            multipolygon = iD.geo.isSimpleMultipolygonOuterMember(entity, graph);\n            if (multipolygon) {\n                areas[multipolygon.id] = {\n                    entity: multipolygon.mergeTags(entity.tags),\n                    area: Math.abs(entity.area(graph))\n                };\n            } else if (!areas[entity.id]) {\n                areas[entity.id] = {\n                    entity: entity,\n                    area: Math.abs(entity.area(graph))\n                };\n            }\n        }\n\n        areas = d3.values(areas).filter(function hasPath(a) { return path(a.entity); });\n        areas.sort(function areaSort(a, b) { return b.area - a.area; });\n        areas = _.map(areas, 'entity');\n\n        var strokes = areas.filter(function(area) {\n            return area.type === 'way';\n        });\n\n        var data = {\n            clip: areas,\n            shadow: strokes,\n            stroke: strokes,\n            fill: areas\n        };\n\n        var clipPaths = surface.selectAll('defs').selectAll('.clipPath')\n           .filter(filter)\n           .data(data.clip, iD.Entity.key);\n\n        clipPaths.enter()\n           .append('clipPath')\n           .attr('class', 'clipPath')\n           .attr('id', function(entity) { return entity.id + '-clippath'; })\n           .append('path');\n\n        clipPaths.selectAll('path')\n           .attr('d', path);\n\n        clipPaths.exit()\n           .remove();\n\n        var areagroup = surface\n            .selectAll('.layer-areas')\n            .selectAll('g.areagroup')\n            .data(['fill', 'shadow', 'stroke']);\n\n        areagroup.enter()\n            .append('g')\n            .attr('class', function(d) { return 'layer areagroup area-' + d; });\n\n        var paths = areagroup\n            .selectAll('path')\n            .filter(filter)\n            .data(function(layer) { return data[layer]; }, iD.Entity.key);\n\n        // Remove exiting areas first, so they aren't included in the `fills`\n        // array used for sorting below (https://github.com/openstreetmap/iD/issues/1903).\n        paths.exit()\n            .remove();\n\n        var fills = surface.selectAll('.area-fill path.area')[0];\n\n        var bisect = d3.bisector(function(node) {\n            return -node.__data__.area(graph);\n        }).left;\n\n        function sortedByArea(entity) {\n            if (this.__data__ === 'fill') {\n                return fills[bisect(fills, -entity.area(graph))];\n            }\n        }\n\n        paths.enter()\n            .insert('path', sortedByArea)\n            .each(function(entity) {\n                var layer = this.parentNode.__data__;\n\n                this.setAttribute('class', entity.type + ' area ' + layer + ' ' + entity.id);\n\n                if (layer === 'fill') {\n                    this.setAttribute('clip-path', 'url(#' + entity.id + '-clippath)');\n                    setPattern.apply(this, arguments);\n                }\n            })\n            .call(iD.svg.TagClasses());\n\n        paths\n            .attr('d', path);\n    };\n}\n","export function Labels(projection, context) {\n    var path = d3.geo.path().projection(projection);\n\n    // Replace with dict and iterate over entities tags instead?\n    var label_stack = [\n        ['line', 'aeroway'],\n        ['line', 'highway'],\n        ['line', 'railway'],\n        ['line', 'waterway'],\n        ['area', 'aeroway'],\n        ['area', 'amenity'],\n        ['area', 'building'],\n        ['area', 'historic'],\n        ['area', 'leisure'],\n        ['area', 'man_made'],\n        ['area', 'natural'],\n        ['area', 'shop'],\n        ['area', 'tourism'],\n        ['point', 'aeroway'],\n        ['point', 'amenity'],\n        ['point', 'building'],\n        ['point', 'historic'],\n        ['point', 'leisure'],\n        ['point', 'man_made'],\n        ['point', 'natural'],\n        ['point', 'shop'],\n        ['point', 'tourism'],\n        ['line', 'name'],\n        ['area', 'name'],\n        ['point', 'name']\n    ];\n\n    var default_size = 12;\n\n    var font_sizes = label_stack.map(function(d) {\n        var style = iD.util.getStyle('text.' + d[0] + '.tag-' + d[1]),\n            m = style && style.cssText.match('font-size: ([0-9]{1,2})px;');\n        if (m) return parseInt(m[1], 10);\n\n        style = iD.util.getStyle('text.' + d[0]);\n        m = style && style.cssText.match('font-size: ([0-9]{1,2})px;');\n        if (m) return parseInt(m[1], 10);\n\n        return default_size;\n    });\n\n    var iconSize = 18;\n\n    var pointOffsets = [\n        [15, -11, 'start'], // right\n        [10, -11, 'start'], // unused right now\n        [-15, -11, 'end']\n    ];\n\n    var lineOffsets = [50, 45, 55, 40, 60, 35, 65, 30, 70, 25,\n        75, 20, 80, 15, 95, 10, 90, 5, 95];\n\n\n    var noIcons = ['building', 'landuse', 'natural'];\n    function blacklisted(preset) {\n        return _.some(noIcons, function(s) {\n            return preset.id.indexOf(s) >= 0;\n        });\n    }\n\n    function get(array, prop) {\n        return function(d, i) { return array[i][prop]; };\n    }\n\n    var textWidthCache = {};\n\n    function textWidth(text, size, elem) {\n        var c = textWidthCache[size];\n        if (!c) c = textWidthCache[size] = {};\n\n        if (c[text]) {\n            return c[text];\n\n        } else if (elem) {\n            c[text] = elem.getComputedTextLength();\n            return c[text];\n\n        } else {\n            var str = encodeURIComponent(text).match(/%[CDEFcdef]/g);\n            if (str === null) {\n                return size / 3 * 2 * text.length;\n            } else {\n                return size / 3 * (2 * text.length + str.length);\n            }\n        }\n    }\n\n    function drawLineLabels(group, entities, filter, classes, labels) {\n        var texts = group.selectAll('text.' + classes)\n            .filter(filter)\n            .data(entities, iD.Entity.key);\n\n        texts.enter()\n            .append('text')\n            .attr('class', function(d, i) { return classes + ' ' + labels[i].classes + ' ' + d.id; })\n            .append('textPath')\n            .attr('class', 'textpath');\n\n\n        texts.selectAll('.textpath')\n            .filter(filter)\n            .data(entities, iD.Entity.key)\n            .attr({\n                'startOffset': '50%',\n                'xlink:href': function(d) { return '#labelpath-' + d.id; }\n            })\n            .text(iD.util.displayName);\n\n        texts.exit().remove();\n    }\n\n    function drawLinePaths(group, entities, filter, classes, labels) {\n        var halos = group.selectAll('path')\n            .filter(filter)\n            .data(entities, iD.Entity.key);\n\n        halos.enter()\n            .append('path')\n            .style('stroke-width', get(labels, 'font-size'))\n            .attr('id', function(d) { return 'labelpath-' + d.id; })\n            .attr('class', classes);\n\n        halos.attr('d', get(labels, 'lineString'));\n\n        halos.exit().remove();\n    }\n\n    function drawPointLabels(group, entities, filter, classes, labels) {\n        var texts = group.selectAll('text.' + classes)\n            .filter(filter)\n            .data(entities, iD.Entity.key);\n\n        texts.enter()\n            .append('text')\n            .attr('class', function(d, i) { return classes + ' ' + labels[i].classes + ' ' + d.id; });\n\n        texts.attr('x', get(labels, 'x'))\n            .attr('y', get(labels, 'y'))\n            .style('text-anchor', get(labels, 'textAnchor'))\n            .text(iD.util.displayName)\n            .each(function(d, i) { textWidth(iD.util.displayName(d), labels[i].height, this); });\n\n        texts.exit().remove();\n        return texts;\n    }\n\n    function drawAreaLabels(group, entities, filter, classes, labels) {\n        entities = entities.filter(hasText);\n        labels = labels.filter(hasText);\n        return drawPointLabels(group, entities, filter, classes, labels);\n\n        function hasText(d, i) {\n            return labels[i].hasOwnProperty('x') && labels[i].hasOwnProperty('y');\n        }\n    }\n\n    function drawAreaIcons(group, entities, filter, classes, labels) {\n        var icons = group.selectAll('use')\n            .filter(filter)\n            .data(entities, iD.Entity.key);\n\n        icons.enter()\n            .append('use')\n            .attr('class', 'icon areaicon')\n            .attr('width', '18px')\n            .attr('height', '18px');\n\n        icons.attr('transform', get(labels, 'transform'))\n            .attr('xlink:href', function(d) {\n                var icon = context.presets().match(d, context.graph()).icon;\n                return '#' + icon + (icon === 'hairdresser' ? '-24': '-18');    // workaround: maki hairdresser-18 broken?\n            });\n\n\n        icons.exit().remove();\n    }\n\n    function reverse(p) {\n        var angle = Math.atan2(p[1][1] - p[0][1], p[1][0] - p[0][0]);\n        return !(p[0][0] < p[p.length - 1][0] && angle < Math.PI/2 && angle > -Math.PI/2);\n    }\n\n    function lineString(nodes) {\n        return 'M' + nodes.join('L');\n    }\n\n    function subpath(nodes, from, to) {\n        function segmentLength(i) {\n            var dx = nodes[i][0] - nodes[i + 1][0];\n            var dy = nodes[i][1] - nodes[i + 1][1];\n            return Math.sqrt(dx * dx + dy * dy);\n        }\n\n        var sofar = 0,\n            start, end, i0, i1;\n        for (var i = 0; i < nodes.length - 1; i++) {\n            var current = segmentLength(i);\n            var portion;\n            if (!start && sofar + current >= from) {\n                portion = (from - sofar) / current;\n                start = [\n                    nodes[i][0] + portion * (nodes[i + 1][0] - nodes[i][0]),\n                    nodes[i][1] + portion * (nodes[i + 1][1] - nodes[i][1])\n                ];\n                i0 = i + 1;\n            }\n            if (!end && sofar + current >= to) {\n                portion = (to - sofar) / current;\n                end = [\n                    nodes[i][0] + portion * (nodes[i + 1][0] - nodes[i][0]),\n                    nodes[i][1] + portion * (nodes[i + 1][1] - nodes[i][1])\n                ];\n                i1 = i + 1;\n            }\n            sofar += current;\n\n        }\n        var ret = nodes.slice(i0, i1);\n        ret.unshift(start);\n        ret.push(end);\n        return ret;\n\n    }\n\n    function hideOnMouseover() {\n        var layers = d3.select(this)\n            .selectAll('.layer-label, .layer-halo');\n\n        layers.selectAll('.proximate')\n            .classed('proximate', false);\n\n        var mouse = context.mouse(),\n            pad = 50,\n            rect = [mouse[0] - pad, mouse[1] - pad, mouse[0] + pad, mouse[1] + pad],\n            ids = _.map(rtree.search(rect), 'id');\n\n        if (!ids.length) return;\n        layers.selectAll('.' + ids.join(', .'))\n            .classed('proximate', true);\n    }\n\n    var rtree = rbush(),\n        rectangles = {};\n\n    function drawLabels(surface, graph, entities, filter, dimensions, fullRedraw) {\n        var hidePoints = !surface.selectAll('.node.point').node();\n\n        var labelable = [], i, k, entity;\n        for (i = 0; i < label_stack.length; i++) labelable.push([]);\n\n        if (fullRedraw) {\n            rtree.clear();\n            rectangles = {};\n        } else {\n            for (i = 0; i < entities.length; i++) {\n                rtree.remove(rectangles[entities[i].id]);\n            }\n        }\n\n        // Split entities into groups specified by label_stack\n        for (i = 0; i < entities.length; i++) {\n            entity = entities[i];\n            var geometry = entity.geometry(graph);\n\n            if (geometry === 'vertex')\n                continue;\n            if (hidePoints && geometry === 'point')\n                continue;\n\n            var preset = geometry === 'area' && context.presets().match(entity, graph),\n                icon = preset && !blacklisted(preset) && preset.icon;\n\n            if (!icon && !iD.util.displayName(entity))\n                continue;\n\n            for (k = 0; k < label_stack.length; k++) {\n                if (geometry === label_stack[k][0] && entity.tags[label_stack[k][1]]) {\n                    labelable[k].push(entity);\n                    break;\n                }\n            }\n        }\n\n        var positions = {\n            point: [],\n            line: [],\n            area: []\n        };\n\n        var labelled = {\n            point: [],\n            line: [],\n            area: []\n        };\n\n        // Try and find a valid label for labellable entities\n        for (k = 0; k < labelable.length; k++) {\n            var font_size = font_sizes[k];\n            for (i = 0; i < labelable[k].length; i++) {\n                entity = labelable[k][i];\n                var name = iD.util.displayName(entity),\n                    width = name && textWidth(name, font_size),\n                    p;\n                if (entity.geometry(graph) === 'point') {\n                    p = getPointLabel(entity, width, font_size);\n                } else if (entity.geometry(graph) === 'line') {\n                    p = getLineLabel(entity, width, font_size);\n                } else if (entity.geometry(graph) === 'area') {\n                    p = getAreaLabel(entity, width, font_size);\n                }\n                if (p) {\n                    p.classes = entity.geometry(graph) + ' tag-' + label_stack[k][1];\n                    positions[entity.geometry(graph)].push(p);\n                    labelled[entity.geometry(graph)].push(entity);\n                }\n            }\n        }\n\n        function getPointLabel(entity, width, height) {\n            var coord = projection(entity.loc),\n                m = 5,  // margin\n                offset = pointOffsets[0],\n                p = {\n                    height: height,\n                    width: width,\n                    x: coord[0] + offset[0],\n                    y: coord[1] + offset[1],\n                    textAnchor: offset[2]\n                };\n            var rect = [p.x - m, p.y - m, p.x + width + m, p.y + height + m];\n            if (tryInsert(rect, entity.id)) return p;\n        }\n\n\n        function getLineLabel(entity, width, height) {\n            var nodes = _.map(graph.childNodes(entity), 'loc').map(projection),\n                length = iD.geo.pathLength(nodes);\n            if (length < width + 20) return;\n\n            for (var i = 0; i < lineOffsets.length; i++) {\n                var offset = lineOffsets[i],\n                    middle = offset / 100 * length,\n                    start = middle - width/2;\n                if (start < 0 || start + width > length) continue;\n                var sub = subpath(nodes, start, start + width),\n                    rev = reverse(sub),\n                    rect = [\n                        Math.min(sub[0][0], sub[sub.length - 1][0]) - 10,\n                        Math.min(sub[0][1], sub[sub.length - 1][1]) - 10,\n                        Math.max(sub[0][0], sub[sub.length - 1][0]) + 20,\n                        Math.max(sub[0][1], sub[sub.length - 1][1]) + 30\n                    ];\n                if (rev) sub = sub.reverse();\n                if (tryInsert(rect, entity.id)) return {\n                    'font-size': height + 2,\n                    lineString: lineString(sub),\n                    startOffset: offset + '%'\n                };\n            }\n        }\n\n        function getAreaLabel(entity, width, height) {\n            var centroid = path.centroid(entity.asGeoJSON(graph, true)),\n                extent = entity.extent(graph),\n                entitywidth = projection(extent[1])[0] - projection(extent[0])[0],\n                rect;\n\n            if (isNaN(centroid[0]) || entitywidth < 20) return;\n\n            var iconX = centroid[0] - (iconSize/2),\n                iconY = centroid[1] - (iconSize/2),\n                textOffset = iconSize + 5;\n\n            var p = {\n                transform: 'translate(' + iconX + ',' + iconY + ')'\n            };\n\n            if (width && entitywidth >= width + 20) {\n                p.x = centroid[0];\n                p.y = centroid[1] + textOffset;\n                p.textAnchor = 'middle';\n                p.height = height;\n                rect = [p.x - width/2, p.y, p.x + width/2, p.y + height + textOffset];\n            } else {\n                rect = [iconX, iconY, iconX + iconSize, iconY + iconSize];\n            }\n\n            if (tryInsert(rect, entity.id)) return p;\n\n        }\n\n        function tryInsert(rect, id) {\n            // Check that label is visible\n            if (rect[0] < 0 || rect[1] < 0 || rect[2] > dimensions[0] ||\n                rect[3] > dimensions[1]) return false;\n            var v = rtree.search(rect).length === 0;\n            if (v) {\n                rect.id = id;\n                rtree.insert(rect);\n                rectangles[id] = rect;\n            }\n            return v;\n        }\n\n        var label = surface.selectAll('.layer-label'),\n            halo = surface.selectAll('.layer-halo');\n\n        // points\n        drawPointLabels(label, labelled.point, filter, 'pointlabel', positions.point);\n        drawPointLabels(halo, labelled.point, filter, 'pointlabel-halo', positions.point);\n\n        // lines\n        drawLinePaths(halo, labelled.line, filter, '', positions.line);\n        drawLineLabels(label, labelled.line, filter, 'linelabel', positions.line);\n        drawLineLabels(halo, labelled.line, filter, 'linelabel-halo', positions.line);\n\n        // areas\n        drawAreaLabels(label, labelled.area, filter, 'arealabel', positions.area);\n        drawAreaLabels(halo, labelled.area, filter, 'arealabel-halo', positions.area);\n        drawAreaIcons(label, labelled.area, filter, 'arealabel-icon', positions.area);\n\n        // debug\n        var showDebug = context.getDebug('collision');\n        var debug = label.selectAll('.layer-label-debug')\n            .data(showDebug ? [true] : []);\n\n        debug.enter()\n            .append('g')\n            .attr('class', 'layer-label-debug');\n\n        debug.exit()\n            .remove();\n\n        if (showDebug) {\n            var gj = rtree.all().map(function(d) {\n                return { type: 'Polygon', coordinates: [[\n                    [d[0], d[1]],\n                    [d[2], d[1]],\n                    [d[2], d[3]],\n                    [d[0], d[3]],\n                    [d[0], d[1]]\n                ]]};\n            });\n\n            var debugboxes = debug.selectAll('.debug').data(gj);\n\n            debugboxes.enter()\n                .append('path')\n                .attr('class', 'debug yellow');\n\n            debugboxes.exit()\n                .remove();\n\n            debugboxes\n                .attr('d', d3.geo.path().projection(null));\n        }\n    }\n\n    drawLabels.supersurface = function(supersurface) {\n        supersurface\n            .on('mousemove.hidelabels', hideOnMouseover)\n            .on('mousedown.hidelabels', function () {\n                supersurface.on('mousemove.hidelabels', null);\n            })\n            .on('mouseup.hidelabels', function () {\n                supersurface.on('mousemove.hidelabels', hideOnMouseover);\n            });\n    };\n\n    return drawLabels;\n}\n","export function Layers(projection, context) {\n    var dispatch = d3.dispatch('change'),\n        svg = d3.select(null),\n        layers = [\n            { id: 'osm', layer: iD.svg.Osm(projection, context, dispatch) },\n            { id: 'gpx', layer: iD.svg.Gpx(projection, context, dispatch) },\n            { id: 'mapillary-images', layer: iD.svg.MapillaryImages(projection, context, dispatch) },\n            { id: 'mapillary-signs',  layer: iD.svg.MapillarySigns(projection, context, dispatch) },\n            { id: 'debug', layer: iD.svg.Debug(projection, context, dispatch) }\n        ];\n\n\n    function drawLayers(selection) {\n        svg = selection.selectAll('.surface')\n            .data([0]);\n\n        svg.enter()\n            .append('svg')\n            .attr('class', 'surface')\n            .append('defs');\n\n        var groups = svg.selectAll('.data-layer')\n            .data(layers);\n\n        groups.enter()\n            .append('g')\n            .attr('class', function(d) { return 'data-layer data-layer-' + d.id; });\n\n        groups\n            .each(function(d) { d3.select(this).call(d.layer); });\n\n        groups.exit()\n            .remove();\n    }\n\n    drawLayers.all = function() {\n        return layers;\n    };\n\n    drawLayers.layer = function(id) {\n        var obj = _.find(layers, function(o) {return o.id === id;});\n        return obj && obj.layer;\n    };\n\n    drawLayers.only = function(what) {\n        var arr = [].concat(what);\n        drawLayers.remove(_.difference(_.map(layers, 'id'), arr));\n        return this;\n    };\n\n    drawLayers.remove = function(what) {\n        var arr = [].concat(what);\n        arr.forEach(function(id) {\n            layers = _.reject(layers, function(o) {return o.id === id;});\n        });\n        dispatch.change();\n        return this;\n    };\n\n    drawLayers.add = function(what) {\n        var arr = [].concat(what);\n        arr.forEach(function(obj) {\n            if ('id' in obj && 'layer' in obj) {\n                layers.push(obj);\n            }\n        });\n        dispatch.change();\n        return this;\n    };\n\n    drawLayers.dimensions = function(_) {\n        if (!arguments.length) return svg.dimensions();\n        svg.dimensions(_);\n        layers.forEach(function(obj) {\n            if (obj.layer.dimensions) {\n                obj.layer.dimensions(_);\n            }\n        });\n        return this;\n    };\n\n\n    return d3.rebind(drawLayers, dispatch, 'on');\n}\n","export function Lines(projection) {\n\n    var highway_stack = {\n        motorway: 0,\n        motorway_link: 1,\n        trunk: 2,\n        trunk_link: 3,\n        primary: 4,\n        primary_link: 5,\n        secondary: 6,\n        tertiary: 7,\n        unclassified: 8,\n        residential: 9,\n        service: 10,\n        footway: 11\n    };\n\n    function waystack(a, b) {\n        var as = 0, bs = 0;\n\n        if (a.tags.highway) { as -= highway_stack[a.tags.highway]; }\n        if (b.tags.highway) { bs -= highway_stack[b.tags.highway]; }\n        return as - bs;\n    }\n\n    return function drawLines(surface, graph, entities, filter) {\n        var ways = [], pathdata = {}, onewaydata = {},\n            getPath = iD.svg.Path(projection, graph);\n\n        for (var i = 0; i < entities.length; i++) {\n            var entity = entities[i],\n                outer = iD.geo.simpleMultipolygonOuterMember(entity, graph);\n            if (outer) {\n                ways.push(entity.mergeTags(outer.tags));\n            } else if (entity.geometry(graph) === 'line') {\n                ways.push(entity);\n            }\n        }\n\n        ways = ways.filter(getPath);\n\n        pathdata = _.groupBy(ways, function(way) { return way.layer(); });\n\n        _.forOwn(pathdata, function(v, k) {\n            onewaydata[k] = _(v)\n                .filter(function(d) { return d.isOneWay(); })\n                .map(iD.svg.OneWaySegments(projection, graph, 35))\n                .flatten()\n                .valueOf();\n        });\n\n        var layergroup = surface\n            .selectAll('.layer-lines')\n            .selectAll('g.layergroup')\n            .data(d3.range(-10, 11));\n\n        layergroup.enter()\n            .append('g')\n            .attr('class', function(d) { return 'layer layergroup layer' + String(d); });\n\n\n        var linegroup = layergroup\n            .selectAll('g.linegroup')\n            .data(['shadow', 'casing', 'stroke']);\n\n        linegroup.enter()\n            .append('g')\n            .attr('class', function(d) { return 'layer linegroup line-' + d; });\n\n\n        var lines = linegroup\n            .selectAll('path')\n            .filter(filter)\n            .data(\n                function() { return pathdata[this.parentNode.parentNode.__data__] || []; },\n                iD.Entity.key\n            );\n\n        // Optimization: call simple TagClasses only on enter selection. This\n        // works because iD.Entity.key is defined to include the entity v attribute.\n        lines.enter()\n            .append('path')\n            .attr('class', function(d) { return 'way line ' + this.parentNode.__data__ + ' ' + d.id; })\n            .call(iD.svg.TagClasses());\n\n        lines\n            .sort(waystack)\n            .attr('d', getPath)\n            .call(iD.svg.TagClasses().tags(iD.svg.RelationMemberTags(graph)));\n\n        lines.exit()\n            .remove();\n\n\n        var onewaygroup = layergroup\n            .selectAll('g.onewaygroup')\n            .data(['oneway']);\n\n        onewaygroup.enter()\n            .append('g')\n            .attr('class', 'layer onewaygroup');\n\n\n        var oneways = onewaygroup\n            .selectAll('path')\n            .filter(filter)\n            .data(\n                function() { return onewaydata[this.parentNode.parentNode.__data__] || []; },\n                function(d) { return [d.id, d.index]; }\n            );\n\n        oneways.enter()\n            .append('path')\n            .attr('class', 'oneway')\n            .attr('marker-mid', 'url(#oneway-marker)');\n\n        oneways\n            .attr('d', function(d) { return d.d; });\n\n        if (iD.detect().ie) {\n            oneways.each(function() { this.parentNode.insertBefore(this, this); });\n        }\n\n        oneways.exit()\n            .remove();\n\n    };\n}\n","export function Midpoints(projection, context) {\n    return function drawMidpoints(surface, graph, entities, filter, extent) {\n        var poly = extent.polygon(),\n            midpoints = {};\n\n        for (var i = 0; i < entities.length; i++) {\n            var entity = entities[i];\n\n            if (entity.type !== 'way')\n                continue;\n            if (!filter(entity))\n                continue;\n            if (context.selectedIDs().indexOf(entity.id) < 0)\n                continue;\n\n            var nodes = graph.childNodes(entity);\n            for (var j = 0; j < nodes.length - 1; j++) {\n\n                var a = nodes[j],\n                    b = nodes[j + 1],\n                    id = [a.id, b.id].sort().join('-');\n\n                if (midpoints[id]) {\n                    midpoints[id].parents.push(entity);\n                } else {\n                    if (iD.geo.euclideanDistance(projection(a.loc), projection(b.loc)) > 40) {\n                        var point = iD.geo.interp(a.loc, b.loc, 0.5),\n                            loc = null;\n\n                        if (extent.intersects(point)) {\n                            loc = point;\n                        } else {\n                            for (var k = 0; k < 4; k++) {\n                                point = iD.geo.lineIntersection([a.loc, b.loc], [poly[k], poly[k+1]]);\n                                if (point &&\n                                    iD.geo.euclideanDistance(projection(a.loc), projection(point)) > 20 &&\n                                    iD.geo.euclideanDistance(projection(b.loc), projection(point)) > 20)\n                                {\n                                    loc = point;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (loc) {\n                            midpoints[id] = {\n                                type: 'midpoint',\n                                id: id,\n                                loc: loc,\n                                edge: [a.id, b.id],\n                                parents: [entity]\n                            };\n                        }\n                    }\n                }\n            }\n        }\n\n        function midpointFilter(d) {\n            if (midpoints[d.id])\n                return true;\n\n            for (var i = 0; i < d.parents.length; i++)\n                if (filter(d.parents[i]))\n                    return true;\n\n            return false;\n        }\n\n        var groups = surface.selectAll('.layer-hit').selectAll('g.midpoint')\n            .filter(midpointFilter)\n            .data(_.values(midpoints), function(d) { return d.id; });\n\n        var enter = groups.enter()\n            .insert('g', ':first-child')\n            .attr('class', 'midpoint');\n\n        enter.append('polygon')\n            .attr('points', '-6,8 10,0 -6,-8')\n            .attr('class', 'shadow');\n\n        enter.append('polygon')\n            .attr('points', '-3,4 5,0 -3,-4')\n            .attr('class', 'fill');\n\n        groups\n            .attr('transform', function(d) {\n                var translate = iD.svg.PointTransform(projection),\n                    a = context.entity(d.edge[0]),\n                    b = context.entity(d.edge[1]),\n                    angle = Math.round(iD.geo.angle(a, b, projection) * (180 / Math.PI));\n                return translate(d) + ' rotate(' + angle + ')';\n            })\n            .call(iD.svg.TagClasses().tags(\n                function(d) { return d.parents[0].tags; }\n            ));\n\n        // Propagate data bindings.\n        groups.select('polygon.shadow');\n        groups.select('polygon.fill');\n\n        groups.exit()\n            .remove();\n    };\n}\n","export function Points(projection, context) {\n    function markerPath(selection, klass) {\n        selection\n            .attr('class', klass)\n            .attr('transform', 'translate(-8, -23)')\n            .attr('d', 'M 17,8 C 17,13 11,21 8.5,23.5 C 6,21 0,13 0,8 C 0,4 4,-0.5 8.5,-0.5 C 13,-0.5 17,4 17,8 z');\n    }\n\n    function sortY(a, b) {\n        return b.loc[1] - a.loc[1];\n    }\n\n    return function drawPoints(surface, graph, entities, filter) {\n        var wireframe = surface.classed('fill-wireframe'),\n            points = wireframe ? [] : _.filter(entities, function(e) {\n                return e.geometry(graph) === 'point';\n            });\n\n        points.sort(sortY);\n\n        var groups = surface.selectAll('.layer-hit').selectAll('g.point')\n            .filter(filter)\n            .data(points, iD.Entity.key);\n\n        var group = groups.enter()\n            .append('g')\n            .attr('class', function(d) { return 'node point ' + d.id; })\n            .order();\n\n        group.append('path')\n            .call(markerPath, 'shadow');\n\n        group.append('path')\n            .call(markerPath, 'stroke');\n\n        group.append('use')\n            .attr('transform', 'translate(-6, -20)')\n            .attr('class', 'icon')\n            .attr('width', '12px')\n            .attr('height', '12px');\n\n        groups.attr('transform', iD.svg.PointTransform(projection))\n            .call(iD.svg.TagClasses());\n\n        // Selecting the following implicitly\n        // sets the data (point entity) on the element\n        groups.select('.shadow');\n        groups.select('.stroke');\n        groups.select('.icon')\n            .attr('xlink:href', function(entity) {\n                var preset = context.presets().match(entity, graph);\n                return preset.icon ? '#' + preset.icon + '-12' : '';\n            });\n\n        groups.exit()\n            .remove();\n    };\n}\n","export function Vertices(projection, context) {\n    var radiuses = {\n        //       z16-, z17, z18+, tagged\n        shadow: [6,    7.5,   7.5,  11.5],\n        stroke: [2.5,  3.5,   3.5,  7],\n        fill:   [1,    1.5,   1.5,  1.5]\n    };\n\n    var hover;\n\n    function siblingAndChildVertices(ids, graph, extent) {\n        var vertices = {};\n\n        function addChildVertices(entity) {\n            if (!context.features().isHiddenFeature(entity, graph, entity.geometry(graph))) {\n                var i;\n                if (entity.type === 'way') {\n                    for (i = 0; i < entity.nodes.length; i++) {\n                        addChildVertices(graph.entity(entity.nodes[i]));\n                    }\n                } else if (entity.type === 'relation') {\n                    for (i = 0; i < entity.members.length; i++) {\n                        var member = context.hasEntity(entity.members[i].id);\n                        if (member) {\n                            addChildVertices(member);\n                        }\n                    }\n                } else if (entity.intersects(extent, graph)) {\n                    vertices[entity.id] = entity;\n                }\n            }\n        }\n\n        ids.forEach(function(id) {\n            var entity = context.hasEntity(id);\n            if (entity && entity.type === 'node') {\n                vertices[entity.id] = entity;\n                context.graph().parentWays(entity).forEach(function(entity) {\n                    addChildVertices(entity);\n                });\n            } else if (entity) {\n                addChildVertices(entity);\n            }\n        });\n\n        return vertices;\n    }\n\n    function draw(selection, vertices, klass, graph, zoom) {\n        var icons = {},\n            z = (zoom < 17 ? 0 : zoom < 18 ? 1 : 2);\n\n        var groups = selection\n            .data(vertices, iD.Entity.key);\n\n        function icon(entity) {\n            if (entity.id in icons) return icons[entity.id];\n            icons[entity.id] =\n                entity.hasInterestingTags() &&\n                context.presets().match(entity, graph).icon;\n            return icons[entity.id];\n        }\n\n        function setClass(klass) {\n            return function(entity) {\n                this.setAttribute('class', 'node vertex ' + klass + ' ' + entity.id);\n            };\n        }\n\n        function setAttributes(selection) {\n            ['shadow','stroke','fill'].forEach(function(klass) {\n                var rads = radiuses[klass];\n                selection.selectAll('.' + klass)\n                    .each(function(entity) {\n                        var i = z && icon(entity),\n                            c = i ? 0.5 : 0,\n                            r = rads[i ? 3 : z];\n                        this.setAttribute('cx', c);\n                        this.setAttribute('cy', -c);\n                        this.setAttribute('r', r);\n                        if (i && klass === 'fill') {\n                            this.setAttribute('visibility', 'hidden');\n                        } else {\n                            this.removeAttribute('visibility');\n                        }\n                    });\n            });\n\n            selection.selectAll('use')\n                .each(function() {\n                    if (z) {\n                        this.removeAttribute('visibility');\n                    } else {\n                        this.setAttribute('visibility', 'hidden');\n                    }\n                });\n        }\n\n        var enter = groups.enter()\n            .append('g')\n            .attr('class', function(d) { return 'node vertex ' + klass + ' ' + d.id; });\n\n        enter.append('circle')\n            .each(setClass('shadow'));\n\n        enter.append('circle')\n            .each(setClass('stroke'));\n\n        // Vertices with icons get a `use`.\n        enter.filter(function(d) { return icon(d); })\n            .append('use')\n            .attr('transform', 'translate(-6, -6)')\n            .attr('xlink:href', function(d) { return '#' + icon(d) + '-12'; })\n            .attr('width', '12px')\n            .attr('height', '12px')\n            .each(setClass('icon'));\n\n        // Vertices with tags get a fill.\n        enter.filter(function(d) { return d.hasInterestingTags(); })\n            .append('circle')\n            .each(setClass('fill'));\n\n        groups\n            .attr('transform', iD.svg.PointTransform(projection))\n            .classed('shared', function(entity) { return graph.isShared(entity); })\n            .call(setAttributes);\n\n        groups.exit()\n            .remove();\n    }\n\n    function drawVertices(surface, graph, entities, filter, extent, zoom) {\n        var selected = siblingAndChildVertices(context.selectedIDs(), graph, extent),\n            wireframe = surface.classed('fill-wireframe'),\n            vertices = [];\n\n        for (var i = 0; i < entities.length; i++) {\n            var entity = entities[i],\n                geometry = entity.geometry(graph);\n\n            if (wireframe && geometry === 'point') {\n                vertices.push(entity);\n                continue;\n            }\n\n            if (geometry !== 'vertex')\n                continue;\n\n            if (entity.id in selected ||\n                entity.hasInterestingTags() ||\n                entity.isIntersection(graph)) {\n                vertices.push(entity);\n            }\n        }\n\n        surface.selectAll('.layer-hit').selectAll('g.vertex.vertex-persistent')\n            .filter(filter)\n            .call(draw, vertices, 'vertex-persistent', graph, zoom);\n\n        drawHover(surface, graph, extent, zoom);\n    }\n\n    function drawHover(surface, graph, extent, zoom) {\n        var hovered = hover ? siblingAndChildVertices([hover.id], graph, extent) : {};\n\n        surface.selectAll('.layer-hit').selectAll('g.vertex.vertex-hover')\n            .call(draw, d3.values(hovered), 'vertex-hover', graph, zoom);\n    }\n\n    drawVertices.drawHover = function(surface, graph, target, extent, zoom) {\n        if (target === hover) return;\n        hover = target;\n        drawHover(surface, graph, extent, zoom);\n    };\n\n    return drawVertices;\n}\n","import { setTransform, fastMouse } from '../util/index';\nimport { interp, Extent } from '../geo/index';\nimport { Layers, Areas, Midpoints, Points, Vertices, Lines, Labels } from '../svg/index';\nimport { flash } from '../ui/core/index';\n\nexport function Map(context) {\n    var dimensions = [1, 1],\n        dispatch = d3.dispatch('move', 'drawn'),\n        projection = context.projection,\n        zoom = d3.behavior.zoom()\n            .translate(projection.translate())\n            .scale(projection.scale() * 2 * Math.PI)\n            .scaleExtent([1024, 256 * Math.pow(2, 24)])\n            .on('zoom', zoomPan),\n        dblclickEnabled = true,\n        redrawEnabled = true,\n        transformStart,\n        transformed = false,\n        easing = false,\n        minzoom = 0,\n        drawLayers = Layers(projection, context),\n        drawPoints = Points(projection, context),\n        drawVertices = Vertices(projection, context),\n        drawLines = Lines(projection),\n        drawAreas = Areas(projection),\n        drawMidpoints = Midpoints(projection, context),\n        drawLabels = Labels(projection, context),\n        supersurface,\n        wrapper,\n        surface,\n        mouse,\n        mousemove;\n\n    function map(selection) {\n        context\n            .on('change.map', redraw);\n        context.history()\n            .on('change.map', redraw);\n        context.background()\n            .on('change.map', redraw);\n        context.features()\n            .on('redraw.map', redraw);\n        drawLayers\n            .on('change.map', function() {\n                context.background().updateImagery();\n                redraw();\n            });\n\n        selection\n            .on('dblclick.map', dblClick)\n            .call(zoom);\n\n        supersurface = selection.append('div')\n            .attr('id', 'supersurface')\n            .call(setTransform, 0, 0);\n\n        // Need a wrapper div because Opera can't cope with an absolutely positioned\n        // SVG element: http://bl.ocks.org/jfirebaugh/6fbfbd922552bf776c16\n        wrapper = supersurface\n            .append('div')\n            .attr('class', 'layer layer-data');\n\n        map.surface = surface = wrapper\n            .call(drawLayers)\n            .selectAll('.surface')\n            .attr('id', 'surface');\n\n        surface\n            .on('mousedown.zoom', function() {\n                if (d3.event.button === 2) {\n                    d3.event.stopPropagation();\n                }\n            }, true)\n            .on('mouseup.zoom', function() {\n                if (resetTransform()) redraw();\n            })\n            .on('mousemove.map', function() {\n                mousemove = d3.event;\n            })\n            .on('mouseover.vertices', function() {\n                if (map.editable() && !transformed) {\n                    var hover = d3.event.target.__data__;\n                    surface.call(drawVertices.drawHover, context.graph(), hover, map.extent(), map.zoom());\n                    dispatch.drawn({full: false});\n                }\n            })\n            .on('mouseout.vertices', function() {\n                if (map.editable() && !transformed) {\n                    var hover = d3.event.relatedTarget && d3.event.relatedTarget.__data__;\n                    surface.call(drawVertices.drawHover, context.graph(), hover, map.extent(), map.zoom());\n                    dispatch.drawn({full: false});\n                }\n            });\n\n\n        supersurface\n            .call(context.background());\n\n\n        context.on('enter.map', function() {\n            if (map.editable() && !transformed) {\n                var all = context.intersects(map.extent()),\n                    filter = d3.functor(true),\n                    graph = context.graph();\n\n                all = context.features().filter(all, graph);\n                surface\n                    .call(drawVertices, graph, all, filter, map.extent(), map.zoom())\n                    .call(drawMidpoints, graph, all, filter, map.trimmedExtent());\n                dispatch.drawn({full: false});\n            }\n        });\n\n        map.dimensions(selection.dimensions());\n\n        drawLabels.supersurface(supersurface);\n    }\n\n    function pxCenter() {\n        return [dimensions[0] / 2, dimensions[1] / 2];\n    }\n\n    function drawVector(difference, extent) {\n        var graph = context.graph(),\n            features = context.features(),\n            all = context.intersects(map.extent()),\n            data, filter;\n\n        if (difference) {\n            var complete = difference.complete(map.extent());\n            data = _.compact(_.values(complete));\n            filter = function(d) { return d.id in complete; };\n            features.clear(data);\n\n        } else {\n            // force a full redraw if gatherStats detects that a feature\n            // should be auto-hidden (e.g. points or buildings)..\n            if (features.gatherStats(all, graph, dimensions)) {\n                extent = undefined;\n            }\n\n            if (extent) {\n                data = context.intersects(map.extent().intersection(extent));\n                var set = d3.set(_.map(data, 'id'));\n                filter = function(d) { return set.has(d.id); };\n\n            } else {\n                data = all;\n                filter = d3.functor(true);\n            }\n        }\n\n        data = features.filter(data, graph);\n\n        surface\n            .call(drawVertices, graph, data, filter, map.extent(), map.zoom())\n            .call(drawLines, graph, data, filter)\n            .call(drawAreas, graph, data, filter)\n            .call(drawMidpoints, graph, data, filter, map.trimmedExtent())\n            .call(drawLabels, graph, data, filter, dimensions, !difference && !extent)\n            .call(drawPoints, graph, data, filter);\n\n        dispatch.drawn({full: true});\n    }\n\n    function editOff() {\n        context.features().resetStats();\n        surface.selectAll('.layer-osm *').remove();\n        dispatch.drawn({full: true});\n    }\n\n    function dblClick() {\n        if (!dblclickEnabled) {\n            d3.event.preventDefault();\n            d3.event.stopImmediatePropagation();\n        }\n    }\n\n    function zoomPan() {\n        if (Math.log(d3.event.scale) / Math.LN2 - 8 < minzoom) {\n            surface.interrupt();\n            flash(context.container())\n                .select('.content')\n                .text(t('cannot_zoom'));\n            setZoom(context.minEditableZoom(), true);\n            queueRedraw();\n            dispatch.move(map);\n            return;\n        }\n\n        projection\n            .translate(d3.event.translate)\n            .scale(d3.event.scale / (2 * Math.PI));\n\n        var scale = d3.event.scale / transformStart[0],\n            tX = (d3.event.translate[0] / scale - transformStart[1][0]) * scale,\n            tY = (d3.event.translate[1] / scale - transformStart[1][1]) * scale;\n\n        transformed = true;\n        setTransform(supersurface, tX, tY, scale);\n        queueRedraw();\n\n        dispatch.move(map);\n    }\n\n    function resetTransform() {\n        if (!transformed) return false;\n\n        surface.selectAll('.radial-menu').interrupt().remove();\n        setTransform(supersurface, 0, 0);\n        transformed = false;\n        return true;\n    }\n\n    function redraw(difference, extent) {\n        if (!surface || !redrawEnabled) return;\n\n        clearTimeout(timeoutId);\n\n        // If we are in the middle of a zoom/pan, we can't do differenced redraws.\n        // It would result in artifacts where differenced entities are redrawn with\n        // one transform and unchanged entities with another.\n        if (resetTransform()) {\n            difference = extent = undefined;\n        }\n\n        var zoom = String(~~map.zoom());\n        if (surface.attr('data-zoom') !== zoom) {\n            surface.attr('data-zoom', zoom)\n                .classed('low-zoom', zoom <= 16);\n        }\n\n        if (!difference) {\n            supersurface.call(context.background());\n        }\n\n        // OSM\n        if (map.editable()) {\n            context.loadTiles(projection, dimensions);\n            drawVector(difference, extent);\n        } else {\n            editOff();\n        }\n\n        wrapper\n            .call(drawLayers);\n\n        transformStart = [\n            projection.scale() * 2 * Math.PI,\n            projection.translate().slice()];\n\n        return map;\n    }\n\n    var timeoutId;\n    function queueRedraw() {\n        timeoutId = setTimeout(function() { redraw(); }, 750);\n    }\n\n    function pointLocation(p) {\n        var translate = projection.translate(),\n            scale = projection.scale() * 2 * Math.PI;\n        return [(p[0] - translate[0]) / scale, (p[1] - translate[1]) / scale];\n    }\n\n    function locationPoint(l) {\n        var translate = projection.translate(),\n            scale = projection.scale() * 2 * Math.PI;\n        return [l[0] * scale + translate[0], l[1] * scale + translate[1]];\n    }\n\n    map.mouse = function() {\n        var e = mousemove || d3.event, s;\n        while ((s = e.sourceEvent)) e = s;\n        return mouse(e);\n    };\n\n    map.mouseCoordinates = function() {\n        return projection.invert(map.mouse());\n    };\n\n    map.dblclickEnable = function(_) {\n        if (!arguments.length) return dblclickEnabled;\n        dblclickEnabled = _;\n        return map;\n    };\n\n    map.redrawEnable = function(_) {\n        if (!arguments.length) return redrawEnabled;\n        redrawEnabled = _;\n        return map;\n    };\n\n    function interpolateZoom(_) {\n        var k = projection.scale(),\n            t = projection.translate();\n\n        surface.node().__chart__ = {\n            x: t[0],\n            y: t[1],\n            k: k * 2 * Math.PI\n        };\n\n        setZoom(_);\n        projection.scale(k).translate(t);  // undo setZoom projection changes\n\n        zoom.event(surface.transition());\n    }\n\n    function setZoom(_, force) {\n        if (_ === map.zoom() && !force)\n            return false;\n        var scale = 256 * Math.pow(2, _),\n            center = pxCenter(),\n            l = pointLocation(center);\n        scale = Math.max(1024, Math.min(256 * Math.pow(2, 24), scale));\n        projection.scale(scale / (2 * Math.PI));\n        zoom.scale(scale);\n        var t = projection.translate();\n        l = locationPoint(l);\n        t[0] += center[0] - l[0];\n        t[1] += center[1] - l[1];\n        projection.translate(t);\n        zoom.translate(projection.translate());\n        return true;\n    }\n\n    function setCenter(_) {\n        var c = map.center();\n        if (_[0] === c[0] && _[1] === c[1])\n            return false;\n        var t = projection.translate(),\n            pxC = pxCenter(),\n            ll = projection(_);\n        projection.translate([\n            t[0] - ll[0] + pxC[0],\n            t[1] - ll[1] + pxC[1]]);\n        zoom.translate(projection.translate());\n        return true;\n    }\n\n    map.pan = function(d) {\n        var t = projection.translate();\n        t[0] += d[0];\n        t[1] += d[1];\n        projection.translate(t);\n        zoom.translate(projection.translate());\n        dispatch.move(map);\n        return redraw();\n    };\n\n    map.dimensions = function(_) {\n        if (!arguments.length) return dimensions;\n        var center = map.center();\n        dimensions = _;\n        drawLayers.dimensions(dimensions);\n        context.background().dimensions(dimensions);\n        projection.clipExtent([[0, 0], dimensions]);\n        mouse = fastMouse(supersurface.node());\n        setCenter(center);\n        return redraw();\n    };\n\n    function zoomIn(integer) {\n      interpolateZoom(~~map.zoom() + integer);\n    }\n\n    function zoomOut(integer) {\n      interpolateZoom(~~map.zoom() - integer);\n    }\n\n    map.zoomIn = function() { zoomIn(1); };\n    map.zoomInFurther = function() { zoomIn(4); };\n\n    map.zoomOut = function() { zoomOut(1); };\n    map.zoomOutFurther = function() { zoomOut(4); };\n\n    map.center = function(loc) {\n        if (!arguments.length) {\n            return projection.invert(pxCenter());\n        }\n\n        if (setCenter(loc)) {\n            dispatch.move(map);\n        }\n\n        return redraw();\n    };\n\n    map.zoom = function(z) {\n        if (!arguments.length) {\n            return Math.max(Math.log(projection.scale() * 2 * Math.PI) / Math.LN2 - 8, 0);\n        }\n\n        if (z < minzoom) {\n            surface.interrupt();\n            flash(context.container())\n                .select('.content')\n                .text(t('cannot_zoom'));\n            z = context.minEditableZoom();\n        }\n\n        if (setZoom(z)) {\n            dispatch.move(map);\n        }\n\n        return redraw();\n    };\n\n    map.zoomTo = function(entity, zoomLimits) {\n        var extent = entity.extent(context.graph());\n        if (!isFinite(extent.area())) return;\n\n        var zoom = map.trimmedExtentZoom(extent);\n        zoomLimits = zoomLimits || [context.minEditableZoom(), 20];\n        map.centerZoom(extent.center(), Math.min(Math.max(zoom, zoomLimits[0]), zoomLimits[1]));\n    };\n\n    map.centerZoom = function(loc, z) {\n        var centered = setCenter(loc),\n            zoomed   = setZoom(z);\n\n        if (centered || zoomed) {\n            dispatch.move(map);\n        }\n\n        return redraw();\n    };\n\n    map.centerEase = function(loc2, duration) {\n        duration = duration || 250;\n\n        surface.one('mousedown.ease', function() {\n            map.cancelEase();\n        });\n\n        if (easing) {\n            map.cancelEase();\n        }\n\n        var t1 = Date.now(),\n            t2 = t1 + duration,\n            loc1 = map.center(),\n            ease = d3.ease('cubic-in-out');\n\n        easing = true;\n\n        d3.timer(function() {\n            if (!easing) return true;  // cancelled ease\n\n            var tNow = Date.now();\n            if (tNow > t2) {\n                tNow = t2;\n                easing = false;\n            }\n\n            var locNow = interp(loc1, loc2, ease((tNow - t1) / duration));\n            setCenter(locNow);\n\n            d3.event = {\n                scale: zoom.scale(),\n                translate: zoom.translate()\n            };\n\n            zoomPan();\n            return !easing;\n        });\n\n        return map;\n    };\n\n    map.cancelEase = function() {\n        easing = false;\n        d3.timer.flush();\n        return map;\n    };\n\n    map.extent = function(_) {\n        if (!arguments.length) {\n            return new Extent(projection.invert([0, dimensions[1]]),\n                                 projection.invert([dimensions[0], 0]));\n        } else {\n            var extent = Extent(_);\n            map.centerZoom(extent.center(), map.extentZoom(extent));\n        }\n    };\n\n    map.trimmedExtent = function(_) {\n        if (!arguments.length) {\n            var headerY = 60, footerY = 30, pad = 10;\n            return new Extent(projection.invert([pad, dimensions[1] - footerY - pad]),\n                    projection.invert([dimensions[0] - pad, headerY + pad]));\n        } else {\n            var extent = Extent(_);\n            map.centerZoom(extent.center(), map.trimmedExtentZoom(extent));\n        }\n    };\n\n    function calcZoom(extent, dim) {\n        var tl = projection([extent[0][0], extent[1][1]]),\n            br = projection([extent[1][0], extent[0][1]]);\n\n        // Calculate maximum zoom that fits extent\n        var hFactor = (br[0] - tl[0]) / dim[0],\n            vFactor = (br[1] - tl[1]) / dim[1],\n            hZoomDiff = Math.log(Math.abs(hFactor)) / Math.LN2,\n            vZoomDiff = Math.log(Math.abs(vFactor)) / Math.LN2,\n            newZoom = map.zoom() - Math.max(hZoomDiff, vZoomDiff);\n\n        return newZoom;\n    }\n\n    map.extentZoom = function(_) {\n        return calcZoom(Extent(_), dimensions);\n    };\n\n    map.trimmedExtentZoom = function(_) {\n        var trimY = 120, trimX = 40,\n            trimmed = [dimensions[0] - trimX, dimensions[1] - trimY];\n        return calcZoom(Extent(_), trimmed);\n    };\n\n    map.editable = function() {\n        return map.zoom() >= context.minEditableZoom();\n    };\n\n    map.minzoom = function(_) {\n        if (!arguments.length) return minzoom;\n        minzoom = _;\n        return map;\n    };\n\n    map.layers = drawLayers;\n\n    return d3.rebind(map, dispatch, 'on');\n}\n"],"names":["wrap","modal","Lasso","angle","Circularize","Disconnect","Merge","Move","Orthogonalize","Split","Reverse","RotateWay","Straighten","Select","Save","SelectBehavior","Operations.Delete","presets","Background"],"mappings":"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"}